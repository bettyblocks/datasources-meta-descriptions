{
  "swagger": "2.0",
  "info": {
    "version": "HighQ 5.7.4 app17a.sg1 t975 ",
    "title": "HighQ Direct"
  },
  "basePath": "/your-instance/api",
  "tags": [
    { "name": "Site Resource APIs" },
    { "name": "System Reports APIs" },
    { "name": "System Resource" },
    { "name": "AIHub API" },
    { "name": "Activity" },
    { "name": "Attachment API" },
    { "name": "Blog API" },
    { "name": "Comments API" },
    { "name": "Contract Express Admin API" },
    { "name": "Document Resource APIs" },
    { "name": "Events APIs" },
    { "name": "  Followers/ Following Resource" },
    { "name": "ISheet Admin API" },
    { "name": "ISheet Module" },
    { "name": "ISheet API" },
    { "name": "ISheet System Admin" },
    { "name": "Likes API" },
    { "name": "Microblog Resource" },
    { "name": "Navigation" },
    { "name": "Organisation" },
    { "name": "Exceptiondomains" },
    { "name": "Domains" },
    { "name": "Configuration" },
    { "name": "Orgaddress" },
    { "name": "Countries" },
    { "name": "Private Message" },
    { "name": "Sitetemplates" },
    { "name": "Sitecategories" },
    { "name": "System Groups" },
    { "name": "Tasks APIs" },
    { "name": "User" },
    { "name": "Approval Workflow APIs" },
    { "name": "Dataviz Panel API" },
    { "name": "Favourites API" },
    { "name": "Legal Tracker Integration Resource" },
    { "name": "Notification API" },
    { "name": "People API" },
    { "name": "Search API" },
    { "name": "Tag API" },
    { "name": "Task Template API" },
    { "name": "Two Factor Auth API" },
    { "name": "Wiki API" }
  ],
  "schemes": ["https"],
  "paths": {
    "/{version}/sites/{siteid}": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get site",
        "description": "<p>The get site API returned the details for a site. Anyone with site access in Collaborate is permitted to use this API endpoint.<br>The fields returned for the site object are determined based on user permissions. If the user is a site admin user then they will get fields like Admin Notes otherwise not.<br>The current implementation does not include logo link.<br>The response object contains the user ID of the site owner.<br>The API responds with an access denied message when 'My site' details of another user are accessed.<br>Blank values for individual fields are not returned in the XML response, absence of value in the returned XML means that either the value does not exist for that field or the user does not have access to that field.<br>From version 7 onwards module tag will be in response to all user (Not only Admin) , and enable=0/1 will be based on either ON/OFF or have access (for normal users) to that module.<br>API version 8 onwards, a new tag 'restrictiontype' is added as part of 'Site Security API' functionality.There will be 8 restrictions shown under this tag each with value 0/1 to show whether the respective feature is enabled or disabled for the site.<br>API version 10 onwards, multiple matter numbers are supported. </p><p>API version 11 onwards, statusid is supported.</p><br/><br/><p>API version 13 onwards, last accessed date is supported to normal user</p><br/><br/>Please note, all the properties/elements in get site response are not updatable/insertable. See below table to know which are read only, updatable or insertable.<br/><table border='1' cellpadding='1' cellspacing='1' style='width:80%;'>\t<thead>\t\t<tr>\t\t\t<th scope='col'>\t\t\t<p>Property</p>\t</th>\t\t\t<th scope='col'>Expected values ( Default value)</th>\t\t\t<th scope='col'>Purpose</th>\t\t\t<th scope='col'>Operation (READ, WRITE, UPDATE)</th>\t\t</tr>\t</thead>\t<tbody>\t\t<tr>\t\t<td>\t\t\t<p>id</p>\t\t</td>\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of site</td>\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t<p>sitename</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Name of the site</p>\t\t\t<p>(If the API version is less than 6, then the returned sitename is in default language, otherwise the returned sitename is in the user preferred language)</p>\t\t\t</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>role</p>\t\t\t</td>\t\t\t<td>String (CONTACT values)</td>\t\t\t<td>The role (Permissions) of the API user calling the API method</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitedescription</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The description of the site</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderID</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of the root folder in the site. Use this value to get the list of folders and files in the site</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderpermission</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The site folder access. Possible values are UPDATE/ADDFILE/VIEW</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>adminnote</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The note is visible to admins only</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category id</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Category of the site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category name</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site category name</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module home</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable home module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module activity</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable activity module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module document</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable document/file module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module wiki</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable wiki module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module blog</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable blog module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module task</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable task module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module event</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable event module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module isheet</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable isheet module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module qa</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable qa module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module people</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable people module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>startdate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>End date of site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>createddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>archivedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was archived</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>type</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Deprecated in 4.3</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>clientno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site client number</p>\t\t\t<p>allow max 500 character</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matterno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site matter number</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>status</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Status of site - Active, Read only, Archive and Preparation</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>size</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Size of site due to its content(files and folders)</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnotes</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnextinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billinglastinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>filepagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of files accessed</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>maxpagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of all the files</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize activedocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of active documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize deleteddocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of deleted documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize totalsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Total size</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>issyncable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>If site is supported for sync (For HighQ Drive use).</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner firstname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner first name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner lastname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner last name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner email</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner userid</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Site owner user ID in case of existing user</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file permissionlevel</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>File permission at site level. Possible values&nbsp;SITE_ONLY/SITE_AND_FOLDERS/SITE_FOLDERS_AND_FILES</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file approvaldocumentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable document workflow</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file emailnotification</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable force and suppress email notifications for files while uploading</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file allowbulkdownload</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable bulk download for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file showsitemap</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable index page for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable files inbox functionality</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox accountname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Email id from which files can be sent in files module through email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enforceusergroups</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable group based permissions in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable normal bidder site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite advancedqapermission</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable advanced bidder functionality in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>contactus type values value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For contact us link in footer as well as in notification emails</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>landingpage</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page to land when site is selected. This is mandatory when adding new site, non mandatory for update site.</td>\t\t\t<td>RWU (Read from 4.3.6 onwards)</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation languagecode</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>User&#39;s language and country code</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The value returns site name in specific language</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType passwordprotected</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is password protected or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType twoFactorAuthentication</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has 2FA enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType termsandconditions</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has T&C set or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType iprestrictedsite</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is IP restricted or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType drm</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has DRM enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType checkout</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has Checkin / Checkout enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType documentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site document workflow is enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType visiableonhighqdrive</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is visible on HighQ Drive or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>itemid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>An item ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitemetadatasheetid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>A sheet ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>mysite</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the site is My Site. true = My Site, false = Normal site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Matter ID.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno readonly</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the matter ID will be readonly on UI. true = Matter ID will be readonly and cannot be removed from the site.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>lastaccesseddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Last accessed date of the site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>statusid</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>1 if site status Active<br/>\t\t\t2 if site status Readonly<br/>\t\t\t3 if site status Archived<br/>\t\t\t4 if site status Preparation<br/> \t\t\t</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enableFileSharing</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Enable secure file sharing</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>allowViewRightUserToShareFile</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Allow users with view rights share files</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enableDuplicateFileDetection</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Enable duplicate file detection</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>duplicateFileDetectionLevel</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Duplicate file detection level</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t</tbody></table>",
        "operationId": "getSite",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site in question",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/site" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Update site",
        "description": "<p>Use this API endpoint to update the details of an existing site. The API supports the same fields used in Create site API.</p><br><br><p>This method supports multiple matter numbers to add into site using API version 10 on ward. \"matternos\" tag indicates multiple matter numbers with readonly or not.</matternos></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><p>Matter number(s) is (are) required</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>151</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>You cannot have duplicate matter numbers</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>451</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>10</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The given siteid is invalid</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>213</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>Invalid site status. Valid values are Active, Preparation and Read only</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>458</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The site status is required</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>459</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p><br/><br/>Please note, all the properties/elements in get site response are not updatable/insertable. See below table to know which are read only, updatable or insertable.<br/><table border='1' cellpadding='1' cellspacing='1' style='width:80%;'>\t<thead>\t\t<tr>\t\t\t<th scope='col'>\t\t\t<p>Property</p>\t\t\t</th>\t\t\t<th scope='col'>Expected values ( Default value)</th>\t\t\t<th scope='col'>Purpose</th>\t\t\t<th scope='col'>Operation (READ, WRITE, UPDATE)</th>\t\t</tr>\t</thead>\t<tbody>\t\t<tr>\t\t\t<td>\t\t\t<p>id</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of site</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitename</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Name of the site</p>\t\t\t<p>(If the API version is less than 6, then the returned sitename is in default language, otherwise the returned sitename is in the user preferred language)</p>\t\t\t</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>role</p>\t\t\t</td>\t\t\t<td>String (CONTACT values)</td>\t\t\t<td>The role (Permissions) of the API user calling the API method</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitedescription</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The description of the site</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitetemplateid</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of the site template. This should be used when creating a new site using a site template</td>\t\t\t<td>RW</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderID</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of the root folder in the site. Use this value to get the list of folders and files in the site</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderpermission</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The site folder access. Possible values are UPDATE/ADDFILE/VIEW</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>adminnote</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The note is visible to admins only</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category id</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Category of the site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category name</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site category name</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module home</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable home module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module activity</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable activity module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module document</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable document/file module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module wiki</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable wiki module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module blog</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable blog module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module task</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable task module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module event</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable event module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module isheet</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable isheet module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module qa</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable qa module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module people</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable people module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>startdate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>End date of site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>createddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>archivedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was archived</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>type</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Deprecated in 4.3</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>clientno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site client number</p>\t\t\t<p>allow max 500 character</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matterno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site matter number</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>status</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Status of site - Active, Read only and Preparation</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>size</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Size of site due to its content(files and folders)</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnotes</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnextinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billinglastinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>filepagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of files accessed</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>maxpagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of all the files</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize activedocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of active documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize deleteddocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of deleted documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize totalsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Total size</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>issyncable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>If site is supported for sync (For HighQ Drive use).</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner firstname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner first name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner lastname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner last name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner email</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner userid</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Site owner user ID in case of existing user</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file permissionlevel</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>File permission at site level. Possible values&nbsp;SITE_ONLY/SITE_AND_FOLDERS/SITE_FOLDERS_AND_FILES</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file approvaldocumentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable document workflow</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file emailnotification</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable force and suppress email notifications for files while uploading</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file allowbulkdownload</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable bulk download for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file showsitemap</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable index page for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable files inbox functionality</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox accountname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Email id from which files can be sent in files module through email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enforceusergroups</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable group based permissions in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable normal bidder site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite advancedqapermission</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable advanced bidder functionality in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>contactus type values value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For contact us link in footer as well as in notification emails</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>landingpage</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page to land when site is selected. This is mandatory when adding new site, non mandatory for update site.</td>\t\t\t<td>RWU (Read from 4.3.6 onwards)</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation languagecode</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>User&#39;s language and country code</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The value returns site name in specific language</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType passwordprotected</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is password protected or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType twoFactorAuthentication</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has 2FA enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType termsandconditions</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has T&C set or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType iprestrictedsite</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is IP restricted or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType drm</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has DRM enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType checkout</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has Checkin / Checkout enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType documentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site document workflow is enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType visiableonhighqdrive</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is visible on HighQ Drive or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>itemid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>An item ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitemetadatasheetid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>A sheet ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>mysite</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the site is My Site. true = My Site, false = Normal site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Matter ID.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno readonly</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the matter ID will be readonly on UI. true = Matter ID will be readonly and cannot be removed from the site.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>lastaccesseddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Last accessed date of the site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t</tbody></table>",
        "operationId": "updateSite",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/site" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while gettting site"
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Site Resource APIs"],
        "summary": "Delete site",
        "description": "<p>This API method is used to delete a site. The site is marked as archived and the system admin can revert the action if required. The system throws an 'Access Denied' message if the site does not exist.<br>If a delete file request is sent through the API for a site that has already been archived, the API will return a 200 OK response to that request.<br>'My site' cannot be deleted using this API method.<br><b>Response</b><br>The system sends a 200 OK response in case of success and throws an error object in case of an error.\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The given siteid is invalid.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>213</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</p>",
        "operationId": "deleteSite",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site in question.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while deleting site"
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/{version}/sites": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get site list v2",
        "description": "<p>This method returns the list of sites a user owns in Collaborate.<br> Please note that a site which has one of the configuration options enabled as specified in the \"callfrom\" parameter will not serve the documents using the API, as the configuration settings such as DRM, password protection etc cannot be bypassed using the API at the moment.<br> Until we provide API endpoints that allow you to accept these settings using the API, there is no way to get documents from these sites, doing so will conflict with the Collaborate security policies and hence cannot be achieved using the API at this time. <br>From version 7 onwards module tag will be in response to all user (Not only Admin) , and enable=0/1 will be based on either ON/OFF or have access (for normal users) to that module.<br>  API version 8 onwards, a new tag 'restrictiontype' is added as part of 'Site Security API' functionality.There will be 8 restrictions shown under this tag each with value 0/1 to show whether the respective feature is enabled or disabled for the site.<br>API version 10 onwards, multiple matter numbers are supported.<br>API version 11 onwards, statusid is supported.<br>API version 13 onwards, multiple categories, site ids search are supported and pagination is available with filterby property set to all using offset and limit parameter.<br>Moduleenabled query parameter - This find those sites where searched module is enabled. This is work with version 13. </p>",
        "operationId": "getSites",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "Possible values are {recent|favourite|category|all} Default for this field is \"recent\"<br>By default any filter will send back the first 20 sites if pagination is false",
            "required": false,
            "type": "string",
            "default": "recent",
            "enum": ["recent", "favourite", "category", "all"]
          },
          {
            "name": "returncount",
            "in": "query",
            "description": "The no of sites returned. Default is 20. This option does not apply if filterBy property is set to all",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryid",
            "in": "query",
            "description": "This parameter is used to get the site list based on the site category ID, please provide site categoryid in addition to setting the filterby property to category.<br>example = /api/1/sites?filterby=category&categoryid=1<br>Version 13 onwards category id csv is supported. example = /api/13/sites?filterby=category&categoryid=1,2,3",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "This parameter is used to search a site by name.The site is included in the search result if the private String appears in the title of the site.(The results are returned in ascending order)<br>example: Retrieve sites having \"HighQ\" word in their name: /api/1/sites?name='HighQ'<br>This will return all sites having \"HighQ\" in their site name.<br>Now from 5.1 onwards  search a site by name filter is support multilingual site name.<br>Version 6 or higher, provided search term for site name, should be considered as user preferred language.(because in response of site list api, site name returns in user preferred language)<br>If site name is not configured in user's preferred language then input terms should try to match with default UK English language and return response according.<br>Version 5 or lower it should work as it was, provided site name in search term should consider as default UK English",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A site status available in the system {active|archived|readonly|preparation}<br>Default -> {active + readonly + preparation}<br>for filterBy={recent|favourite| category}]if filterBy={all} is set then all status become applicable.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includefolderpermission",
            "in": "query",
            "description": "{true|false} the default is false",
            "required": false,
            "type": "string"
          },
          {
            "name": "callFrom",
            "in": "query",
            "description": "The only valid value is HIGHQDRIVE. If set the site list filters out any sites that have any restrictions on them. The conditions are as under.<br>1. 'Visible on HighQ Drive or Office Plugin' check box is not selected in Site->Admin->Advanced page.<br>2. Password protected site <br>3. 2FA enable site <br> 4. Terms & conditions applied on the site <br> 5. IP Restricted sites<br> 6. Document workflow enabled site <br> 7. Check-in / check out enabled site <br> 8. DRM enabled site <br>9. Files module is disabled<br>example: exclude restricted site as: /api/1/sites? callFrom=HIGHQDRIVE",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "asc or desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "ordertype. Api version 10 onwards, matterNumber is not supported. ",
            "required": false,
            "type": "string",
            "enum": [
              "owner",
              "sitestartdate",
              "matternumber",
              "sitename",
              "clientno",
              "statusdisplayname",
              "siteexpirydate",
              "lastupdatedate",
              "lastaccesseddate"
            ]
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting position of the site list from when the site list should be returned. This is to allow pagination",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The no of items to return in an individual get call",
            "required": false,
            "type": "string"
          },
          {
            "name": "matterno",
            "in": "query",
            "description": "Provide matter number as csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientno",
            "in": "query",
            "description": "Provide client number",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteids",
            "in": "query",
            "description": "Provide siteids as csv<br>Version 13 onwards siteids csv is supported",
            "required": false,
            "type": "string"
          },
          {
            "name": "moduleenabled",
            "in": "query",
            "description": "Provide module name. Supported modules names :  wiki , blog , task , event , document , isheet , activity , qa , people , home ",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sites" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorised" },
          "403": { "description": "Validation failed/Forbidden" },
          "405": {
            "description": "Method not allowed (calling API with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add site",
        "description": "<p>Use this API to create a new site.The site object only supports attributes which are visible in the create site interface.<br><br>This API requires site name (and mandatory fields configured at ASP level if any) to create a new site. <br><br>\"module\" tag represents different module to configure in site as it is shown in request attributes. <br>To create site from template by passing \"sitetemplateid\" tag <br>&nbsp;&nbsp;&nbsp;&nbsp; - For less than version 7, If any module is not given (\"module\" tag is not passed) in the request, the template module configuration will take place. If module tag is provided with configuration, it will respect that and configure as given in the request (rather than utilizing template module configuration)<br>&nbsp;&nbsp;&nbsp;&nbsp; - For greater than version 7, If any module is given (\"module\" tag is passed) or not in the request, the template module configuration will take place.<br><br>This method does not support uploading site image in this call, the site icon support will be provided as a separate call.<br>The method call expects an existing category ID. The category ID should be obtained by the calling application by an earlier call to the Site categories interface. If no any categories are given in the request, none category (not actual any category) will be added by default. <br><br>Site start and end date should be in the format of 'dd MMM yyyy' and it is NOT UTC. API client will always request actual date. <br><br>\"landingpage\" has default value as \"files (root folder)\". <br>\"landingpage\" expect three different wordings or identifications for File module. Possible values are: <br>- files (root folder)<br>- files (recent activity)<br>- files (advanced search)<br>The method implementation now supports(from 5.1 onward) Multilingual sitename. API version 6 or higher <sitename> will represent in request body based on user preference order.API version 5 or older <sitename> will represent default UK English.<br><sitenametranslations> will represent sitenames in every languages (Which will be additional tag in \"Object it self API\" from 5.1 onward)API version 6 or higher, in request body, They are sending both tags i.e. <sitename> and <sitenametranslations> then we need to validate values e.g. <sitename> must be match with respective <translation> tag in terms of User's language preference.API 7 or higher, site created from template will follow modules from source template and it will ignore module list sent in request body.<br><br>The method implementation now supports create site from template by providing \"sitetemplateid\" tag (old approach) <br><br>Please note support for creating site from template using this API will be deprecated in future. To create site from template please use new API Create site from template (/sites/templates/{templateid}/site) which is a long polling API(having support for long running requests)</p><br><br><p>This method supports multiple matter numbers to add into site using API version 10 on ward. \"matternos\" tag indicates multiple matter numbers with readonly or not. older version (less than 10 version) single matter number \"matterno\" will reflect the first matter number of existed multiple matter numbers in site.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><p>Matter number(s) is (are) required</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>151</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>1</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>You cannot have duplicate matter numbers</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>451</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>10</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p><br/><br/>Please note, all the properties/elements in get site response are not updatable/insertable. See below table to know which are read only, updatable or insertable.<br/><table border='1' cellpadding='1' cellspacing='1' style='width:80%;'>\t<thead>\t\t<tr>\t\t\t<th scope='col'>\t\t\t<p>Property</p>\t\t\t</th>\t\t\t<th scope='col'>Expected values ( Default value)</th>\t\t\t<th scope='col'>Purpose</th>\t\t\t<th scope='col'>Operation (READ, WRITE, UPDATE)</th>\t\t</tr>\t</thead>\t<tbody>\t\t<tr>\t\t\t<td>\t\t\t<p>id</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of site</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitename</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Name of the site</p>\t\t\t<p>(If the API version is less than 6, then the returned sitename is in default language, otherwise the returned sitename is in the user preferred language)</p>\t\t\t</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>role</p>\t\t\t</td>\t\t\t<td>String (CONTACT values)</td>\t\t\t<td>The role (Permissions) of the API user calling the API method</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitedescription</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The description of the site</td>\t\t\t<td>RWU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitetemplateid</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of the site template. This should be used when creating a new site using a site template</td>\t\t\t<td>RW</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderID</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>The ID of the root folder in the site. Use this value to get the list of folders and files in the site</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitefolderpermission</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The site folder access. Possible values are UPDATE/ADDFILE/VIEW</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>adminnote</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The note is visible to admins only</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category id</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Category of the site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>categories category name</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site category name</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module home</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable home module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module activity</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable activity module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module document</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable document/file module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module wiki</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable wiki module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module blog</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable blog module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module task</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable task module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module event</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable event module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module isheet</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable isheet module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module qa</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable qa module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>module people</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable people module</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>startdate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>End date of site</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>createddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was created</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>archivedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Date when site was archived</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>type</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Deprecated in 4.3</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>clientno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site client number</p>\t\t\t<p>allow max 500 character</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matterno</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>Site matter number</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>status</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Status of site - Active, Read only, Archive and Preparation</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>size</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Size of site due to its content(files and folders)</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnotes</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billingnextinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>billinglastinvoicedate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For billing purpose</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>filepagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of files accessed</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>maxpagecount</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page count of all the files</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize activedocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of active documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize deleteddocumentsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Size of deleted documents</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>rawsitesize totalsize</p>\t\t\t</td>\t\t\t<td>Long</td>\t\t\t<td>Total size</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>issyncable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>If site is supported for sync (For HighQ Drive use).</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner firstname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner first name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner lastname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner last name</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner email</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Site owner email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteowner userid</p>\t\t\t</td>\t\t\t<td>Integer (Autogenerated)</td>\t\t\t<td>Site owner user ID in case of existing user</td>\t\t\t<td>R</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file permissionlevel</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>File permission at site level. Possible values&nbsp;SITE_ONLY/SITE_AND_FOLDERS/SITE_FOLDERS_AND_FILES</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file approvaldocumentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable document workflow</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file emailnotification</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable force and suppress email notifications for files while uploading</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file allowbulkdownload</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable bulk download for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file showsitemap</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable index page for normal user</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable files inbox functionality</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>file inbox accountname</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Email id from which files can be sent in files module through email</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>enforceusergroups</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Enable/disable group based permissions in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite enable</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable normal bidder site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>biddersite advancedqapermission</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Enable/disable advanced bidder functionality in site</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>contactus type values value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>For contact us link in footer as well as in notification emails</td>\t\t\t<td>RU</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>landingpage</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Page to land when site is selected. This is mandatory when adding new site, non mandatory for update site.</td>\t\t\t<td>RWU (Read from 4.3.6 onwards)</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation languagecode</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>\t\t\t<p>User&#39;s language and country code</p>\t\t\t</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitenametranslations translation value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>The value returns site name in specific language</td>\t\t\t<td>\t\t\t<p>RWU(from 5.1 onwards)</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType passwordprotected</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is password protected or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType twoFactorAuthentication</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has 2FA enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType termsandconditions</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has T&C set or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType iprestrictedsite</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is IP restricted or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType drm</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has DRM enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType checkout</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site has Checkin / Checkout enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType documentworkflow</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site document workflow is enabled or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>siteRestrictionType visiableonhighqdrive</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>Indicates whether the site is visible on HighQ Drive or not. 0 = No, 1 = Yes.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>itemid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>An item ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>sitemetadatasheetid</p>\t\t\t</td>\t\t\t<td>Integer</td>\t\t\t<td>A sheet ID associated with the site. Available in case the Site metadata feature is ON.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>mysite</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the site is My Site. true = My Site, false = Normal site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno value</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Matter ID.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>matternos matterno readonly</p>\t\t\t</td>\t\t\t<td>Boolean</td>\t\t\t<td>Indicates whether the matter ID will be readonly on UI. true = Matter ID will be readonly and cannot be removed from the site.</td>\t\t\t<td>\t\t\t<p>RWU</p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td>\t\t\t<p>lastaccesseddate</p>\t\t\t</td>\t\t\t<td>String</td>\t\t\t<td>Last accessed date of the site.</td>\t\t\t<td>\t\t\t<p>R</p>\t\t\t</td>\t\t</tr>\t</tbody></table>",
        "operationId": "createSite",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/site" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Site created successfully [id,sitename and link tags are used in response.]",
            "schema": { "$ref": "#/definitions/site" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "409": { "description": "Site already exists in the system" },
          "500": { "description": "Internal error occured while adding site" }
        }
      }
    },
    "/{version}/systemreports/userloginreport": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "User login report",
        "description": "<p>API method to get the User Login System report<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can access the User Login System Report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userStatusCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loginType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">489</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loginUsingTwoFA</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">490</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilter</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">492</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilterFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">493</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilterTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">494</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortOrder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid startPosition</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">496</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid limit</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">497</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "getUserLoginReport",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on FirstName & LastName user can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive, 1 = Active, 2 = Archive",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgcsv",
            "in": "query",
            "description": "Give the organization id in csv, For ex : 1,2,3 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "loggedondatefilter",
            "in": "query",
            "description": "Possible value is 1 to 7 , 1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string",
            "default": "3"
          },
          {
            "name": "loggedondatefilterfrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021 <br> Make sure loggedOnDateFilter value set as 7",
            "required": false,
            "type": "string"
          },
          {
            "name": "loggedondatefilterto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021 <br> Make sure loggedOnDateFilter value set as 7",
            "required": false,
            "type": "string"
          },
          {
            "name": "logintype",
            "in": "query",
            "description": "Possible value are csv of {Form based | Proxy login | SSO}",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginusingtwoFA",
            "in": "query",
            "description": "Possible value are csv of {YES | NO}",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|UserStatus|UserOrg|LoginDate|LoginType|TwoFA|IpAddress} Default for this field is \"LoginDate\"<br>",
            "required": false,
            "type": "string",
            "default": "LoginDate",
            "enum": [
              "UserName",
              "UserStatus",
              "UserOrg",
              "LoginDate",
              "LoginType",
              "TwoFA",
              "IpAddress"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "startposition",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "100"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/myfilesreport": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "My files report",
        "description": "<p>API method to get the My files system report<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can access the User Login System Report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userstatuscsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgcsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid quotacsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">520</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sorttype</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortorder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid startposition</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">496</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid limit</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">497</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "myFilesReport",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on FirstName & LastName user can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive, 1 = Active, 2 = Archive",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgcsv",
            "in": "query",
            "description": "Give the organization id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "quotacsv",
            "in": "query",
            "description": "Possible value are csv of {100,90,80} 100 = 100%, 90 = Greater than 90%, 80 = Greater than 80%",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|UserStatus|UserOrg|TotalSize|DeletedItemSize|QuotaUsed|SharedItemsNo|SharedItemSize|ReceivedItemsNo|ReceivedItemSize|ExpiredShares} Default for this field is \"UserName\"<br>",
            "required": false,
            "type": "string",
            "default": "UserName",
            "enum": [
              "UserName",
              "UserStatus",
              "UserOrg",
              "TotalSize",
              "DeletedItemSize",
              "QuotaUsed",
              "SharedItemsNo",
              "SharedItemSize",
              "ReceivedItemsNo",
              "ReceivedItemSize",
              "ExpiredShares"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "startposition",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "100"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/myFilesReports" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/sitesummaryreport": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "Site Summary report",
        "description": "<p>API method to get the Site Summary System report<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can access the Site Summary System Report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortOrder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid startPosition</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">496</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid limit</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">497</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid categoryIDCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">498</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid siteStatusCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">499</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">500</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">501</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">502</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid modifiedDateFilter</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">503</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid modifiedDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">504</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid modifiedDateTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">505</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastAccessDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">506</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastAccessDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">507</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastAccessDateTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">508</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "getSiteSummaryReport",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on site name sites can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "sitestatuscsv",
            "in": "query",
            "description": "Possible value are csv of {1,2,3,4} 1 = Active, 2 = Read only, 3 = Archived, 4 = Preparation",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryidcsv",
            "in": "query",
            "description": "Give the category id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastaccesseddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastaccesseddatefilterfrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastaccesseddatefilterto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {SiteID|SiteName|ClientNumber|Status|OwnerName|Users|SizeTotal|SizeDeletedItems|FilePageCount|MaximumPageCount|CreatedDate|LastModifiedDate|StartDate|EndDate|NextInvoiceDate|LastInvoiceDate} Default for this field is \"SiteName\"<br>",
            "required": false,
            "type": "string",
            "default": "SiteName",
            "enum": [
              "SiteID",
              "SiteName",
              "ClientNumber",
              "Status",
              "OwnerName",
              "Users",
              "SizeTotal",
              "SizeDeletedItems",
              "FilePageCount",
              "MaximumPageCount",
              "CreatedDate",
              "LastModifiedDate",
              "StartDate",
              "EndDate",
              "NextInvoiceDate",
              "LastInvoiceDate"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "startposition",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "100"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/userloginreport/content": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "Download User Login xlsx report",
        "description": "<p>API method to download User Login System report in  xlsx format<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can access the User Login System Report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userStatusCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loginType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">489</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loginUsingTwoFA</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">490</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilter</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">492</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilterFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">493</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid loggedOnDateFilterTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">494</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortOrder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "downloadUserLoginReportXLSFile",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on FirstName & LastName user can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgcsv",
            "in": "query",
            "description": "Give the organization id in csv, For ex : 1,2,3 ",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive, 1 = Active, 2 = Archive",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginusingtwoFA",
            "in": "query",
            "description": "Possible value are csv of {YES | NO}",
            "required": false,
            "type": "string"
          },
          {
            "name": "logintype",
            "in": "query",
            "description": "Possible value are csv of {Form based | Proxy login | SSO}",
            "required": false,
            "type": "string"
          },
          {
            "name": "loggedondatefilter",
            "in": "query",
            "description": "Possible value is 1 to 7 , 1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string",
            "default": "3"
          },
          {
            "name": "loggedondatefilterfrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021 <br> Make sure loggedOnDateFilter value set as 7",
            "required": false,
            "type": "string"
          },
          {
            "name": "loggedondatefilterto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021 <br> Make sure loggedOnDateFilter value set as 7",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|UserStatus|UserOrg|LoginDate|LoginType|TwoFA|IpAddress} Default for this field is \"LoginDate\"<br>",
            "required": false,
            "type": "string",
            "default": "LoginDate",
            "enum": [
              "UserName",
              "UserStatus",
              "UserOrg",
              "LoginDate",
              "LoginType",
              "TwoFA",
              "IpAddress"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document downloaded" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/usersummaryreport": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "User Summary report",
        "description": "<p>API method to get the User Summary System report<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can access the User Summary System Report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortOrder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid startPosition</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">496</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid limit</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">497</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userstatusCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgCSVFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sysgroupcsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">518</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid rolecsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">519</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">500</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">501</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">502</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid modifiedDateFilter</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">503</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">509</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">510</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">511</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">512</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">513</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">514</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">515</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">516</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">517</td>\r\n \t\t</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "getUserSummaryReport",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on user first name and last name can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive , 1 = Active, 2 = Archived",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgidcsv",
            "in": "query",
            "description": "Give the organisation id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupidcsv",
            "in": "query",
            "description": "Give the system group id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleidcsv",
            "in": "query",
            "description": "Give the role id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilterfrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilterto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Never, 2=Last Year,3=Last six months,  4=Last three months,  5=Last month, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|Status|Org|CreratedDate|ArchDate|Lastlogin} Default for this field is \"UserName\"<br>",
            "required": false,
            "type": "string",
            "default": "UserName",
            "enum": [
              "UserName",
              "Status",
              "Org",
              "CreratedDate",
              "ArchDate",
              "Lastlogin"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "startposition",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "100"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/myfilesreport/content": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "Download my files xlsx report",
        "description": "<p>API method to download my files report export in  xlsx format<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can download the report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userstatuscsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgcsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid quotacsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">520</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sorttype</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortorder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "downloadMyFilesReportXLSFile",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on FirstName & LastName user can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive, 1 = Active, 2 = Archive",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgcsv",
            "in": "query",
            "description": "Give the organization id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "quotacsv",
            "in": "query",
            "description": "Possible value are csv of {100,90,80} 100 = 100%, 90 = Greater than 90%, 80 = Greater than 80%",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|UserStatus|UserOrg|TotalSize|DeletedItemSize|QuotaUsed|SharedItemsNo|SharedItemSize|ReceivedItemsNo|ReceivedItemSize|ExpiredShares} Default for this field is \"UserName\"<br>",
            "required": false,
            "type": "string",
            "default": "UserName",
            "enum": [
              "UserName",
              "UserStatus",
              "UserOrg",
              "TotalSize",
              "DeletedItemSize",
              "QuotaUsed",
              "SharedItemsNo",
              "SharedItemSize",
              "ReceivedItemsNo",
              "ReceivedItemSize",
              "ExpiredShares"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document downloaded" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/usersummaryreport/content": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "Download User Summary xlsx report",
        "description": "<p>API method to download User Summary report export in  xlsx format<br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>Only System admin (Internal Admin) can download the report</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortType</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">491</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sortOrder</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid userstatusCSV</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">487</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid orgCSVFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">488</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid sysgroupcsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">518</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid rolecsv</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">519</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">500</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">501</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid createdDateTo</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">502</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid modifiedDateFilter</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">503</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">509</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">510</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid lastLoginDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">511</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">512</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">513</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid archiveDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">514</td>\r\n \t\t</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateFilter</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">515</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateFrom</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">516</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Invalid notloginDateTo</p>\r\n \t\t</td>\r\n <td style=\"width: 178px;\">517</td>\r\n \t\t</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n</p>",
        "operationId": "downloadUserSummaryReportXLSFile",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Based on user first name and last name can be searched",
            "required": false,
            "type": "string"
          },
          {
            "name": "userstatuscsv",
            "in": "query",
            "description": "Possible value are csv of {0,1,2} 0 = Inactive , 1 = Active, 2 = Archived",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgidcsv",
            "in": "query",
            "description": "Give the organisation id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupidcsv",
            "in": "query",
            "description": "Give the system group id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleidcsv",
            "in": "query",
            "description": "Give the role id in csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "createddateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastlogindateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Last Day, 2=Last Week, 3=Last Month, 4=Last three months, 5=Last six months, 6=Last year, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilterfrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveddatefilterto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindatefilter",
            "in": "query",
            "description": "Possible value is -1 and 1 to 7 ,-1=Any,  1=Never, 2=Last Year,3=Last six months,  4=Last three months,  5=Last month, 7=Custom (Need to give below from and to date in DD MMM YYYY format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindatefrom",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "notlogindateto",
            "in": "query",
            "description": "Give the date value in DD MMM YYYY format. ex 10 JUN 2021",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "Possible values are {UserName|Status|Org|CreratedDate|ArchDate|Lastlogin} Default for this field is \"UserName\"<br>",
            "required": false,
            "type": "string",
            "default": "UserName",
            "enum": [
              "UserName",
              "Status",
              "Org",
              "CreratedDate",
              "ArchDate",
              "Lastlogin"
            ]
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Possible value is 0 OR 1,  0 = asc, 1 = desc",
            "required": false,
            "type": "string",
            "default": "0"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document downloaded" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/imagelibrary": {
      "get": {
        "tags": ["System Resource"],
        "summary": "Get image details list from Image library",
        "description": "<p>This is an API method to get Image list with pagination from Imagelibrary.<br />-&nbsp;This API is supported from version 13 onwards</p>\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\">\n<tbody>\n<tr>\n<td>Validation Message</td>\n<td>Ref Code</td>\n</tr>\n<tr>\n<td>The given start position is invalid. The starting position must be 0 or a positive value</td>\n<td>292</td>\n</tr>\n<tr>\n<td>The given number of items is invalid. The number of items must have a positive value</td>\n<td>291</td>\n</tr>\n<tr>\n<td>The given site id is invalid.</td>\n<td>403</td>\n</tr>\n</tbody>\n</table>",
        "operationId": "getImageListFromImageLibrary",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteID",
            "in": "query",
            "description": "siteID",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "startPosition",
            "in": "query",
            "description": "startPosition",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "noOfItems",
            "in": "query",
            "description": "noOfItems",
            "required": false,
            "type": "integer",
            "default": 49,
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/ImageLibraryDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["System Resource"],
        "summary": "add image in image library",
        "description": "<p>This is an API method to add Image in Imagelibrary. <br>- <strong>This API is supported from version 13 onwards</strong><br>- <strong>imageType set as public if siteid is not passed otherwise default value set as private </strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>File is required</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">397</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Trying to upload the file is not of image type</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">398</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>The given siteid is invalid</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">403</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Please upload the file which has size greater than 0</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">406</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>The given imagetype is invalid</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">497</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Uploaded file types are not allowed</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">41</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>A virus has been detected and the upload has been terminated</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">33</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>An error occurred during virus checking, please contact the system administrator</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">47</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n",
        "operationId": "addImageInImagelibrary",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteID",
            "in": "query",
            "description": "The ID for the site",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          },
          {
            "name": "imageType",
            "in": "query",
            "description": "type of image (Private or Public - dafault value is set to private if siteid passed)\r\n If siteid not passed then value is set to Public(No need to pass any value)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Image added successfully " },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "403": {
            "description": "Validation failed/ Forbidden ",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API with the wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/imagelibrary/{imageid}": {
      "get": {
        "tags": ["System Resource"],
        "summary": "get image from image library",
        "description": "<p>This is an API method to get Image from Imagelibrary. <br>- <strong>This API is supported from version 13 onwards</strong><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Validation Message</strong></span></td>\r\n \t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>The given imageId is invalid</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">495</td>\r\n \t</tr>\r\n \t<tr>\r\n \t\t<td style=\"width: 675px;\">\r\n \t\t\t<p>Image does not exist in the system</p>\r\n \t\t</td>\r\n \t\t<td style=\"width: 178px;\">496</td>\r\n \t</tr>\r\n </tbody>\r\n</table>\r\n",
        "operationId": "getImageFromImagelibrary",
        "produces": [
          "application/octet-stream",
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "imageid",
            "in": "path",
            "description": "imageid parameter is the imageid of the image library ",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Image was returned successfully " },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "403": {
            "description": "Validation failed/ Forbidden ",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "404": {
            "description": "Image does not exist in the system",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API with the wrong method) "
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/aihub/callback": {
      "post": {
        "tags": ["AIHub API"],
        "summary": "Notify AIHub",
        "description": "<p>API method to notify aihub for the Document, Template, Question </p><p>requestFor - is used to identify whether it is, DOCUMENT, TEMPLATE, QUESTION<br>id - can be id of document, template or question maintain by the thirdparty engine<br>status - used for the current status of document, template or question based this status, action will be taken\r\n",
        "operationId": "callback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "channelId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AIHubCallbackRequest" }
            }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The documents/template/question accepted in queue to receive the data from Camden. Added to AIHub DB table."
          },
          "400": { "description": "Bad Request" },
          "422": { "description": "Unprocessable data" },
          "500": {
            "description": "Internal error. All the documents/template/question from the request are failed"
          }
        }
      }
    },
    "/{version}/aihub/callbackForDocumentStatus": {
      "post": {
        "tags": ["AIHub API"],
        "operationId": "callbackForDocumentStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "channelId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/WebhookDTO" }
            }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The documents accepted in queue to receive the data from Camden. Added to AIHub DB table."
          },
          "400": { "description": "Bad Request" },
          "422": { "description": "Unprocessable data" },
          "500": {
            "description": "Internal error. All the documents from the request are failed"
          }
        }
      }
    },
    "/{version}/activities/{activityid}": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get Activity",
        "description": "To get the individual activity - currently only the microblog is supported",
        "operationId": "getRecentActivity",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for share with group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "activityid",
            "in": "path",
            "description": "The activity id of requested activity",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Activity returned successfully",
            "schema": { "$ref": "#/definitions/Activity" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting activity"
          }
        }
      }
    },
    "/{version}/activities/activityfilter": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get Activity Filters",
        "description": "This API method can be used to obtain the list of filters available for the activity API, please note that this API only provide the filters relevant to a specific activity list and does not return the content activity. ",
        "operationId": "getRecentActivityFilterList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "site",
            "in": "query",
            "description": "This is an optional parameter if the parameter is not supplied or an \"ALL\" value is provided then filters relevant to the activity for all sites is returned. <br/>Provide a list of comma separated site ID's if activity filters for specific sites are required. <br/>e.g. site = 10,11,12",
            "required": false,
            "type": "string",
            "default": "all"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "If a limited set of filters are required then provide a comma separated list of content types <br/>e.g. contenttype = files, blog, wiki <br/>otherwise, do not use this parameter or provide a value of \"ALL\" for this parameter.",
            "required": false,
            "type": "string",
            "default": "all"
          },
          {
            "name": "activitytype",
            "in": "query",
            "description": "all/post/activity",
            "required": false,
            "type": "string",
            "default": "all"
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "Search Text",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The integer value of the last record fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "No of records to return in one request. Default is 20  and the maximum value is 100\r\nIf a value of 0 or less is provided in the request then 20 records will be returned.\r\nIf a value of more than 100 is provided then 100 records are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filtertype",
            "in": "query",
            "description": "Provide filter type if the parameter is not supplied all filters will be returned. <br/>e.g. filtertype = content_site_filter, content_type_filter, content_user_filter <br/>",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ActivityFilter" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while gettting activity filter list"
          }
        }
      }
    },
    "/{version}/activities": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get Activity List",
        "description": "<p>This API method can be used to obtain a collection of activity items. The activity is based on a specific filter.</p>\r\n<p>By default the activity of the authenticated OAuth token are used to provide the activity, however if the OAuth token user has got administrative rights they are able to obtain activity on behalf of other users.</p>\r\n<p>The type of activity returned can be altered by the filter parameters.</p>\r\n<br>Each activity has an Actor, Verb and Object: <br/>\r\n<p><strong>Actor</strong>: A person that performs the activity (user object) </p>\r\n<p><strong>Verb </strong>: The activities verb, which indicates what action was performed</p>\r\n<p><strong>Object</strong>: The object of the activity</p>\r\n<br>e.g. Mark posted a comment on the wiki page \"Welcome to the show\" <br/>\r\n<p>In the above activity description, \"Mark\" is the actor, \"posted\" is the verb and \"wiki page\" is the object.</p>\r\n<ul><li>&lt;noofcomments&gt; &lt;nooflikes&gt; &lt;comments&gt; &lt;images&gt; tags are only included in the returned xml when there are values available for those items.</li><li>The activity ID is only returned for microblog items and not for the any other activity.</li></ul>",
        "operationId": "getRecentActivityList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "site",
            "in": "query",
            "description": "If siteid is provided, the parameter for sitescope is ignored, sitescope parameter is only considered when no siteid is given.\r\n<p>For System Admin (scope can be all or it can be the sites they are a member of)<br/></p>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sitescope",
            "in": "query",
            "description": "If site id is provided , the parameter for site scope is ignore, site scope parameter is only considered when no site id is given.\r\n <br>For System admin (scope can be all or it can be the sites they are a member of)<br><i>/api/1/activities?sitescope={all / memberoff /favourite}</i>",
            "required": false,
            "type": "string",
            "enum": ["all", "memberoff", "favourite"]
          },
          {
            "name": "people",
            "in": "query",
            "description": "<ul><li>Default scope is <strong>All</strong>. At one time only, one option is sent. </li>\r\n<li><strong>Author</strong> [supports only one author at this time] (As on the person&rsquo;s personal profile page)<br/>e.g Imran is the OAuth user, now Imran wants the activity for Keyur, then the call will be <br />/api/1/activities?<br />people=author&amp;authoremail=keyur@highq.com</li>\r\n<li><strong>Following</strong><br />/api/1/activities?people=following</li>\r\n<li><strong>Followers</strong><br />/api/1/activities?people=followers</li>\r\n<li><strong>MyOrganisation</strong> (People in my organisation)</li>\r\n<li><strong>MentionsMe</strong></li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "authoremail",
            "in": "query",
            "description": "The author email address",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "startdate and enddate both parameters should be passed when we want search based on the date parameters. Otherwise both parameters are optional.\nThis param is supported from API version 11 and above.\n\nDate format should be dd MMM yyyy (UTC) - eg. 01 Jun 2020",
            "required": false,
            "type": "string"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "startdate and enddate both parameters should be passed when we want search based on the date parameters. Otherwise both parameters are optional.\nThis param is supported from API version 11 and above.\n\nDate format should be dd MMM yyyy (UTC) - eg. 01 Jun 2020",
            "required": false,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "The type of content to filter by. Default is All, however you can filter by all content types available in the activity stream such as:\r\n<br><i>/api/1/activities?contenttype=files</i>\r\nThe possible values for content types are:\r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Comments \r\n<p><span>The API supports filtering by multiple content types from Collaborate 4.1.4 onwards.</span></p>\r\n<p>for example, to get activity by three content types use the following syntax.</p>\r\n<p><em>contenttype=files,events,tasks</em></p>",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for share with groups.",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The no of the last activity fetched",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of items to return. Default is 20 (Max is 100)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Activity returned successfully",
            "schema": { "$ref": "#/definitions/Activities" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting activity list"
          }
        }
      }
    },
    "/{version}/attachments": {
      "get": {
        "tags": ["Attachment API"],
        "summary": "Get all attachments",
        "description": "This method is used to get a list of attachment of a Collaborate content item. Please note this method does not apply to iSheet attachments and Q&A attachments, as attachments to those modules are managed separately within the context of those modules.",
        "operationId": "getAllAttachments",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content type allows below options: \r\n- Microblogs\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Comments\r\n- Messages",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content. <br> e.g. blogid for contenttype=blog, taskid for contenttype=tasks",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Attachments returned successfully",
            "schema": { "$ref": "#/definitions/Attachments" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting attachments"
          }
        }
      },
      "post": {
        "tags": ["Attachment API"],
        "summary": "Add attachment",
        "description": "API method to add an attachment to a content in Collaborate.<br><br><strong>Note :</strong></br><br>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.<br><br>The file should be added as multipart form data. Please note that the parameters are case sensitive.<br><br>If the operation is successful the API returns a progressive key resource object . And based on this progressive key, can see the status of attachment otherwise an error object is returned with the appropriate error code\r\n<br>To get the status of attachment based on progressive key\r\n<i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td> Key to check the status of your action.</td></tr></tbody></table><br><b>Response</b><br><br><code>&lt;attachment&gt;<br />&nbsp;&nbsp;&nbsp; &lt;id&gt;101&lt;/id&gt;<br /> &lt;/attachment&gt;</code><br>\n<br>If the operation is successful the API returns a progressive key resource object. Possible statuses are \"in-progress\", \"done\" or \"failed\"&nbsp;otherwise, an error object is returned with the appropriate error code.<br>\n<br>Note: This API&nbsp;will insert an attachment/file into the system with a non-active state. The attachment ID&nbsp;you can use while adding/editing the content API such as task, blog, or event.",
        "operationId": "addAttachment",
        "consumes": ["multipart/form-data"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Site ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "The parameter name should be called file and the value for it is the file to be uploaded",
            "required": true,
            "type": "file"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Name of the newly created file",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Attachment adding process initiated successfully",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while adding attachment"
          }
        }
      }
    },
    "/{version}/attachments/{attachmentid}": {
      "delete": {
        "tags": ["Attachment API"],
        "summary": "Remove attachment from content (un-link)",
        "description": "This method is used to un-link attachment from particular content (not the actual delete of attachment from system).",
        "operationId": "removeAttachment",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "attachmentid",
            "in": "path",
            "description": "Attachment id which is already linked in provided content id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content type allows below options,\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Comments",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content.\r\n<br> e.g. blogid for contenttype=blog, taskid for contenttype=tasks",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Attachment un-linked/removed successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while un-linking/removing attachment"
          }
        }
      }
    },
    "/{version}/blog/reSynchronisationFlag": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get Blog Synchronisation Check",
        "description": "Check re-synchronization required or not<br><b>Purponse:</b> To check re-syncrhonization required or not for blogs(will return list of categories/sites for while resynchronization is required)<br><br>e.g. ../blog/reSynchronisationFlag?lastSynkDate=2014-04-28%2012:23:40",
        "operationId": "reSynchronisationFlag",
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "lastSynkDate",
            "in": "query",
            "description": "Last synchronisation date of blog",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversations returned successfully",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while checking blog synchronisation"
          }
        }
      }
    },
    "/{version}/blog/category": {
      "post": {
        "tags": ["Blog API"],
        "summary": "Get sites by blog categories",
        "description": "To get list of sites for given blog categories<br><br><b>Purponse:</b> To get list of blog categories",
        "operationId": "siteCategories",
        "consumes": ["text/xml"],
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/category" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Site categories successfully returned",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting sitecategories"
          }
        }
      }
    },
    "/{version}/blog/create": {
      "post": {
        "tags": ["Blog API"],
        "summary": "Add/update Blog",
        "description": "To add or update blog in provided site",
        "operationId": "createBlog",
        "consumes": ["text/xml"],
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/BlogListDBO" }
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Blog created/updated successfully",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while creating/updating blog"
          }
        }
      }
    },
    "/{version}/comments": {
      "get": {
        "tags": ["Comments API"],
        "summary": "Get Comment List",
        "description": "Method to obtain comments on a particular content. This method is supported in version 2 of the API and above",
        "operationId": "getCommentList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content. <br/>e.g. blogid for contenttype=blog, taskid for contenttype=tasks",
            "required": true,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "content types <br/><i>e.g. /api/1/comments?contenttype=files</i>\r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The integer value of the last comment fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "No of comments to return in one request. Default is 20  and the maximum value is 100\r\nIf a value of 0 or less is provided in the request then 20 comments will be returned.\r\nIf a value of more than 100 is provided then 100 comments are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Provide site id of the required site, the parameter only accepts one site in the current implementation. <br/>e.g. <i>/api/1/comments?siteid=<siteid></i> \r\nFor global contents like microblogs please provide 0 as the siteid ",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Comments returned successfully",
            "schema": { "$ref": "#/definitions/comments" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": " Internal error occurred while returning comments"
          }
        }
      },
      "post": {
        "tags": ["Comments API"],
        "summary": "Add Comment",
        "description": "Add comment API",
        "operationId": "addComment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for mention group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content.<br><br>e.g. blogid for contenttype=blog, taskid for contenttype=tasks",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content type<br><br>e.g. /api/1/comments?contenttype=files<br>- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Isheet",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CommentDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Comment added successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while adding comment"
          }
        }
      }
    },
    "/{version}/comments/{commentid}": {
      "get": {
        "tags": ["Comments API"],
        "summary": "Get Comment",
        "description": "Method to obtain a comment on a particular content. This method is supported in version 6 of the API and above",
        "operationId": "getCommentByCommentID",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "commentid",
            "in": "path",
            "description": "Comment id to get single comment's details",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Comment returned successfully",
            "schema": { "$ref": "#/definitions/comments" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": " Internal error occurred while returning comment"
          }
        }
      },
      "put": {
        "tags": ["Comments API"],
        "summary": "Edit Comment",
        "description": "Edit comment API",
        "operationId": "updateComment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for mention group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "commentid",
            "in": "path",
            "description": "This is the comment id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CommentDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Comment updated successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while updating comment"
          }
        }
      },
      "delete": {
        "tags": ["Comments API"],
        "summary": "Delete Comment",
        "description": "Delete comment API",
        "operationId": "deleteComment",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "commentid",
            "in": "path",
            "description": "This is the comment id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Comment deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting comment"
          }
        }
      }
    },
    "/{version}/contractexpress/admin/cedocautosite/syncstatus": {
      "get": {
        "tags": ["Contract Express Admin API"],
        "summary": "To get sync status of Doc Templates for CE Doc Auto site",
        "description": "<p>This API call is used to get Sync Status of Doc Templates for HighQ Doc Auto site<br>Supported version for the api is current Version <b>14 and above versions.</b></p><p>Users that are site admins of the HighQ CE Doc Auto site and are added to the following system groups can access the get sync audit API:\r\n<br/>\t\t1. Contract Express admins and authors\r\n<br/>\t\t2. Contract Express users</p><p> Request URI : <b> POST </b> api/{version}/contractexpress/admin/cedocautosite/syncstatus</p><br/><p> <b> Response error code </b></p><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>403</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Access denied</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>Contract Express service is disabled or user don't have contract express access.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>403</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>HighQ Doc Auto site failed to be created.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>HighQ Doc Auto site failed to be created.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>493</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>If Sync Audit is not found.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If Sync Audit is not found.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "getCEDocTemplatesSyncStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "14"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the sync status of Doc Templates for CE Doc Auto site.",
            "schema": { "$ref": "#/definitions/CEDocAutoSiteAuditDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/contractexpress/admin/create/site": {
      "post": {
        "tags": ["Contract Express Admin API"],
        "summary": "To create HighQ Doc Auto site",
        "description": "<p>This API call is used to create the HighqQ Doc Auto site.</p><br/><p> Request URI : <b> POST </b> api/{version}/contractexpress/admin/create/site</p><br/><p> <b> Response error code </b></p><br/><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>488</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The HighQ Doc Auto site is not created.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The HighQ Doc Auto site is not created.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>490</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Contract Express service is disabled at the system level.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>Contract Express service is disabled at the system level.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>491</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>HighQ Doc Auto site is already created.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>HighQ Doc Auto site is already created.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "createContractExpressDocAutoSite",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "14"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "The API will return the 201 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/contractexpress/register/client": {
      "post": {
        "tags": ["Contract Express Admin API"],
        "summary": "Accepting Contract Express Client ID and secret key for automatic registration workflow",
        "description": "<p>This API call is used to register the contract express client.</p><br/><p>This API Accepting Contract Express Client ID and secret key for automatic registration workflow\r\n </p><br/><p> Request URI : <b> POST </b> api/{version}/contractexpress/register/client</p><br/><p> <b> Response error code </b></p><br/><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>180</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The client Id is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The client Id is empty in the request body.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>181</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The client secret is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The client secret is empty in the request body.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>182</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The license Id is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The license id is empty in the request body.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>183</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Please first provide the details of the Contract Express instance that you want to register for this client.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If HighQ ASP admin haven't register instance and calling this API then show this error message.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "registerContractExpressClientDetails",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ContractExpressClientDetails" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/contractexpress/admin/forcesync/template": {
      "post": {
        "tags": ["Contract Express Admin API"],
        "summary": "To sync Contract Express Templates manually with the HighQ Doc Auto site",
        "description": "<p>This API call is used to sync the CE templates to HighQ Doc Auto site.</p><p>Users that are site admins of the HighQ CE Doc Auto site and are added to the following system groups can access the sync document templates API:\r\n<br/>\t\t1. Contract Express admins and authors\r\n<br/>\t\t2. Contract Express users</p><br/><p> Request URI : <b> POST </b> api/{version}/contractexpress/admin/forcesync/template</p><br/><p> <b> Response error code </b></p><br/><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>403</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Access denied</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>Contract Express service is disabled or user don't have contract express access.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>403</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>HighQ Doc Auto site failed to be created.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>HighQ Doc Auto site failed to be created.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "syncTemplatesToContractExpressDocAutoSite",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "14"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/contractexpress/register/serviceaccount/client": {
      "post": {
        "tags": ["Contract Express Admin API"],
        "summary": "Accepting Contract Express Client ID and secret key for service account",
        "description": "<p>This API call is used to register the contract express service account client.</p><br/><p> Request URI : <b> POST </b> api/{version}/contractexpress/register/serviceaccount/client</p><br/><p> <b> Response error code </b></p><br/><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>185</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The client Id is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The client Id is empty in the request body.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>186</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The client secret is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>The client secret is empty in the request body.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>183</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Please first provide the details of the Contract Express instance that you want to register for this client.</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If HighQ ASP admin haven't register instance and calling this API then show this error message.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "registerContractExpressServiceAccountClientDetails",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContractExpressServiceClientDetails"
            }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/contractExpress/admin/cedoctemplates": {
      "get": {
        "tags": ["Contract Express Admin API"],
        "summary": "To get list of contract express templates for given site id.",
        "description": "<p>Get <b>list of contract express template for specified site id.</b><br>Supported version for the api is current Version <b>11 and above versions.</b></p>",
        "operationId": "getCeDocTemplates",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "siteId",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "11"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of Contract express templates for given site.",
            "schema": { "$ref": "#/definitions/ContractExpressDocTemplatesDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/files/{fileid}": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get file info",
        "description": "<p>API method to get a single file info from Collaborate.",
        "operationId": "getDocumentInfo",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The ID of file to get Info",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastdmsinfo",
            "in": "query",
            "description": "Last DMS info (true/false)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusinfo",
            "in": "query",
            "description": "The statusinfo parameter allows you to access additional information about the file. The information available includes Shared Status, Favourite Status, Task Count and Liked status for logged in user",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "emailmetadata",
            "in": "query",
            "description": "The emailmetadata parameter allows you to access additional information about the file. The information available includes emailmetadata like from, to, cc, sent, received",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DocumentDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Update file",
        "description": "This api is used for update file.<br><br><strong>Note :</strong><br><b>If need to update dms detail, add below tags in xml file(in request body)</b><br> 1) dmsVersion 2) versionid 3) dms<br><b>If need to add version note detail, add below tags in xml file(in request body)</b><br> 1) versionid 2) versionnote",
        "operationId": "updateDocument",
        "consumes": ["text/plain", "application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "file ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "Root folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchid",
            "in": "query",
            "description": "Batch ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DocumentDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document updated successfully." },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while updating document",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Delete file",
        "description": "This API deletes a file from a Collaborate Site and places it in the recycle bin. The documents being deleted should be an active document in a site.",
        "operationId": "deleteDocument",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The {fileid} is the Id of the file which is to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "File/Document deleted successfully." },
          "204": { "description": "File/Document deleted successfully." },
          "401": { "description": "Unauthorized" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          }
        }
      }
    },
    "/{version}/files/{fileid}/status": {
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Add or update the status of a file in Camden",
        "description": "<p>This endpoint updates the status of a document which describes its state in relation to Contract Analysis (CA). When a file is sent to CA, its status is automatically set to 'sent'. The allowed statuses are listed below. Please note that they are case-sensitive.</p><ul><li>sent</li><li>ready.for.review</li><li>analysis.complete</li><li>failed.analysis</li><li>review.in.progress</li><li>review.paused</li><li>review.complete</li><li>reanalysis.requested</li></ul><p>This endpoint can be used to set a status for any file which had an AI assigned to it. However, these statuses are only meaningful for CA.</p>",
        "operationId": "updateCaFileStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "Collaborate-specific file ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "updated status",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "The status was successfully updated" },
          "401": { "description": "Unauthorised" },
          "403": { "description": "Parameter validation failed | Forbidden" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/folders/{folderid}": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get folder info",
        "description": "<p>The method provides folder detail of given folder id.",
        "operationId": "getFolderInfo",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderID",
            "required": true,
            "type": "string"
          },
          {
            "name": "statusinfo",
            "in": "query",
            "description": "The statusinfo parameter allows you to access additional information about the folder. The information available includes Shared Status, Favourite Status for logged in user",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FolderDBOV2" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Update folder",
        "description": "This api will allow you to update folder.",
        "operationId": "updateFolder",
        "consumes": ["text/plain", "application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "batchid",
            "in": "query",
            "description": "Batch ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "Root folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/FolderDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Folder updated successfully" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while updating folder",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Delete folder",
        "description": "This api going to delete active folder from to the site, one's folder deleted it goes to recycle bin (Deleted items folder).",
        "operationId": "deleteFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Folder deleted successfully." },
          "204": { "description": "Folder deleted successfully." },
          "401": { "description": "Unauthorized" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          }
        }
      }
    },
    "/{version}/folders/{folderid}/foldersize": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get Folder Size",
        "description": "Get a folder size by folder ID.",
        "operationId": "getFolderSize",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FolderSizeResponseDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/folders/{folderid}/parent": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Copy folder",
        "description": "The method allows a given folder to be copied from one folder location to another folder location. The target folder location can be in a different site.",
        "operationId": "copyFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "The id of the folder which needs to be copied",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": " The target folder id of the folder under which the folder will be copied",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Your content is copied successfull..." },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Move folder",
        "description": "The method allows a given folder to be moved from one folder location to another folder location within a site.",
        "operationId": "moveFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "The id of the folder which is to be moved  ",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": "The target folder id of the folder under which the folder is to be moved",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Successfully moved" },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Validation failed/ Forbidden" },
          "409": {
            "description": "Another user is performing move operation on the same folderid"
          }
        }
      }
    },
    "/{version}/files/{fileid}/parent": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Copy file",
        "description": "<p>Copy a file from one location to another. In case of a copy operation the target folder can be a folder in another site.<br>While copying the file, the version history and permissions will not be copied over, but the permissions for the new folder to which the file is being moved is going to be applied to the copied file.</p>",
        "operationId": "copyFile",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The id of the file which needs to be copied",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": "The target folder id of the folder under which the file will be copied",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Your content is copied successfull..." },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Access denied" }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Move file",
        "description": "Move a single file from one location to another. A file can only be moved within a site.",
        "operationId": "moveFile",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The id of the file which is to be moved",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": "The target folder id of the folder under which the folder is to be moved",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Successfully moved" },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Validation failed/ Forbidden" },
          "409": {
            "description": "Another user is performing move operation on the same folderid"
          }
        }
      }
    },
    "/{version}/folders": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add folder",
        "description": "<p>This api will allow you to create folder into site.",
        "operationId": "addFolder",
        "consumes": ["text/plain", "application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "batchid",
            "in": "query",
            "description": "Batch ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "Root folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "ID of the parent folder in which want to add folder",
            "required": true,
            "type": "string"
          },
          {
            "name": "allowduplicatefolder",
            "in": "query",
            "description": "Allow/Disallow duplicate folder in given parent folder",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/FolderDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "schema": { "$ref": "#/definitions/FolderDBO" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "409": {
            "description": "Folder already exists",
            "schema": { "$ref": "#/definitions/FolderDBO" }
          },
          "500": {
            "description": "Internal error occured while creating folder",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/folders/{folderid}/items": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get Folder List",
        "description": "<p>This API method provides a list of folders under a given folder.<br><br><strong>Note :</strong><br><br>The value of limit parameter behaves as following<br>- limit =100 is the default value<br>- if limit>0 then (number of items returned is equal to limit)<br>- if limit=-1 then return all records<br>- if limit <-1 then the system returns the default no of items i.e 100<br><br>The value of Offset parameter behaves as under<br>- (Default) offset =0<br>- if offset > 0 then the records are returned from the offset value<br>- if offset < 0 then offset value of 0 is set<br><br>Defalut value for orderby parameter is asc and for ordertype is creation date.</p>",
        "operationId": "getFolderList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The no of items to return for this request",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point for each item returned",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "The items can be organised by either asc/desc order",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "In addition to the order we can organise items by name/author and last modified date.",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusinfo",
            "in": "query",
            "description": "The statusinfo parameter allows you to access additional information about the folder. The information available includes Shared Status, Favourite Status for logged in user",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includesmartfolder",
            "in": "query",
            "description": "The includesmartfolder parameter allows you to get smart folders in list. default value would be false.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Get Folder List successfully" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/files/dms": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get dms info",
        "description": "<p>API method to get all file versions based on various filters like dmsdatabasename, dmsdocid, doctype, modifieddate, limit, offset from Collaborate.<br><br><strong>Note :</strong><br><br>The value of limit parameter behaves as following<br>- limit =25 is the default value<br>- if limit>0 then (number of items returned is equal to limit)<br>- if limit=-1 then return all records<br>- if limit <-1 then the system returns the default no of items i.e 25<br><br>The value of Offset parameter behaves as under<br>- (Default) offset =0<br>- if offset > 0 then the records are returned from the offset value<br>- if offset < 0 then offset value of 0 is set</p>",
        "operationId": "getDMSInfo",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "dmsdatabasename",
            "in": "query",
            "description": "The DMS database name of file to get dms Info",
            "required": true,
            "type": "string"
          },
          {
            "name": "dmsdocid",
            "in": "query",
            "description": "DMS doc ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "doctype",
            "in": "query",
            "description": "Doc type",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifieddate",
            "in": "query",
            "description": "Doc date",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point for each record returned",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DMSDocumentResponseDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/sites/{siteid}/batchid": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Create Batch ID",
        "description": "This API is used to get batchId for the specified site.",
        "operationId": "getBatchID",
        "produces": ["application/xml", "text/plain"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The id of the site for which you need batchid",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      }
    },
    "/{version}/shares/message": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Share via private message",
        "description": "<p>This api used to share content from my files or shared items via private message.<br><br><strong>Note :</strong><br><br>- <strong>resourcetype</strong> tag : {folder/file}.<br>- <strong>resourceid</strong> tag : (the folder/file id can be any from my files or shared items).<br>- <strong>share_with</strong> tag : list of email addresses to share with {these should be valid existing Collaborate users,  please see he response to see how error messages are going to be returned}.<br>- <strong>private_message</strong> tag : {The message can accept # and @ mention}.<br>- <strong>expiry</strong> tag format is 'UTC date and time(dd MMM yyyy HH:mm)'.<br>- Integer value for the <strong>permission</strong> tag : {1(download_view_print) / 2(view_only) / 3(edit_download_view_print)}.<br>- Integer value for the <strong>approvenewversions</strong> tag : {0(approve edits is not required) / 1(approve edits by recipients before they are committed as new versions)} this option is introduced from api version 12 when permission value is 3.</p>",
        "operationId": "shareViaPrivateMessage",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Share" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Share via private message successfully",
            "schema": { "$ref": "#/definitions/Share" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/shares": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get Shared List",
        "description": "<p>This API is used to get the list of shared file/folder by different share types<br><br><strong>Note :</strong><br><br>- <strong>contentid</strong>: {the folder/file id from my files or shared items}<br>- <strong>contenttype</strong>: {folder/file}<br>- <strong>permission</strong>: value will be {1(download_view_print) / 2(view_only)}<br>- <strong>shareDate</strong> format is 'UTC date and time(dd MMM yyyy HH:mm)'<br>- <strong>shareExpires</strong> format is 'UTC date and time(dd MMM yyyy HH:mm)', In case of Never: {NA}<br>- <strong>shareStatus</strong>: value will be {Active/Expired}<br>- <strong>sharetype</strong>: value will be {Email/Link/Microblog/Message}</p>",
        "operationId": "getShares",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "contentid of {folder/file}",
            "required": true,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "contenttype like {folder/file}",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/SharedContent" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/shares/microblog": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Share via micro blog",
        "description": "<p>This api used to share content from my files or shared items via microblog.<br><br><strong>Note :</strong><br><br>- <strong>resourcetype</strong> tag : {folder/file}.<br>- <strong>resourceid</strong> tag : (the folder/file id can be any from my files or shared items).<br>- Integer value for the <strong>permission</strong> tag : {1(download_view_print) / 2(view_only) / 3(edit_download_view_print)}<br>- <strong>sharegroup</strong> tag : List of sites to share with.<br>- <strong>microblogmessage</strong> tag : {The microblog can accept # and @ mention}.<br>- <strong>expiry</strong> tag format is 'UTC date and time(dd MMM yyyy HH:mm)'.</p>",
        "operationId": "shareViaMicroBlog",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for mention group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Share" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Share via microblog successfully",
            "schema": { "$ref": "#/definitions/Share" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/folders/{folderid}/dmsaddrequest": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Gets the collab folders and documents structure",
        "description": "An API method that provides a list of files and folders has been added to the synced folder in Collaborate and can be synced from Collaborate to Worksite. An API client can call this method at regular intervals to find out if there are any changes at the Collaborate end, and then based on that, can sync the changes back to DMS.",
        "operationId": "getCollabFoldersAndDocumentsStructure",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "Folderid is the ID of the synced folder",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DMSAddRequestDBO" }
          }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Update details of job by dms add request info",
        "description": "An API method which helps update a Collaborate document's sync status when uploading the content to external DMS system. This method helps to toggle the Collaborate document or folder status from inSync to synced or error, depending on the success or failure of the operation. This status change will change the icon colour from blue to green or red, depending on the final status.",
        "operationId": "updateDetailsOfJobByDMSAddRequestInfo",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderid is the ID of the synced folder",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DMSAddRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/{version}/files/{fileid}/recycle": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Restore file from recycle",
        "description": "Restore a deleted file from Recycle bin. The restore location is a folderid of the target folder where the specific file is to be restored. ",
        "operationId": "restoreFileFromRecycle",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The id of the file to restore",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": "The folder to which this file is to be restored too",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Successfully restored" },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      },
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Delete file from recycle",
        "description": "This api help to delete specific file from to the recycle/deleted items.Its allow you to delete file permanently.",
        "operationId": "deleteDocumentFromRecycle",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "file ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "File deleted successfully." },
          "204": { "description": "File deleted successfully." },
          "401": { "description": "Unauthorized" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/files/{fileid}/content": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Download file",
        "description": "API method to download a single document ( document content not its metadata) from Collaborate. The method supports download by a specific document version.<br><br><strong>Note :</strong><br><br>- <strong>original=true</strong> parameter is only applicable for users, who have rights to download original version from UI.<br>- If workflow is enabled & document is in pending state then the document should only download file to file owner & content admin.<br>- <strong>getconvertedfile=true</strong> parameter is used to get encrypted document.<br>- Users, who have rights to download original version from the Collaborate interface will receive the original document others will get encrypted document.<br>- <strong>thumbnail=true</strong> allows the user to obtain the thumbnail of the specified document.<br>- <strong>imagewidth</strong> should in range of '2048,1024,800,512,256,128,64'. If thumbnail is true then 'imagewidth' will be mandatory.",
        "operationId": "downloadDocumentAPI",
        "produces": [
          "application/json",
          "application/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "file ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          },
          {
            "name": "imagewidth",
            "in": "query",
            "description": "Image width",
            "required": false,
            "type": "string"
          },
          {
            "name": "thumbnail",
            "in": "query",
            "description": "Thumbnail",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getconvertedfile",
            "in": "query",
            "description": "To get encrypted document (true/false)",
            "required": false,
            "type": "string"
          },
          {
            "name": "original",
            "in": "query",
            "description": "download original version of document (true/false)",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Document version number",
            "required": false,
            "type": "string"
          },
          {
            "name": "smartfolderid",
            "in": "query",
            "description": "Smart folder id",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document found" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": { "description": "Document doesn't exists in the system" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while gettting document content",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add file version",
        "description": "<p>This api is used for add new file version.<br><br><strong>Note :</strong><br><br>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.<br>- Optional form data param called \"notification\"  which is used for \"notification\" preference.<br>- <strong>1=</strong> Respect user preference.<br>- <strong>2=</strong> Force email notification.<br>- <strong>3=</strong> Suppress all notifications.<br>This notification form data param is not mandatory and when user does not provide it then default value = 3 = Suppress all notifications.</p>",
        "operationId": "insertDocumentVersion",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Choose file",
            "required": true,
            "type": "file"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Document name",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionnote",
            "in": "formData",
            "description": "Version note",
            "required": false,
            "type": "string"
          },
          {
            "name": "progressiveoperkey",
            "in": "formData",
            "description": "Progressiveoperkey",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsdatabasename",
            "in": "formData",
            "description": "DMS database name",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmseditdate",
            "in": "formData",
            "description": "DMS edit date",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsparentfolderid",
            "in": "formData",
            "description": "DMS parent folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsdocid",
            "in": "formData",
            "description": "DMS doc ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsversion",
            "in": "formData",
            "description": "DMS version",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification",
            "in": "formData",
            "description": "Notification",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchid",
            "in": "query",
            "description": "batchID",
            "required": false,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "Root folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "allowduplicatedms",
            "in": "query",
            "description": "Allow Duplicate DMS",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Document's version uploaded successfully",
            "schema": { "$ref": "#/definitions/DocumentDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while uploading document's version"
          }
        }
      }
    },
    "/{version}/folders/{folderid}/recycle": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Restore folder from recycle",
        "description": "Restore a deleted folder from Recycle bin. The restore location is a folderid of the target folder where the specific folder is to be restored.",
        "operationId": "restoreFolderFromRecycle",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "The id of the folder which is to be restored",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetfolder",
            "in": "query",
            "description": "The folder to which this folder is to be restored too",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Successfully restored" },
          "400": { "description": "Request resource or xml is not valid" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      },
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Delete folder from recycle",
        "description": "This api help to delete specific folder from to the recycle/deleted items.Its allow you to delete folder permanently.",
        "operationId": "deleteFolderFromRecycle",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folder ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Folder deleted successfully." },
          "204": { "description": "Folder deleted successfully." },
          "401": {
            "description": "Unauthorized",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          }
        }
      }
    },
    "/{version}/files/{fileid}/audit": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get file audit history",
        "description": "<p>API method to get version history of a file from Collaborate.<br><br><strong>Note :</strong><br><br>The value of limit parameter behaves as following<br>- limit =25 is the default value<br>- if limit>0 then (number of items returned is equal to limit)<br>- if limit=-1 then return all records<br>- if limit <-1 then the system returns the default no of items i.e 25<br><br>The value of Offset parameter behaves as under<br>- (Default) offset =0<br>- if offset > 0 then the records are returned from the offset value<br>- if offset < 0 then offset value of 0 is set</p>",
        "operationId": "getFileAuditHistory",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The ID of file to get version",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point for each record returned",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DocumentAuditsDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/files/{fileid}/versions": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get file versions history",
        "description": "<p>API method to get version history of a file from Collaborate.<br><br><strong>Note :</strong><br><br>The value of limit parameter behaves as following<br>- limit =25 is the default value<br>- if limit>0 then (number of items returned is equal to limit)<br>- if limit=-1 then return all records<br>- if limit <-1 then the system returns the default no of items i.e 25<br><br>The value of Offset parameter behaves as under<br>- (Default) offset =0<br>- if offset > 0 then the records are returned from the offset value<br>- if offset < 0 then offset value of 0 is set</p>",
        "operationId": "getFileVersionsHistory",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The ID of file to get version",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point for each record returned",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Versions" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/files/duplicates/{filenamewithextension}": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get file's duplicates",
        "description": "API method to find file's duplicates from Collaborate.<br><br><strong>Note :</strong>",
        "operationId": "getFileDuplicatesAPI",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "filenamewithextension",
            "in": "path",
            "description": "filename with extension",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "Parent folder ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "File's duplicates have been found" },
          "204": { "description": "No duplicates were found" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed / Forbidden" },
          "404": { "description": "Document doesn't exists in the system" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred while getting document content",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/files/{fileid}/permissions": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get file group/user permissions",
        "description": "Use this method to return a list of the groups/users that have permissions to the file and their permission details.",
        "operationId": "getFileUserGroupPermission",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "fileid is the ID of the file for which the permissions are required. The fileid can be obtained by calling the get files list API",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "the foldertype=qa for Q&A file support from version 5",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Add/update group/user file permissions",
        "description": "<p>This API method adds or updates file permissions for a group/user.<br>Please note the permissions can only be added to the existing permissions inherited from the parent folder and does not allow the removal of the inherited permissions from the parent folder in which the file exists. <br>usergrouptype In request xml are 1 for user based site and 2 for group based site.</p>",
        "operationId": "updateFileGroupPermission",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The ID for the file. To get the file id, use get files list API",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "the foldertype=qa for Q&A file support from version 5",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserGroupPermissions" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/{version}/folders/{folderid}/permissions": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get folder group/user permissions",
        "description": "<p>Use this method to return a list of the groups/users that have permissions to the folder and their permission details.<br>In the response <!-- 0 for off and 1 for on--> for inherited</p>",
        "operationId": "getFolderUserGroupsPermission",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderid is the ID of the folder for which the permissions are required.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      },
      "put": {
        "tags": ["Document Resource APIs"],
        "summary": "Add/update group/user folder permissions",
        "description": "<p>This API method adds or updates folder permissions for a group/user. This can only be used when the inheritance has been broken for the specific folder. Please use the change inheritance method for a folder to break the inheritance. <br>usergrouptype In request xml are 1 for user based site and 2 for group based site.</p>",
        "operationId": "addUpdateUserGroupFolderPermission",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "The ID for the folder. To get the folder id use get folder id API",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserGroupPermissions" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      }
    },
    "/{version}/changes/{sourceclient}/folders": {
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Removes the all registered folder",
        "description": "To Remove all registered folders for Changes API based on sourceclient.",
        "operationId": "removeAllRegisteredFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "sourceclient",
            "in": "path",
            "description": "Source Client",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": { "description": "Document doesn't exists in the system" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred while getting document content"
          }
        }
      }
    },
    "/{version}/changes/{sourceclient}/folder/{folderid}": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Register folder",
        "description": "To register a given folder for Changes API based on source Client.",
        "operationId": "registerFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceclient",
            "in": "path",
            "description": "Source Client",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": { "description": "Document doesn't exists in the system" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred while getting document content"
          }
        }
      },
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Removes the registered folder",
        "description": "<p>To Remove registered folder for Changes API based on sourceclient.",
        "operationId": "removeRegisteredFolder",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceclient",
            "in": "path",
            "description": "Source Client",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": { "description": "Document doesn't exists in the system" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred while getting document content"
          }
        }
      }
    },
    "/{version}/sites/{siteid}/documentprogresskey": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Gets the document progressive key",
        "description": "To get the docuemnt progressive key value for to upload large size file process.",
        "operationId": "getDocumentProgressiveKey",
        "produces": ["application/xml", "text/plain"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "siteID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/{version}/files/statuslist": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get File Status list",
        "description": "<p>This API is used to get file status list details based on siteid.<br><br><strong>Note :</strong><br><br>The value of type  parameter behaves as following<br>- type=0 is the default value and return all file status<br>- if type=1 then return checkin-checkout<br>- if type=2 then return contract express<br>- if type=3 then return tasks<br>- if type=4 then return  e-sign<br>- if type=5 then return approval workflow<br>- if type=6 then return analysis</p>",
        "operationId": "getAllFileStatuslist",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string",
            "default": "0",
            "enum": ["0", "1", "2", "3", "4", "5", "6"]
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FileStatusTypeResponseDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/shares/link": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Share via link",
        "description": "<p>This api used to share content from my files or shared items<br><br><strong>Note :</strong><br><br>- <strong>resourcetype</strong> tag : {folder/file}.<br>- <strong>resourceid</strong> tag : (the folder/file id can be any from my files or shared items).<br>- Integer value for the <strong>shareoption</strong> tag : {1(anyone) / 2(my organisation user) / 3(system users)/ 4(Can be accessed by anyone who has the password) this 4th option is introduced from api version 6 onwards for sharing <br>&nbsp; password protected files}.<br>- <strong>password</strong> tag option is only used from api version 6 onwards when shareoption value is 4.<br>- <strong>expiry</strong> tag format is 'UTC date and time(dd MMM yyyy HH:mm)'.<br>- Integer value for the <strong>permission</strong> tag : {1(download_view_print) / 2(view_only) / 3(edit_download_view_print)}<br>- Integer value for the <strong>approvenewversions</strong> tag : {0(approve edits is not required) / 1(approve edits by recipients before they are committed as new versions)} this option is introduced from api version 12 when permission value is 3.</p>",
        "operationId": "shareViaLink",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Share" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/Share" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/shares/email": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Share via email",
        "description": "This api used to share content of my files and shared items<br><br><strong>Note :</strong><br><br>- <strong>resourcetype</strong> tag : {folder/file}.<br>- <strong>resourceid</strong> tag : (the folder/file id can be any from my files or shared items).<br>- Integer value for the <strong>shareoption</strong> tag : {1(Can be accessed by anyone who has the link) / 2(Restrict access to specified system users below) / 3(Recipients must be registered to access the link)/ 4(Can be accessed by <br>&nbsp; anyone who has the password) this 4th option is introduced from api version 6 onwards for sharing password protected files}<br>- <strong>password</strong> tag option is only used from api version 6 onwards when shareoption value is 4<br>- <strong>expiry</strong> tag format is 'UTC date and time(dd MMM yyyy HH:mm)'<br>- Integer value for the <strong>permission</strong> tag : {1(download_view_print) / 2(view_only) / 3(edit_download_view_print)}<br>- Integer value for the <strong>approvenewversions</strong> tag : {0(approve edits is not required) / 1(approve edits by recipients before they are committed as new versions)} this option is introduced from api version 12 when permission value is 3.<br>- <strong>emailsubject</strong> tag : email subject<br>- <strong>share_with</strong> tag : list of email addresses to share with</p>",
        "operationId": "shareViaEmail",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Share" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/Share" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/files": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get files list",
        "description": "<p>API method to get a list of files from Collaborate.<br><br><strong>Note :</strong><br><br><p>The representation of q parameter works as under\r\n\r\nq = \"folderid=1\"<br><br>The value of limit parameter behaves as following<br>- limit =100 is the default value<br>- if limit>0 then (number of return data = limit)<br>- if limit=-1 then return all data<br>- if limit<-1 then default value of the limit will be returned, which is 100<br><br>The value of Offset parameter behaves as under<br>- default value of offset is 0<br>- if offset>0 the starting point will be the offset value.<br>- if offset<0 then the default value of 0 will be used by the system<br><br>default value of orderby parameter is descending (desc) and for ordertype parameter is creation date.",
        "operationId": "getFileList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "q",
            "in": "query",
            "description": "query to filter out results",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of items to returned",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point of the returned items. This should be the item ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "This is the order of the items returned. Possible values are \"Asc\" , \"desc\" , Default is Desc, which means that the latest items are returned first.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "can be one of name, size, author, lastModified, filetype",
            "required": false,
            "type": "string"
          },
          {
            "name": "filelist",
            "in": "query",
            "description": "fileID CSV",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusinfo",
            "in": "query",
            "description": "The statusinfo parameter allows you to access additional information about the file. The information available includes Shared Status, Favourite Status, Task Count and Liked status for logged in user ",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "emailmetadata",
            "in": "query",
            "description": "The emailmetadata parameter allows you to access additional information about the file. The information available includes emailmetadata like from, to, cc, sent, received",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Get File List successfully",
            "schema": { "$ref": "#/definitions/DocumentDBO" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/folders/{folderid}/path": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Gets the folder path",
        "description": "API method to get folder details along with its parent folder hierarchy and the information from Collaborate.",
        "operationId": "getFolderLocation",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "folderid",
            "in": "path",
            "description": "folderID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FolderLocationDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/shares/content": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add file for quick share",
        "description": "This api used for Upload the shared file<br><br><strong>Note :</strong></br><br>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.",
        "operationId": "quickFileUpload",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Choose file",
            "required": true,
            "type": "file"
          },
          {
            "name": "progressiveoperkey",
            "in": "query",
            "description": "Progressiveoperkey",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Document name",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "document uploaded successfully" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while uploading document"
          }
        }
      }
    },
    "/{version}/changes": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Gets the changes for sync",
        "description": "<p>The purpose of this API is to provide changes to the system. This will get the sync changes detail.<br><br><strong>Note :</strong><br><br> - In the response nextsyncposition means the next sync position the client should use to obtain changes.<br> - <strong>syncpositionid</strong> : If the next sync position id is provided, then changes following that sync position will be returned. Otherwise a response with a current sync position ID  is given (without activities).If syncpositionid=0 then first 500 top activities will be given in response.<br> - <strong>limit</strong> : This parameter can be used to limit the number of changes returned otherwise 500 changes are returned.<br> - <strong>contenttype</strong> : To filter the result set by a specific content type like 'Files'.  If this parameter is set then it will return specific type of changes, otherwise all types of content will be returned. \"contenttype=files\" will return both file and folder contents.<br> - <strong>siteid</strong> : to get changes by sourceclient basis. If provided, then it will give site specific sync changes otherwise not.<br><br><br><table border=\"2\" cellpadding=\"2\" cellspacing=\"2\" style=\"width: 727px;\">\r\n\t<colgroup>\r\n\t</colgroup>\r\n\t<colgroup>\r\n\t</colgroup>\r\n\t<colgroup span=\"2\">\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"text-align: center;\"><span style=\"font-weight: 500;\">Event id</span></th>\r\n\t\t\t<th scope=\"col\" style=\"text-align: center;\"><span style=\"font-weight: 500;\">User Event</span></th>\r\n\t\t\t<th scope=\"col\" style=\"text-align: center;\"><span style=\"font-weight: 500;\">API version supported</span></th>\r\n\t\t\t<th scope=\"col\" style=\"text-align: center;\"><span style=\"font-weight: 500;\">ItemID will be</span></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"1\">1</td>\r\n\t\t\t<td>File added</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>File deleted</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"3\">3</td>\r\n\t\t\t<td>File moved</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"4\">4</td>\r\n\t\t\t<td>File name changed</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"5\">5</td>\r\n\t\t\t<td>Folder added</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"6\">6</td>\r\n\t\t\t<td>Folder deleted</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"7\">7</td>\r\n\t\t\t<td>Folder moved</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"8\">8</td>\r\n\t\t\t<td>Folder name changed</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"9\">9</td>\r\n\t\t\t<td>New File version added</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"10\">10</td>\r\n\t\t\t<td>File restore</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"11\">11</td>\r\n\t\t\t<td>Folder restore</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"12\">12</td>\r\n\t\t\t<td>File copied to [side]</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"13\">13</td>\r\n\t\t\t<td>File copied from [side]</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"14\">14</td>\r\n\t\t\t<td>&nbsp;Folder copied to [site]</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"15\">15</td>\r\n\t\t\t<td>&nbsp;Folder copied from [site]</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"16\">16</td>\r\n\t\t\t<td>File saved from Microsoft Office</td>\r\n\t\t\t<td>1 and 2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"17\">17</td>\r\n\t\t\t<td>Site status change</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"18\">18</td>\r\n\t\t\t<td>Enable IP restriction for site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"19\">19</td>\r\n\t\t\t<td>Enable Site Password for site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"20\">20</td>\r\n\t\t\t<td>Site Level Passcode enabled</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"21\">21</td>\r\n\t\t\t<td>Site Terms and Condition enabled</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"22\">22</td>\r\n\t\t\t<td>Sie Approval Document Work Flow enabled</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"23\">23</td>\r\n\t\t\t<td>Site enabled with checkin / checkout</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"24\">24</td>\r\n\t\t\t<td>Site DRM enable</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"25\">25</td>\r\n\t\t\t<td>User suspended from site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"26\">26</td>\r\n\t\t\t<td>User removed from site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"27\">27</td>\r\n\t\t\t<td>Document module disabled from site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"28\">28</td>\r\n\t\t\t<td>Folder Permission Change</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"29\">29</td>\r\n\t\t\t<td>File Permission Change</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>File id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"30\">30</td>\r\n\t\t\t<td>User Role Updated in site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"31\">31</td>\r\n\t\t\t<td>Site Enforce User Group Property updated</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"32\">32</td>\r\n\t\t\t<td>Site Permission Level Changed for file module</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"33\">33</td>\r\n\t\t\t<td>Visible On Highq Drive property removed from site</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"34\">34</td>\r\n\t\t\t<td>Folder Inheritance Changed</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>Folder id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"35\">35</td>\r\n\t\t\t<td>My File Enabled</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"36\">36</td>\r\n\t\t\t<td>My File Disabled</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>NA</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"37\">37</td>\r\n\t\t\t<td>User Role Updated From System Admin</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id<br />\r\n\t\t\t&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"37\">38</td>\r\n\t\t\t<td>User removed from site group (4.0.5 onwards)</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"37\">39</td>\r\n\t\t\t<td>User added to site group (4.0.6 onwards)</td>\r\n\t\t\t<td sdnum=\"16393;\" sdval=\"2\">2</td>\r\n\t\t\t<td>user id</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">40</td>\r\n\t\t\t<td valign=\"top\">Enable automatic PDF Conversion</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">41</td>\r\n\t\t\t<td valign=\"top\">Disable automatic PDF Conversion</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">42</td>\r\n\t\t\t<td valign=\"top\">Sent to DocuSign for eSigning</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">43</td>\r\n\t\t\t<td valign=\"top\">Sent to Adobe Sign for eSigning</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">44</td>\r\n\t\t\t<td valign=\"top\">Sign request revoked by sender</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">45</td>\r\n\t\t\t<td valign=\"top\">Signing lock removed by sender</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">46</td>\r\n\t\t\t<td valign=\"top\">Signed in DocuSign</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">47</td>\r\n\t\t\t<td valign=\"top\">Signed in Adobe Sign</td>\r\n\t\t\t<td valign=\"top\">2</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 4.1.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">48</td>\r\n\t\t\t<td valign=\"top\">Redaction Saved</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">49</td>\r\n\t\t\t<td valign=\"top\">Redaction Updated</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">50</td>\r\n\t\t\t<td valign=\"top\">Redaction Removed</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">51</td>\r\n\t\t\t<td valign=\"top\">Enable Document Redaction At ASP Admin</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">52</td>\r\n\t\t\t<td valign=\"top\">Disable Document Redaction At ASP Admin</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">53</td>\r\n\t\t\t<td valign=\"top\">Enable Document Redaction</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">54</td>\r\n\t\t\t<td valign=\"top\">Disable Document Redaction At Site Admin</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA <span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">55</td>\r\n\t\t\t<td valign=\"top\">Site password changed</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">56</td>\r\n\t\t\t<td valign=\"top\">Site IP address changed&nbsp;</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">57</td>\r\n\t\t\t<td valign=\"top\">Show terms &amp; conditions next time</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">58</td>\r\n\t\t\t<td valign=\"top\">Reset 2FA from API Application Registration</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">59</td>\r\n\t\t\t<td valign=\"top\">Disable Site Password for site</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3.1)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">60</td>\r\n\t\t\t<td valign=\"top\">Site Level Passcode disabled</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3.1)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">61</td>\r\n\t\t\t<td valign=\"top\">Disable IP restriction for site</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3.1)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">62</td>\r\n\t\t\t<td valign=\"top\">Site Terms and Condition disabled</td>\r\n\t\t\t<td valign=\"top\">8</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.3.1)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">63</td>\r\n\t\t\t<td valign=\"top\">Document Like</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">64</td>\r\n\t\t\t<td valign=\"top\">Document Unlike</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">65</td>\r\n\t\t\t<td valign=\"top\">Document Add Comment</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">66</td>\r\n\t\t\t<td valign=\"top\">Document Edit Comment</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">67</td>\r\n\t\t\t<td valign=\"top\">Document Delete Comment</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">68</td>\r\n\t\t\t<td valign=\"top\">Document Favourite</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">69</td>\r\n\t\t\t<td valign=\"top\">Document Unfavourite</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">70</td>\r\n\t\t\t<td valign=\"top\">Enable Like System Admin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">71</td>\r\n\t\t\t<td valign=\"top\">Disable Like System Admin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t\t<td valign=\"top\">72</td>\r\n\t\t\t<td valign=\"top\">Enable Comment System Admin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">73</td>\r\n\t\t\t<td valign=\"top\">Disable Comment System Admin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">74</td>\r\n\t\t\t<td valign=\"top\">Document Share Via Email</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">75</td>\r\n\t\t\t<td valign=\"top\">Document Share Via Copy Link</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">76</td>\r\n\t\t\t<td valign=\"top\">Document Share Via Private Message</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">77</td>\r\n\t\t\t<td valign=\"top\">Document Share Via Microblog</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t\t<td valign=\"top\">78</td>\r\n\t\t\t<td valign=\"top\">Folder Share Via Email</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">79</td>\r\n\t\t\t<td valign=\"top\">Folder share Via Copy Link</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">80</td>\r\n\t\t\t<td valign=\"top\">Folder Share Via Private Message</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">81</td>\r\n\t\t\t<td valign=\"top\">Folder Share Via Microblog</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">82</td>\r\n\t\t\t<td valign=\"top\">Document Link Revoked</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">83</td>\r\n\t\t\t<td valign=\"top\">Folder Link Revoked</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">84</td>\r\n\t\t\t<td valign=\"top\">Add Task For Document</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">85</td>\r\n\t\t\t<td valign=\"top\">Delete Task For Document</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">86</td>\r\n\t\t\t<td valign=\"top\">Enable Comments From Site</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t\t<td valign=\"top\">87</td>\r\n\t\t\t<td valign=\"top\">Disable Comments From Site</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">89</td>\r\n\t\t\t<td valign=\"top\">Folder Favourite</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">90</td>\r\n\t\t\t<td valign=\"top\">Folder UnFavourite</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">91</td>\r\n\t\t\t<td valign=\"top\">CE Document added</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">92</td>\r\n\t\t\t<td valign=\"top\">CE Document version added</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">93</td>\r\n\t\t\t<td valign=\"top\">Email Enable SysAdmin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">94</td>\r\n\t\t\t<td valign=\"top\">Email Disable SysAdmin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t\t<td valign=\"top\">95</td>\r\n\t\t\t<td valign=\"top\">Email Enable SiteAdmin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">96</td>\r\n\t\t\t<td valign=\"top\">Email Disable SiteAdmin</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">97</td>\r\n\t\t\t<td valign=\"top\">Email Metadata Enable</td>\r\n\t\t\t<td valign=\"top\">11</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.4)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">98</td>\r\n\t\t\t<td valign=\"top\">Assemble Insert</td>\r\n\t\t\t<td valign=\"top\">13</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.6)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">99</td>\r\n\t\t\t<td valign=\"top\">Assemble Delete</td>\r\n\t\t\t<td valign=\"top\">13</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.6)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">100</td>\r\n\t\t\t<td valign=\"top\">Assemble Extract</td>\r\n\t\t\t<td valign=\"top\">13</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.6)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">101</td>\r\n\t\t\t<td valign=\"top\">Assemble Extracted from</td>\r\n\t\t\t<td valign=\"top\">13</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.6)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">102</td>\r\n\t\t\t<td valign=\"top\">Enable secure file sharing</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">103</td>\r\n\t\t\t<td valign=\"top\">Allow users with view rights share files</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">104</td>\r\n\t\t\t<td valign=\"top\">Disable secure file sharing</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">105</td>\r\n\t\t\t<td valign=\"top\">Deny users with view rights share files</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">106</td>\r\n\t\t\t<td valign=\"top\">Enable duplicate file detection</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">107</td>\r\n\t\t\t<td valign=\"top\">Disable duplicate file detection</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">108</td>\r\n\t\t\t<td valign=\"top\">Duplicate file detection level changed</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">109</td>\r\n\t\t\t<td valign=\"top\">Enable duplicate file detection at System Admin level</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td valign=\"top\">110</td>\r\n\t\t\t<td valign=\"top\">Disable duplicate file detection at System Admin level</td>\r\n\t\t\t<td valign=\"top\">14</td>\r\n\t\t\t<td valign=\"top\">NA<span class=\"CkStyleWarningGreen\">(Added in 5.7)</span></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "getChangesForSync",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "syncpositionid",
            "in": "query",
            "description": "The start location for the content sync. All items from the syncpositionid will be returned. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The no of items to return for this request",
            "required": false,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "The type of content for which the changes are required, the default is all but you can save the changes by the following content types Files",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "User can filter by site",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Get Changes List successfully" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorised" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling API with wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/sites/{siteid}/batchid/{batchid}": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Close Batch ID",
        "description": "This API is used to close batchId for the specified site.",
        "operationId": "closeBatchProcess",
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The id of the site for which you want to close batch",
            "required": true,
            "type": "string"
          },
          {
            "name": "batchid",
            "in": "path",
            "description": "The valid batchid of site",
            "required": true,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "The ID of the root folder of the site",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      }
    },
    "/{version}/files/{fileid}/activity": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Register view activity for a file",
        "description": "This API is used to add 'view' activity on file",
        "operationId": "addActivity",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "The id of the file in which activity to be added",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of activity which is always 'view'",
            "required": true,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "Folder type",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      }
    },
    "/{version}/files/content": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add file",
        "description": "<p>This api used for insert file in specified folder in site.<br><br><strong>Note :</strong></br><br>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.</p>",
        "operationId": "insertDocumentV",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Choose file",
            "required": true,
            "type": "file"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "Parent folder ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "overrideduplicate",
            "in": "query",
            "description": "Override duplicate",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Document name",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionnote",
            "in": "formData",
            "description": "Version note",
            "required": false,
            "type": "string"
          },
          {
            "name": "progressiveoperkey",
            "in": "formData",
            "description": "Progressiveoperkey",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsdatabasename",
            "in": "formData",
            "description": "DMS database name",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmseditdate",
            "in": "formData",
            "description": "DMS edit date",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsparentfolderid",
            "in": "formData",
            "description": "DMS parent folder ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsdocid",
            "in": "formData",
            "description": "DMS doc ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsversion",
            "in": "formData",
            "description": "DMS version",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification",
            "in": "formData",
            "description": "Notification",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchid",
            "in": "query",
            "description": "batchID",
            "required": false,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "Root folder ID",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "document uploaded successfully" },
          "202": {
            "description": "document uploaded successfully, updated version of documents for all duplicates"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed / Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occurred while uploading document"
          }
        }
      }
    },
    "/{version}/shares/{shareid}": {
      "delete": {
        "tags": ["Document Resource APIs"],
        "summary": "Delete share/Remove share",
        "description": "<p>The \"Remove a share\" API endpoint deletes only single share link.<br><br><strong>Note :</strong><br><br> - The share link being deleted should be an active share link.<br> - This API will remove only single share link.<br> - If provided {shareid} not exists in system, then 'Access denied' response will be produced.</p>",
        "operationId": "deleteShare",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "shareid",
            "in": "path",
            "description": "The {shareid} is the Id of the share which is to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Share link deleted successfully." },
          "401": { "description": "Unauthorized" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          }
        }
      }
    },
    "/{version}/files/placeholder": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add Placeholder file",
        "description": "<p>This api used for to add placeholder file.<br><br><strong>Note :</strong><br><br>- Optional form data param called \"notification\"  which is used for \"notification\" preference.<br>- <strong>1=</strong> Respect user preference.<br>- <strong>2=</strong> Force email notification.<br>- <strong>3=</strong> Suppress all notifications.<br>This notification form data param is not mandatory and when user does not provide it then default value = 3 = Suppress all notifications.</p>",
        "operationId": "insertPlaceHolder",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "Parent folder ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Document name",
            "required": true,
            "type": "string"
          },
          {
            "name": "notification",
            "in": "formData",
            "description": "Notification",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "placeholder created successfully",
            "schema": { "$ref": "#/definitions/DocumentDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while uploading document",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/event": {
      "post": {
        "tags": ["Events APIs"],
        "summary": "Add Event",
        "description": "Method to Add Event<br>This method is supported in version 5 of the API and above",
        "operationId": "addEvent",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/APIEvent" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Event Added successfully",
            "schema": { "$ref": "#/definitions/APIEvent" }
          },
          "200": { "description": "Event Added successfully" },
          "400": { "description": "Problem with parameters in add event" },
          "401": { "description": "Unauthorised in add event" },
          "403": {
            "description": "Validation failed | Forbidden in add event",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occurred while adding event" }
        }
      }
    },
    "/{version}/event/categorylist": {
      "get": {
        "tags": ["Events APIs"],
        "summary": "Get Event Category List",
        "description": "Method to get event categories list<br>This method is supported in version 5 of the API and above",
        "operationId": "eventCategoriesList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Event Category list get successfully",
            "schema": { "$ref": "#/definitions/Response" }
          },
          "200": { "description": "Event Category list get successfully" },
          "400": {
            "description": "Problem with parameters in event category list"
          },
          "401": { "description": "Unauthorised in event category list" },
          "403": {
            "description": "Validation failed | Forbidden in event category list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting event category list"
          }
        }
      }
    },
    "/{version}/event/reSynchronisationFlag": {
      "get": {
        "tags": ["Events APIs"],
        "summary": "Get Re-syncronization flag",
        "description": "Method to get resynchronization flag<br>This method is supported in version 1 of the API and above",
        "operationId": "reSynchronisationFlag_1",
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "lastSynkDate",
            "in": "query",
            "description": "last synk date",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "resynchronization flag get successfully",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "200": { "description": "resynchronization flag get successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting resynchronization flag"
          }
        }
      }
    },
    "/{version}/event/create": {
      "post": {
        "tags": ["Events APIs"],
        "summary": "Create Event",
        "description": "Method to Create Event<br>This method is supported in version 1 of the API and above",
        "operationId": "createEvent",
        "consumes": ["text/xml"],
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/EventListDBO" }
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Event Created successfully",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "200": { "description": "Event created successfully" },
          "400": { "description": "Problem with parameters in create event" },
          "401": { "description": "Unauthorised in create event" },
          "403": {
            "description": "Validation failed | Forbidden in create event",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while creating event"
          }
        }
      }
    },
    "/{version}/event/category": {
      "post": {
        "tags": ["Events APIs"],
        "summary": "Get Site Categories",
        "description": "Method to get site categories<br>This method is supported in version 1 of the API and above",
        "operationId": "siteCategories_1",
        "consumes": ["text/xml"],
        "produces": ["text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/category" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Site Category get successfully",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "200": { "description": "Site Category get successfully" },
          "400": {
            "description": "Problem with parameters in site categories"
          },
          "401": { "description": "Unauthorised in site categories" },
          "403": {
            "description": "Validation failed | Forbidden in site categories",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting site category"
          }
        }
      }
    },
    "/{version}/followers/{userid}": {
      "put": {
        "tags": ["  Followers/ Following Resource"],
        "summary": "Follow / Unfollow User",
        "description": "Follow / Unfollow user API",
        "operationId": "insertUpdateFollowers",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          },
          {
            "name": "follow",
            "in": "query",
            "description": "follow = 1 ; for follow<br>follow = 0 ; for unfollow",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Follow/Unfollow user performed successfully"
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing follow/unfollow user"
          }
        }
      }
    },
    "/{version}/followers/{userid}/followings": {
      "get": {
        "tags": ["  Followers/ Following Resource"],
        "summary": "Get Following",
        "description": "Method to obtain user's following<br>This method is supported in version 6 of the API and above",
        "operationId": "getUserFollowing",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Following users returned successfully",
            "schema": { "$ref": "#/definitions/users" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting following users"
          }
        }
      }
    },
    "/{version}/followers/{userid}/followers": {
      "get": {
        "tags": ["  Followers/ Following Resource"],
        "summary": "Get Followers",
        "description": "Method to obtain user's followers<br>This method is supported in version 6 of the API and above",
        "operationId": "getFollowersList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Followers returned successfully",
            "schema": { "$ref": "#/definitions/users" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting followers"
          }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/views/{viewid}/permissions": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the iSheet view permission",
        "description": "<p>This method returns the list of iSheet-view permissions. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getISheetViewPermissions",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for the view where the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the view where the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSeet view permissions",
            "schema": { "$ref": "#/definitions/iSheetViewPermissionsDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet view permission",
        "description": "<p>This method sets the values based on the information provided. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "updateIsheetViewPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for the view where the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the view where the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/iSheetViewPermissionsDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/doctemplate": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the iSheet document template",
        "description": "<p>This method is used to get a list of iSheet document templates.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getDocTemplates",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "List of iSheet document templates",
            "schema": { "$ref": "#/definitions/ISheetDocTemplatesDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To add an iSheet document report",
        "description": "<p>This method shows you how to add a new iSheet document report</p><br><p><strong>Note :</strong></p></br><br><p>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.</p><br><br><p>POST /api/{version}/isheets/admin/doctemplate?siteid=${siteid}</p><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>siteid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>A numeric value representing the site id </p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>The id of the site for the iSheet document templates.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "insertSheetDocReport",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site for which the template(s) are required",
            "required": true,
            "type": "string"
          },
          {
            "name": "reportfile",
            "in": "formData",
            "description": "Parameter name should be called reportfile and the value is the file to be uploaded",
            "required": true,
            "type": "file"
          },
          {
            "name": "templatename",
            "in": "formData",
            "description": "Template name",
            "required": true,
            "type": "string"
          },
          {
            "name": "templatetype",
            "in": "formData",
            "description": "Template type",
            "required": false,
            "type": "string",
            "enum": ["SITE_WIDE", "SINGLE_RECORD"]
          },
          {
            "name": "linkedisheet",
            "in": "formData",
            "description": "Id of iSheet - only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string"
          },
          {
            "name": "linkedviewtype",
            "in": "formData",
            "description": "Linked view type - only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "linkedviewid",
            "in": "formData",
            "description": "CSV of isheet view id (multiple view id with ',' separated ). Only applicable for templatetype=SINGLE_RECORD and 0 : All isheet views",
            "required": false,
            "type": "string"
          },
          {
            "name": "generatedocument",
            "in": "formData",
            "description": "Generate document",
            "required": false,
            "type": "string",
            "enum": ["WORD", "PDF"]
          },
          {
            "name": "downloaddocument",
            "in": "formData",
            "description": "Download document",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "savetofolder",
            "in": "formData",
            "description": "Save to folder",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "savetospecificfolder",
            "in": "formData",
            "description": "Id of the folder",
            "required": false,
            "type": "string"
          },
          {
            "name": "savetospecificisheetcolumn",
            "in": "formData",
            "description": "Id of the column. This field is only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the details of the newly created iSheet document report",
            "schema": { "$ref": "#/definitions/ISheetDocTemplateDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/permissions": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of the iSheet permission",
        "description": "<p>Method used to get the list of iSheet permissions.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getIsheetPermissions",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the permissions are required ",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet permissions",
            "schema": { "$ref": "#/definitions/isheetPermissionsDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet permission",
        "description": "<p>This method is used to set the values based on the information provided at the iSheet level. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "updateSheetPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetPermissionsDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/doctemplate/{doctemplateid}": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To edit the iSheet document template",
        "description": "<p>This method lets you edit an iSheet document template.</p> <br><br><p><strong>Note :</strong></p></br><br><p>- API supports chunking upload. Need to add <strong>content-range</strong> header in request.</p><br>",
        "operationId": "updateSheetDocReport",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of doctemplate which is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportfile",
            "in": "formData",
            "description": "Parameter name should be called reportfile and the value is the file to be uploaded",
            "required": true,
            "type": "string"
          },
          {
            "name": "templatename",
            "in": "formData",
            "description": "Template name",
            "required": false,
            "type": "string"
          },
          {
            "name": "templatetype",
            "in": "formData",
            "description": "Template type",
            "required": false,
            "type": "string",
            "enum": ["SITE_WIDE", "SINGLE_RECORD"]
          },
          {
            "name": "linkedisheet",
            "in": "formData",
            "description": "Id of the iSheet - only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string"
          },
          {
            "name": "linkedviewtype",
            "in": "formData",
            "description": "Linked view type - only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "linkedviewid",
            "in": "formData",
            "description": "CSV of isheet view id (multiple view id with ',' separated ). Only applicable for templatetype=SINGLE_RECORD and 0 : All isheet views",
            "required": false,
            "type": "string"
          },
          {
            "name": "generatedocument",
            "in": "formData",
            "description": "Generate document",
            "required": false,
            "type": "string",
            "enum": ["WORD", "PDF"]
          },
          {
            "name": "downloaddocument",
            "in": "formData",
            "description": "Download document",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "savetofolder",
            "in": "formData",
            "description": "Save to folder",
            "required": false,
            "type": "string",
            "enum": ["0", "1"]
          },
          {
            "name": "savetospecificfolder",
            "in": "formData",
            "description": "Id of the folder",
            "required": false,
            "type": "string"
          },
          {
            "name": "savetospecificisheetcolumn",
            "in": "formData",
            "description": "Id of the column. This field is only applicable for templatetype=SINGLE_RECORD",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete an iSheet document template",
        "description": "<p>This API call is used to delete the iSheet document template.</p><p>The method has no request parameters or body.</p>",
        "operationId": "deleteIsheetDocTemplate",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of the iSheet document template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/sortcolumns": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of sorted iSheet columns based on column position in ascending order",
        "description": "<p>This method is used to organise the list of iSheet columns based on column position into ascending order</p><br><p>Note : As we can see in the UI, the response will display with columns in the correct sequences.</p>",
        "operationId": "getSortIsheetColumns",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of sorted iSheet columns based on column position in ascending order.",
            "schema": { "$ref": "#/definitions/columns" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update iSheet columns' position in sorted order",
        "description": "<p>This method is used to sort the iSheet columns order as per the request.</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>sectionid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>This parameter query is only applicable if the section is enabled in the iSheet. Once the section is enabled, the columns associated to the section can be re-ordered. Columns that are not associated, cannot be re-ordered.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><P>PUT /api/3/isheets/admin/{isheetid}/sortcolumns?sectionid={sectionid}</p><br><P>Note : The order of the columns in the request API determines the order of the columns in iSheet.",
        "operationId": "updateSortIsheetColumns",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/columns" }
          },
          {
            "name": "sectionid",
            "in": "query",
            "description": "Id of the section",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/sections/{sectionid}": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To edit the iSheet section",
        "description": "<p>Method used to edit section of the iSheet.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "editISheetSection",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet that is to be edited",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sectionid",
            "in": "path",
            "description": "Id of the section that is to be edited",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ISheetSectionDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete an iSheet section",
        "description": "<p>Method used to delete a section. A section can only be deleted if there are no columns associated with it.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "deleteISheetSection",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet that is to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sectionid",
            "in": "path",
            "description": "Id of section that is to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/permissions/status": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To enable or disable iSheet permission",
        "description": "<p>This method is used to enabled/disabled a permission at the iSheet level. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "enableDisableSheetPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the permission is to be enabled/disabled",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "enablepermissions",
            "in": "query",
            "description": "Enable permissions can be true/false",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/columns/{columnid}/permissions/status": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To enable or disable iSheet column permission",
        "description": "<p>This method is used to enable or disable permissions at the iSheet column level. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "enableDisableSheetColumnPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which view permission is to be enabled/disabled",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inheritfromisheet",
            "in": "query",
            "description": "This value can be true/false",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnid",
            "in": "path",
            "description": "Id of the column for which permission is to be enabled/disabled",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/choicecolumnoptions": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of iSheet Choice and Score columns",
        "description": "<p>Method to Get Choice And Score columns of an existing iSheet. <br>This method is supported in version 8 of the API and above.</p>",
        "operationId": "getISheetChoiceANDScoreColumns",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of iSheet in which columns are required",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "8"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet Choice and Score columns",
            "schema": { "$ref": "#/definitions/columns" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/views/{viewid}/permissions/status": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To enable or disable iSheet view permission",
        "description": "<p>This method is used to enable/disable permissions at an iSheet view level. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "enableDisableSheetViewPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which view permission is to be enabled/disabled",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accesstoallusers",
            "in": "query",
            "description": "Accesstoallusers value can be true/false",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the view where the permission needs to be enabled/disabled",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/columns/{columnid}/permissions": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of the iSheet column permission",
        "description": "<p>This method returns the list of iSheet column permissions. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getIsheetColumnPermissions",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for the column which the permission is being requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnid",
            "in": "path",
            "description": "Id of the column which the permission is being requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API returns the iSheet column permissions in user priority first and then in group",
            "schema": { "$ref": "#/definitions/isheetColumnPermissionsDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update iSheet column permission",
        "description": "<p>This method sets the values based on the information provided. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "updateIsheetColumnPermission",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for the column which the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnid",
            "in": "path",
            "description": "Id of the column for which the permission is to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetColumnPermissionsDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/choicelists/{choicelistid}": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get choice list template",
        "description": "<p>This API will get an individual choice list template that is being requested</p><p> <br>GET /api/{version}/isheets/admin/choicelists/{choicelistid}<br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>choicelistid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>ID of the choice list template being requested</p></td>\r\n\t\t</tr>\r\n\t</tbody>",
        "operationId": "getChoiceListTemplate",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "choicelistid",
            "in": "path",
            "description": "Id of the choice list template",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the choice list templates",
            "schema": { "$ref": "#/definitions/choicelist" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update a choice list.",
        "description": "<p>The update choice list API is used to rename a choice list.</p><br/><p>API Version: 8</p><p>Collaborate Branch: 5.3</p><br/><p>Request URI: <b>PUT</b>&nbsp; /api/8/isheets/admin/choicelists/{choicelistid}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>171</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name cannot be blank</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list name is empty.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>172</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name cannot be more than 256 characters</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list name exceeds 256 characters.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>174</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name 'Dummy choice' already exists in the system</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the duplicate choice list name found.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "updateChoiceListTemplate",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "choicelistid",
            "in": "path",
            "description": "Id of the choice list template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/choicelist" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "If the update is successful, the API will return the 200 response code without any message."
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "405": {
            "description": "Method not allowed (Invalid endpoint/method)"
          },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete choice list template",
        "description": "<p>This API will delete the existing choice list.</p><p> <br>DELETE /api/{version}/isheets/admin/choicelists/{choicelistid}<br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>choicelistid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Id of the choice list is to be deleted.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p> <br><b> Note: </b></p>System admin or site admin of any site is able to access this API for the delete choice list. If a user has a system admin role, he/she is able to delete any choice list. If a user is a site admin, they are only able to delete their own created choice lists.</p>",
        "operationId": "deleteChoiceListTemplate",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "choicelistid",
            "in": "path",
            "description": "ID of the choice list to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/sortviews": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "This method is used to sort the list of iSheet views in ascending order",
        "description": "<p>This method is used to sort the list of iSheet views in ascending order</p><br><p>Note : As we can see in the UI, the response will display with iSheet views in the correct sequences.</p>",
        "operationId": "getSortIsheetViews",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the views are to be sorted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of iSheet views sorted in ascending order",
            "schema": { "$ref": "#/definitions/ISheetViews" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update iSheet views' position in sorted order",
        "description": "<p>This method is used to update and sort the order of the iSheet views</p><br><P>PUT /api/3/isheets/admin/{isheetid}/sortviews</p><br><P>Note : Need to manage sequences in request xml. we will refer this sequence for update. First iSheet view will be set as first and second will be set for second iSheet view.",
        "operationId": "updateSortIsheetViews",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ISheetViews" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/columns": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of iSheet column",
        "description": "<p>Method to get a list of iSheet columns.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getIsheetColumns",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet that a column list is needed for",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "The ID of the iSheet view. Optional. Returns all columns of iSheet if value is not provided",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of iSheet columns",
            "schema": { "$ref": "#/definitions/columns" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To add iSheet column",
        "description": "<p>Method to add a column to an existing iSheet.</p><p>To add attachment column with custom folder location use attachmentcustomfolderid tag inside columnspecificdetail tag</p><p>To get the status of an iSheet column based on a progressive key, call <i>API POST /api/3/progressivekeystatus/{progressive_key}</i></p><p><br><i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br></p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td>This key is returned when a long-running operation is called and can be used to find the final status of the operation</td></tr></tbody></table><p><br>If the operation is successful, the API returns a progressive key resource object. The possible status values are \"INPROGRESS\", \"DONE\" or \"FAIL\". <br>In the case of a failure, an error object is returned with the appropriate error code.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "insertIsheetColumns",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet in which columns are to be added",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/columns" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "If the operation is successful, the API returns a progressive key resource object. Using the progressive key, an API user can see the status of an iSheet column. In case of a failure, an error object is returned with the appropriate error code.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ColumnErrorsDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/doctemplate/{doctemplateid}/download": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To download the iSheet document report (configuration file)",
        "description": "<p>This api is designed for downloading the configuration file (docx, docm) of an iSheet document template</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>doctemplateid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Id of isheet document template.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>(Response codes found in the table)<br></p><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Meaning</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>200</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Document found.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>400</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Problem with parsing XML or JSON object (Bad Request).</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>401</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Unauthorised</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>403</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Validation failed/ Forbidden.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>404</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Document doesn't exist in the system</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>405</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Method not allowed (calling api with wrong method).</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Internal error occurred while getting the document content</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "downloadSheetDocReport",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of the document template",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the 200 response without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/choicelists": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get a list of choice list templates",
        "description": "<p>This method returns a list of choice list templates.<br>This method is supported in version 8 of the API and above.</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 400px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>137</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 400px;\"><P>The limit value is invalid.</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Limit value should be a positive integer, -1 for all items</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>138</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 400px;\"><P>The offset value is invalid.</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Offset value should be a positive integer, 0 is default value</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>167</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 400px;\"><P>columntype parameter is invalid</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Column type values can be 3 for a choice column or 17 for a score column</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>168</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 400px;\"><P>columntype parameter is required</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Column type is required parameter and can't be empty</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>169</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 400px;\"><P>creator parameter is invalid</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Creator parameter can be a single user id or multiple user ids separated by a comma e.g. 6 or 3,4,5</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "getChoiceListTemplates",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "columntype",
            "in": "query",
            "description": "The type of lists to get for example a choice or score",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "search",
            "in": "query",
            "description": "This returns the matching choice lists by name",
            "required": false,
            "type": "string"
          },
          {
            "name": "creator",
            "in": "query",
            "description": "This returns a list of choice lists created by user given in the parameter, it accepts comma separated user id(s) of the creators",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to return in an individual get call, default value is -1 which returns all the values",
            "required": false,
            "type": "string",
            "default": "-1"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting position of the choice list from when the choice list should be returned, This is to allow pagination",
            "required": false,
            "type": "string",
            "default": "0"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of choice list templates",
            "schema": { "$ref": "#/definitions/choicelists" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To add a choice list along with its items/values.",
        "description": "<p>The add choice list API is used to add a choice list along with its items/values.</p><p>API Version: 8</p><p>Collaborate Branch: 5.3</p><p>Request URI: <b>POST</b>&nbsp; /api/8/isheets/admin/choicelists</p><br><p>(error codes found in the table)</p><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:1200px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 130px;\"><strong><P>API Error code</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 550px;\"><strong><P>Error message</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: *\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>167</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>columntype parameter is invalid</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>Column type values can be 3 for a choice column or 17 for a score column</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>168</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>columntype parameter is required</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list column type is empty.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>171</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name cannot be blank</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list name is empty.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>172</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name cannot be more than 256 characters</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list name exceeds 256 characters.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>173</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Choice list item(s) or its label should not be empty</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list item(s) is/are not provided.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>174</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The name 'XXX choice' already exists in the system</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the duplicate choice list name is chosen again.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>175</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>The choice option value size must be less than 256 characters</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the choice list item label exceeds 255 chars.</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 130px;\"><p>176</p></td>\r\n\t\t\t<td style=\"width: 550px;\"><P>Invalid score value '<Provided Score value e.g. 10000>'. Enter numeric values between -9999.9999 to 9999.9999</p></td>\r\n\t\t\t<td style=\"width: *;\"><P>If the score value is not within the range -9999.9999 to 9999.9999</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "addChoiceListTemplate",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/choicelist" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "This API will return the added choice list with id and name",
            "schema": { "$ref": "#/definitions/choicelist" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "405": {
            "description": "Method not allowed (Invalid endpoint/method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/settings": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the iSheet settings",
        "description": "<p>This method is used to get the iSheet settings. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getIsheetSettings",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return a list of iSheet settings",
            "schema": { "$ref": "#/definitions/isheetSettings" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet settings",
        "description": "<p>This method is used to update the iSheet settings.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "updateIsheetSettings",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site where the settings will be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetSettings" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/isheettemplate/{templateid}": {
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To import the iSheet templatein a site",
        "description": "<p>Use this method to import an iSheet template to a site</p><br><p>If the operation is successful the API returns a progressive key resource object and you can see the status of an iSheet template. Otherwise an error object is returned with the appropriate error code.</p></br></br><p><b>To get the status of an iSheet template based on a progressive key</b></p><br><p>POST /api/3/progressivekeystatus/{progressive_key}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Type</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>progressive_key</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><p>String</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><p>You can use this key to check the status of your progress. When the first request is sent, a progressive key is returned in response.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>If the operation is successful, the API returns a progressive key resource object with status of either 'INPROGRESS', 'DONE', or 'FAIL'. If there is a failure,  an error object is returned with the appropriate error code.</p><br><p>Note: templateid is the id of the templates imported into the site from system admin</p>",
        "operationId": "importIsheetTemplate",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "templateid",
            "in": "path",
            "description": "Id of the template",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site the template will be imported to",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/importISheetTemplateDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the imported iSheet template",
        "description": "<p>This method sets the values based on the information provided</p><br><p>If the operation is successful, the API returns a progressive key resource object. Based on this you can see the status of the iSheet template, otherwise an error object is returned with the appropriate error code.</p></br></br><p><b>To get the status of an iSheet template based on a progressive key</b></p><br><p>POST /api/3/progressivekeystatus/{progressive_key}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Type</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>progressive_key</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><p>String</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><p>You can use this key to check the status of your progress. When the first request is sent, a progressive key is returned in response.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>If the operation is successful, the API returns a progressive key resource object with status of either 'INPROGRESS', 'DONE', or 'FAIL'. If there is a failure,  an error object is returned with the appropriate error code.</p><br><p>Note: linkedtemplateid = A new id is generated when an iSheet template is added in the site.</p>",
        "operationId": "updateImportedIsheetTemplate",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "Id of the linked template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/importISheetTemplateDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete the imported iSheet template",
        "description": "<p>Use this method to delete iSheet templates from a site</p><br><p>If the operation is successful, the API returns a progressive key resource object. Based on this you can see the status of the iSheet template, otherwise an error object is returned with the appropriate error code.</p></br></br><p><b>To get the status of an iSheet template based on a progressive key</b></p><br><p>POST /api/3/progressivekeystatus/{progressive_key}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Type</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>progressive_key</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><p>String</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><p>Use this key to check the status of your progress. When the first request is sent, a progressive key is returned in the response.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>If the operation is successful, the API returns a progressive key resource object with status of either 'INPROGRESS', 'DONE', or 'FAIL'. If there is a failure,  an error object is returned with the appropriate error code.</p><br><p>Note: linkedtemplateid = A new id is generated when an iSheet template is added in the site.</p>",
        "operationId": "deleteImportedIsheetTemplate",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "Id of the linked template",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/isheettemplate/linkedtemplatelist": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the linked iSheet templates of the site",
        "description": "<p>This method is used to get a list of iSheet templates which are imported in a site</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>siteid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>The id of the site to get the list of linked iSheet templates</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>Note : As we can see in the UI, the response will display with the iSheet templates in the correct sequences.</p>",
        "operationId": "getLinkedtemplateList",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site which the templates are required",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of imported iSheet reports.",
            "schema": { "$ref": "#/definitions/ImportISheetTemplatesDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "This API call is used to get a list of iSheets from a site.",
        "description": "<p>This API call is used to get a list of iSheets from a site.</p><p>This method includes the iSheet structure as seen in the iSheet admin interface. Please note that this method is only available to site and content admins.</p>",
        "operationId": "getISheets",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the iSheet site for which the iSheets are to be obtained",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type parameter is not mandatory. Blank or Null will return all iSheets including metadata iSheets. Other values are documentmetadata, foldermetadata, taskmetadata, normal",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return a list of iSheets from a site",
            "schema": { "$ref": "#/definitions/ISheetDocTemplatesDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To create an iSheet",
        "description": "<p>Method to add a new iSheet to the site. <br>The method only allows you to define the details of an iSheet and does not provide the capability to add columns to the iSheet.<br>The Add columns to iSheet record method should be used to add columns to the iSheet.</p><p> To Add an iSheet call API: <i> POST : /api/3/isheets/admin?siteid={siteid} </i><p> <br><b> Parameters: </b></p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>siteid</td><td>number</td><td>The ID of the site to create the iSheet in</td></tr></tbody></table><br><p>If successful, the API returns the 200 http message If the operation fails, the API will return one of the following error codes.</p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Code</th><th scope=\"col\">Meaning</th></tr></thead><tbody><tr><td>200</td><td>iSheet created  successfully</td></tr><tr><td>401</td><td>Unauthorised</td></tr><tr><td>403</td><td>Validation failed/ Forbidden</td></tr><tr><td>405</td><td>Method not allowed (calling api with wrong method)</td></tr><tr><td>500</td><td>Internal error occurred</td></tr></tbody></table><p><br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "createIsheet",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site for which iSheet is to be created",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the details about the newly created iSheet",
            "schema": { "$ref": "#/definitions/isheetDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/columns/{columnid}": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet column",
        "description": "<p>Method to edit a column in an existing iSheet. <p>To add attachment column with custom folder location use attachmentcustomfolderid tag inside columnspecificdetail tag</p><br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "updateIsheetColumn",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnid",
            "in": "path",
            "description": "Id of iSheet column",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/columnDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ColumnErrorsDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete the iSheet Column",
        "description": "<p>API method to delete an individual column.</p><br><p>DELETE /api/3/isheets/admin/{isheetid}/columns/{columnid}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Type</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>isheetId</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Id of the iSheet where the column is to be deleted</p></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>columnid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Id of the column to be deleted</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>To get the status of an iSheet column based on a progressive key</p><br><p>POST /api/3/progressivekeystatus/{progressive_key}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Type</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>progressive_key</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>String</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>Use this key to check the status of your progress. When you first send a delete request, a progressive key is returned in response.</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>If the operation is successful, the API returns a progressive key resource object with a status of either 'INPROGRESS', 'DONE' or 'FAIL'.If there is a failure, an error object is returned with the appropriate error code.</p>",
        "operationId": "deleteISheetColumn",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet where the column is to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "columnid",
            "in": "path",
            "description": "Id of the column to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/sortisheets": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of the iSheets sorted based on the position in ascending order",
        "description": "<p>This method is used to sort the iSheets into ascending order</p><br><p>GET /api/3/isheets/admin/sortisheets?siteid=${siteid}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>siteid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>The id of the site</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>Note : As seen in the UI, the response will display the iSheets in their correct sequence.</p>",
        "operationId": "getSortIsheets",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of iSheets in ascending order",
            "schema": { "$ref": "#/definitions/ISheetsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update iSheets in order",
        "description": "<p>This method is used to arrange the iSheets into a sort order</p><br><p>PUT /api/3/isheets/admin/sortisheets?siteid=${siteid}</p><br><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr align=\"center\">\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Name</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 120px;\"><strong><P>Parameter Value</p></strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 618px;\"><strong><P>Description</p></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 120px;\">\r\n\t\t\t<p>siteid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 120px;\"><P>number</p></td>\r\n\t\t\t<td style=\"width: 618px;\"><P>The ID of the site where the iSheets will be sorted</p></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br><p>Note : Need to manage sequences in the request xml. We will refer this sequence for update. First iSheet will be set as first and second will be set for second iSheet.</p>",
        "operationId": "updateSortIsheets",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ISheetsDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the 200 response without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/sections": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of iSheet sections",
        "description": "<p>This API call is used to get a list of iSheet sections.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getISheetSection",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the sections are to be obtained",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of iSheet sections",
            "schema": { "$ref": "#/definitions/ISheetSectionsDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To create an iSheet section",
        "description": "<p>This API will add a new section to the iSheet. <br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "addIsheetSection",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the section is to be added",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ISheetSectionDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the details about the newly created iSheet section",
            "schema": { "$ref": "#/definitions/ISheetSectionsDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/views/{viewid}": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet view",
        "description": "<p>Edit view to the iSheet</p><br><p>The methods returns a 200 http response when successful, otherwise an error object is returned.</p>",
        "operationId": "updateIsheetView",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the view",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/iSheetView" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete the iSheet view",
        "description": "<p>Delete an iSheet view.</p><br><p>The method returns a 200 http response if the section is deleted successfully, otherwise an error response is returned.</p>",
        "operationId": "deleteIsheetView",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the iSheet view",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}/views": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the list of iSheet view",
        "description": "<p>Get the list of views for an iSheet.</p><br>",
        "operationId": "getISheetViews",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet views.",
            "schema": { "$ref": "#/definitions/ISheetViews" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "post": {
        "tags": ["ISheet Admin API"],
        "summary": "To create an iSheet view",
        "description": "<p>Add a new view to the iSheet</p><br><p>The methods returns a 200 http response in case of a successful request, otherwise an error object is returned.</p>",
        "operationId": "createIsheetView",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/iSheetView" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the newly created iSheet view",
            "schema": { "$ref": "#/definitions/iSheetView" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      }
    },
    "/{version}/isheets/admin/{isheetid}": {
      "put": {
        "tags": ["ISheet Admin API"],
        "summary": "To update the iSheet",
        "description": "<p>API method to edit an existing iSheet.</p>",
        "operationId": "updateIsheet",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet which is being edited",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal error occurred" }
        }
      },
      "delete": {
        "tags": ["ISheet Admin API"],
        "summary": "To delete the iSheet",
        "description": "<p>This API will delete the existing iSheet.</p><p> <br>To delete an iSheet call API: <i> DELETE /api/{version}/isheets/admin/{isheetid} </i><p> <br><b> Parameters: </b></p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>isheetId</td><td>number</td><td>Id of the iSheet for which the column is to be deleted</td></tr></tbody></table><p>To get the status of an iSheet column based on a progressive key, call <i>API POST /api/3/progressivekeystatus/{progressive_key}</i></p><p><br><i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br></p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td>This key is returned when a long-running operation is called and can be used to find the final status of the operation</td></tr></tbody></table><p><br>If the operation is successful, the API returns a progressive key resource object. The possible status values are \"INPROGRESS\", \"DONE\" or \"FAIL\". <br>In the case of a failure, an error object is returned with the appropriate error code.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "deleteIsheet",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet which is to be deleted",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/columntypes": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get the iSheet column types",
        "description": "<p>This method returns the allowed column types and should be used when creating a new column in an iSheet.<br>This method is supported in version 3 of the API and above.</p>",
        "operationId": "getColumnTypes",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This API will return the list of iSheet column types",
            "schema": { "$ref": "#/definitions/ColumnTypesDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/{itemid}": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get an iSheet items by item id",
        "description": "<p>This API call is used to get an iSheet item.</p><br><p>This API call is also used for site metadata related custom, standard & virtual columns. As well as a site administrator, site owner or system administrator, if the sheetID is the system level sitemetadata sheetID and itemID is taken from the getSite API call.</p><br><p><b>Note :</b> As seen in the UI, the response will be shown with iSheet views in the correct sequences.</p>",
        "operationId": "getISheetItem",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Id of the iSheet item",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view. Optional. Default view will be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "API will return the specific iSheet item" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Module"],
        "summary": "To edit iSheet item by using the item id",
        "description": "<p>This API call is used to edit Isheet item by item ID.</p><br><p>This API call is also used for updating site custom metadata by a site administrator, a site owner or a system administrator if the itemID is taken from the getSite API call.</p><br>",
        "operationId": "editIsheetItem",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Id of the iSheet item",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view (Optional)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ItemErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "409": {
            "description": "Another user is editing the same rowid / Unable to aquire data source",
            "schema": { "$ref": "#/definitions/ItemErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/doctemplate/generatedocument/{doctemplateid}/download": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "Download generated document for document template",
        "description": "<p>This API call is used to download the generated document template using /isheet/doctemplate/generatedocument API. And a key can be found in the response from the API.</p><p>If generating a document that is in progress</p><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;INPROGRESS&lt;/progressivekeystatus&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><br><br><p>If generating a document that is now complete</p><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;DONE&lt;/progressivekeystatus&gt;<br>&emsp;\t\t&lt;downloadlink&gt;https://local.com/sitepont/api/<apiversion>/isheet/doctemplate/generatedocument/{docTemplateId}/download/key={progressiveKey}&lt;/downloadlink&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><br><br><p>Response will be in binary stream of document</p>",
        "operationId": "downloadDocuAutoReport",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "key",
            "in": "query",
            "description": "The key generated in response of document generation api",
            "required": true,
            "type": "string"
          },
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of the document template",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/byexternalid/{externalid}": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get iSheet item by the external id",
        "description": "<p>This API call is used to get iSheet item by external ID.</p>",
        "operationId": "getISheetItemByExternalId",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "externalid",
            "in": "path",
            "description": "External id of the iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view. Optional. Default view will be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "API will return a dynamic XML/JSON Object" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "409": {
            "description": "Another user is editing the same rowid / Unable to aquire data source",
            "schema": { "$ref": "#/definitions/ItemErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "tags": ["ISheet Module"],
        "summary": "To edit an iSheet item by using the external id",
        "description": "<p>This API call is used to edit an iSheet item by external id.</p>",
        "operationId": "editIsheetItemByExternalID",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "externalid",
            "in": "path",
            "description": "External id of the iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view (Optional)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/item/{itemid}/attachment/{attachmentid}": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To download the isheet item attachment",
        "description": "<p>This API call is used to download iSheet attachment.</p>",
        "operationId": "downloadIsheetItemAttachment",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Id of the iSheet item",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachmentid",
            "in": "path",
            "description": "Id of the iSheet item attachment",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/workflowScheduler/isheet/{isheetid}/{viewid}/search": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To get the number of records of the iSheet item",
        "description": "<p>This API call is used for Isheet item search record count.</p>",
        "operationId": "workflowSchedulerItemSearch",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request",
            "required": false,
            "type": "string",
            "default": "100"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset allows us to specify which row to start from retrieving data",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "ruleId of RuleDetails",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the count of totalRecords. Exa: { \"totalRecords\": {totalCounts} }"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/doctemplate/generatedocument/sitewide/{doctemplateid}": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "Generate site-wide document",
        "description": "<p>This API call is used to download a site-wide documents from iSheet.</p><p>To get the status of an iSheet item based on a progressive key, call <i>API POST /api/3/progressivekeystatus/{progressive_key}</i></p><i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td> Key to check the status of your action.</td></tr></tbody></table><br><b>Response</b><br><p>If generating a document that is in progress</p><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;INPROGRESS&lt;/progressivekeystatus&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><br><br><p>If generating a document that is now complete</p><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;DONE&lt;/progressivekeystatus&gt;<br>&emsp;\t\t&lt;downloadlink&gt;https://local.com/sitepont/api/{apiversion}/isheet/doctemplate/generatedocument/{docTemplateId}/download/key={progressiveKey}&lt;/downloadlink&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><br><br><p><b>Note :</b> If the iSheet doc template is configured with the setting 'Download document' checked (this can be found in the add/edit manage document template page) then '<downloadlink> will be returned in the response.</p>",
        "operationId": "generateSheetDocReport",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of the document template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetrecordids",
            "in": "query",
            "description": "Id(s) of the iSheet record",
            "required": false,
            "type": "string"
          },
          {
            "name": "isheetid",
            "in": "query",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/businessWorkflow/isheet/{isheetid}/search": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To get the number of records of the iSheet item",
        "description": "<p>This API call is used for Isheet item search record count.</p>",
        "operationId": "businessWorkflowSheetItemSearch",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request",
            "required": false,
            "type": "string",
            "default": "100"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset allows us to specify which row to start from retrieving data",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetItemSearchDBO" }
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "ruleId of RuleDetails",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the count of totalRecords. Exa: { \"totalRecords\": {totalCounts} }"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/byexternalid": {
      "delete": {
        "tags": ["ISheet Module"],
        "summary": "To delete the iSheet items by external id(s)",
        "description": "<p>This API call is used to delete iSheet items by using external id. This supports multiple sheet items in a single call or all iSheet items.</p><br><p>To get the status of an iSheet item based on a progressive key</p><i>POST /api/{version}/progressivekeystatus/{progressiveKey}</i><br><p>{progressiveKey} - This key is returned when a long-running operation is called and can be used to find the final status of the operation</p><br><b>Response</b><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;items&gt;<br>&emsp;&emsp;\t\t\t&lt;item&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;itemid&gt;{itemId}&lt;/itemid&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;externalid&gt;{externalId}&lt;/externalid&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;status&gt;INPROGRESS or DONE or FAIL&lt;/status&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;statuscode&gt;{statusCode (e.g. - 200)}&lt;/statuscode&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;message&gt;{API response message (e.g. - Deleted successfully)}&lt;/message&gt;<br>&emsp;&emsp;\t\t\t&lt;/item&gt;<br>&emsp;\t\t&lt;/items&gt;<br>\t&lt;/progressivekeyresponse&gt;</code>",
        "operationId": "deleteISheetItemsByExternalIds",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "externalids",
            "in": "query",
            "description": "External id(s) of iSheet which is linked with an iSheet item id. You can get the external id from the get all iSheet item api call.<br/>For Specific external ids (Example - EX101, EX102, EX103) or Remove all records where external id is set (Example - ALL)",
            "required": true,
            "type": "string"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/audit": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get the iSheet level audit history",
        "description": "<p>This API call is used to get a list of audit history at iSheet level. Audit details like what, when and by whom the actions were performed, IP address of user, audit identification.</p>",
        "operationId": "getISheetLevelAuditHistory",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "nextauditid",
            "in": "query",
            "description": "Next audit id to get the list of audit history from provided audit id.",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of audit history for an iSheet",
            "schema": { "$ref": "#/definitions/AuditsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/{itemid}/audit": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get the iSheet item level audit history",
        "description": "<p>This API call is used to get a list of audit history of an iSheet at item level. Audit details like what, when and by whom the actions were performed, IP address of user, audit identification.</p>",
        "operationId": "getISheetItemLevelAuditHistory",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Id of the iSheet item",
            "required": true,
            "type": "string"
          },
          {
            "name": "nextauditid",
            "in": "query",
            "description": "Next audit id to get the list of audit history from provided audit id",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of audit history of an iSheet item",
            "schema": { "$ref": "#/definitions/AuditsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/{isheetid}/attachment": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To download isheet items attachments zip",
        "description": "<p>Method to download isheet attachment zip.</p><p><br>If the operation is successful, the API returns approprivate file object.<br>In the case of a failure, an error object is returned with the appropriate error code.<br>This method is supported in version 8 of the API and above.</p>",
        "operationId": "downloadIsheetAttachmentZIP",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "isheetid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "zipID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "If the operation is successful, the API returns approprivate file object. In case of a failure, an error object is returned with the appropriate error code.",
            "schema": { "type": "file" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To prepare isheet items attachments zip",
        "description": "<p>Method to prepare isheet attachment zip.</p><p>To get the status of zip creation process based on a progressive key, call <i>API POST /api/3/progressivekeystatus/{progressive_key}</i></p><p><br><i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br></p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td>This key is returned when a long-running operation is called and can be used to find the final status of the operation</td></tr></tbody></table><p><br>If the operation is successful, the API returns a progressive key resource object. The possible status values are \"INPROGRESS\", \"DONE\" or \"FAIL\". <br>Also send zip creation id.<br>In the case of a failure, an error object is returned with the appropriate error code.<br>This method is supported in version 8 of the API and above.</p>",
        "operationId": "prepareIsheetAttachmentZIP",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/downloadAttachmentParamDBO" }
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "isheetid of isheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "If the operation is successful, the API returns a progressive key resource object. Using the progressive key. In case of a failure, an error object is returned with the appropriate error code.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/attachment": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To add iSheet attachment",
        "description": "<p>This API call is used to upload file in iSheet for image and attachment column type fields.</p><p>The returned attachment id by calling progressive key API will be used in image or attachment column type while adding/updating an item.</p><p>The file should be added as multipart form data. Please note that the parameters are case sensitive.</p><br><br><p>API supports chunking upload. Need to add <strong>content-range</strong> header in request.</p><br><p>Add iSheet Attachment API response</p><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekey&gt;{progressiveKey}&lt;/progressivekey&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;INPROGRESS or DONE or FAIL&lt;/progressivekeystatus&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><br><br><p>To get the status of an iSheet attachment based on a progressive key</p><br><i>POST /api/{version}/progressivekeystatus/{progressive_key}<i><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;progressivekeystatus&gt;INPROGRESS or DONE or FAIL&lt;/progressivekeystatus&gt;<br>&emsp;\t\t&lt;attachment&gt;<br>&emsp;&emsp;\t\t&lt;id&gt;{attachmentId}&lt;/id&gt;<br>&emsp;\t\t&lt;/attachment&gt;<br>\t&lt;/progressivekeyresponse&gt;</code><p>Note : If this API is used to add attachment for site metadata or if folder is from a different site in case of custom folder configuration for attachment column than add siteid in query string. Otherwise no need to add site id.</p><p>Note : If this API is used to add attachment for image column then pass callforimagecolumn as true in query string otherwise not. For image column it is recommended to use this parameter.</p>",
        "operationId": "addISheetAttachment",
        "consumes": ["multipart/form-data"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "The parameter name should be the file and the value should be the file to be uploaded",
            "required": true,
            "type": "file"
          },
          {
            "name": "filename",
            "in": "formData",
            "description": "Name of the newly created file",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Siteid is used for site metada case",
            "required": false,
            "type": "string"
          },
          {
            "name": "callforimagecolumn",
            "in": "query",
            "description": "callforimagecolumn is used for image column attachments. Pass true as mandatory requirement when attachment to be used for image column",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/{itemid}/externalreference/{externalid}": {
      "put": {
        "tags": ["ISheet Module"],
        "summary": "To set the external id for an existing iSheet item",
        "description": "<p>This API call is used to update the external ID for an existing iSheet item.</p>",
        "operationId": "updateExternalIDToISheetItemID",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "externalid",
            "in": "path",
            "description": "External id of the iSheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Id of the iSheet item",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/doctemplate/generatedocument/singlerecord/{doctemplateid}": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To download the single-record documents from iSheet",
        "description": "<p>This API call is used to download the single-record documents from iSheet.</p><p>Use the progress key to check the status and to download the generated doc template by calling the below API.</p><i>/api/{version}/isheet/doctemplate/generatedocument/{doctemplateid}/download?key={progressiveKey}</i><p><b>Note: </b>If the iSheet doc template is configured with the setting 'Download document' checked (this can be found in the add/edit manage document template page) then '<downloadlink> will be returned in the response.</p>",
        "operationId": "generateSheetContractAutomationReport",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "doctemplateid",
            "in": "path",
            "description": "Id of the document template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetrecordid",
            "in": "query",
            "description": "Id of iSheet record",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetid",
            "in": "query",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "viewid",
            "in": "query",
            "description": "Id of the iSheet view",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get a list of iSheet items",
        "description": "<p>This API call is used to get a list of iSheet items.</p><p><b>Note: </b>As seen in the UI, the response will be shown with iSheet views in the correct sequences.</p>",
        "operationId": "getISheetItems",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view. Optional. Default view will be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortcolumnid",
            "in": "query",
            "description": "Id of the column to be sorted. Optional. First column sorting will be applied. The sort column id is necessary to pass, if the sort column is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "The sorting order. Optional. Default value : 0. Pass 1 for Ascending and 2 for Descending Order",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Optional. Default value : 100 . From API version 12 onwards, Maximum allowed value is 1000",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset allows us to specify which row to start from retrieving data. Optional. Default value : 0",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of the iSheet items"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To create the iSheet item",
        "description": "<p>This API call is used to insert iSheet item. Multiple iSheets can be supported.</p><p>To get the status of an iSheet item based on a progressive key, call <i>API POST /api/3/progressivekeystatus/{progressive_key}</i></p><i>e.g. POST /api/{version}/progressivekeystatus/{progressive_key}</i><br><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>progressive_key</td><td>String</td><td> Key to check the status of your action.</td></tr></tbody></table><br><b>Response</b><br><br><code>&lt;progressivekeyresponse&gt;<br>&emsp;\t&lt;items&gt;<br>&emsp;&emsp;\t\t&lt;item&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;itemid&gt;1232&lt;/itemid&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;status&gt;SUCCESS&lt;/status&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;statuscode&gt;200&lt;/statuscode&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;message&gt;Record added successfully&lt;/message&gt;<br>&emsp;&emsp;\t\t&lt;/item&gt;<br>&emsp;&emsp;\t\t&lt;item&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;itemid&gt;1233&lt;/itemid&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;status&gt;SUCCESS&lt;/status&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;statuscode&gt;200&lt;/statuscode&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;message&gt;Record added successfully&lt;/message&gt;<br>&emsp;&emsp;\t\t&lt;/item&gt;<br>&emsp;\t&lt;/items&gt;<br>&lt;/progressivekeyresponse&gt;</code>",
        "operationId": "insertISheetItems",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view (Optional)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "tags": ["ISheet Module"],
        "summary": "To delete iSheet item by iSheet id",
        "description": "<p>This API call is used to delete iSheet item. This supports multiple sheet items in a single call or all iSheet items.</p><br><p>To get the status of an iSheet item based on a progressive key</p><i>POST /api/{version}/progressivekeystatus/{progressiveKey}</i><br><p>{progressiveKey} - This key is returned when a long-running operation is called and can be used to find the final status of the operation</p><br><b>Response</b><br><br><code>\t&lt;progressivekeyresponse&gt;<br>&emsp;\t\t&lt;items&gt;<br>&emsp;&emsp;\t\t\t&lt;item&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;itemid&gt;{itemId}&lt;/itemid&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;externalid&gt;{externalId}&lt;/externalid&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;status&gt;INPROGRESS or DONE or FAIL&lt;/status&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;statuscode&gt;{statusCode (e.g. - 200)}&lt;/statuscode&gt;<br>&emsp;&emsp;&emsp;\t\t\t\t&lt;message&gt;{API response message (e.g. - Deleted successfully)}&lt;/message&gt;<br>&emsp;&emsp;\t\t\t&lt;/item&gt;<br>&emsp;\t\t&lt;/items&gt;<br>\t&lt;/progressivekeyresponse&gt;</code>",
        "operationId": "deleteISheetItems",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "itemids",
            "in": "query",
            "description": "Id(s) of the iSheet item",
            "required": true,
            "type": "string"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API returns progressive object with status of either 'INPROGRESS', 'DONE', or 'FAIL'. Using the progressive key, an API user can see the status of an iSheet item.",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/{isheetid}/columns": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the iSheet columns",
        "description": "<p>This API will get the list of iSheet columns.</p>",
        "operationId": "getColumns",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet for which the column details are to be obtained",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet columns",
            "schema": { "$ref": "#/definitions/columnListDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/files/{fileid}/isheetRecordID": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the iSheet record id from a file",
        "description": "<p>This API call is used to get iSheet recordId form a fileId. <br><br>Collaborate site can be configured with a file metadata iSheet. <br>With a file metadata iSheet a new record is created in the file metadata iSheet when a file is uploaded to the files module of the site. <br>There can only be one file metadata isheet in a site.</p><p>On uploading the file to the files module the associated record in the file metadata isheet can be obtained by calling the following method. <br>This method can also be called for any existing file in the site, to update the metadata records for the file.<br><br>Call the isheetRecordID to obtain the isheet record which is to be updated.</p><p>Request <br> Method Type : Get, Request URL: <i> files/${fileid}/isheetRecordID </i><br>Where fileid parameter is the id of the file for which the metadata record id is required</p><br><b>Response</b><br>The method returns the iSheet Record id in the following format:<br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&emsp;\t&lt;sheet&gt;<br>&emsp;&emsp;\t\t&lt;IsheetRecordID&gt;{numeric record id} &lt;/IsheetRecordID&gt;<br>&emsp;\t&lt;/sheet&gt;<br></code><br><p>Please note that the isheetRecordID parameter is case sensitive<br>In case of an invalid file id an error object is returned</p><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&emsp;\t&lt;error&gt;<br>&emsp;&emsp;\t\t&lt;ref&gt;136 &lt;/ref&gt;<br>&emsp;&emsp;\t\t&lt;summary&gt;File not found &lt;/summary&gt;<br>&emsp;\t&lt;/error&gt;<br></code>",
        "operationId": "getIsheetRecordID",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "Id of the file to get the iSheet record id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the specific iSheet record id ",
            "schema": { "$ref": "#/definitions/sheetDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/template": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the list of iSheet template",
        "description": "<p>This method is used to get the list of iSheet template</p><br><p><b>Note:</b> Only the linked iSheets are returned through this call.</p>",
        "operationId": "getLinkTemplates",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet templates",
            "schema": { "$ref": "#/definitions/templateListDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/item/create": {
      "post": {
        "tags": ["ISheet API"],
        "summary": "To create records in the iSheet",
        "description": "<p>This API call is used to create iSheet items/records.<br><br>The request XML requires siteid and sheet id parameters to determine the iSheet to which the records will be added.<br>In order to add the records to the correct columns a column and value mapping is provided, which is associated with a sequence parameter.<br>the headColumn defines the names of the columns to which the content will be added and row data defines the values for those columns.<br>Please note that the attachments cannot be added to an attachments column using this method.<br>iSheets link column is also not supported through the API. </p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 60%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>siteid</td><td>int</td><td>The id of the site in which the iSheet exists</td></tr><tr><td>sheetid</td><td>int</td><td>The iSheet id to which the records are to be added</td></tr><tr><td>headcolumn</td><td>string</td><td>The name of the columns to which a value is to be added</td></tr><tr><td>sequence</td><td>int</td><td>A number represending the sequence of the column in the iSheet</td></tr><tr><td>itemID (optional)</td><td>int</td><td>This parameter is to be used in case of file metadata iSheet, and is the id of the row which is to be updated. (Please note that the id can be obtained by inspecting the HTML of the page)</td></tr><tr><td>externalID</td><td>int</td><td>Item id of the item from the external system. This saves the external item id of the item in the system, this should be used later on to execute the delete operation</td></tr></tbody></table><br><p>The following iSheet column types are supported at this time:</p><ul><li>Single Line Text</li><li>Multiple Line Text</li><li>Choice</li><li>Number</li><li>Date and Time</li><li>Decimal number</li></ul>",
        "operationId": "inserDataInFinalSheet",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/sheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of data provided in the iSheet",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/templateisheet": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the list of iSheets created using a specific iSheet template",
        "description": "<p>This method is used to get the list of iSheets created using a specific iSheet template</p>",
        "operationId": "getTemplateISheetsByTemplate",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "templateid",
            "in": "query",
            "description": "The id of the template which was used to create the specific iSheets",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheets",
            "schema": { "$ref": "#/definitions/templateISheetListDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/tasks/{taskid}/isheetRecordID": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the iSheet record from task",
        "description": "<p>This API call is used to get iSheet record id from a task id.<br><br>A site can be configured with a task metadata isheet. When a task is created in the task module, a new record is created in the task metadata iSheet. <br><b>Note:</b> There can only be one task metadata iSheet in a site.</p><br><p>On creating the task in the task module, the associated record in the task metadata iSheet can be obtained by calling the following method. <br>This method can also be called for any existing tasks in the site, to update the metadata records for the task.</p><br><p>Call the isheetRecordID to obtain the isheet record which is to be updated.</p><br>",
        "operationId": "getIsheetRecordIDFromTaskID",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "Id of the task for which the metadata record id is required",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet record ids",
            "schema": { "$ref": "#/definitions/sheetDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/externalId": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get external ids of the iSheet",
        "description": "<p>This method gives the external ids of iSheets in CSV format. The external ids are the id of the iSheet records added to the system by an earlier API call. <br>The client application can use these external ids to match the ids with the external system and perform operations.</p><br><p>If no external ids were added to the system when the records were added to the system, or the records were added through the Collaborate then no external ids will be returned for this call.</p><br><p>GET /isheet/externalId?sheetid={sheetid}&siteid={siteid}</p>",
        "operationId": "getSheetExternalIDs",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "sheetid",
            "in": "query",
            "description": "Id of the iSheet for which the column details are to be obtained",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site from which the external ID's are to be obtained",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the CSV of external ids",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/templatesheets/{templateid}": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the list of iSheets created using a specific iSheet template",
        "description": "<p>This API call is used to get a list of iSheets created using a specific iSheet template.</p><p>Request : Method Type : Get, Request URL: <i> /isheet/templateisheet?templateid={templateid} </i></p><p>Parameters</p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Parameter Name</th><th scope=\"col\">Value</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>templateid</td><td>Int</td><td> The id of the template which was used to create the specific iSheets.</td></tr></tbody></table><br><b>Response XML</b><br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&emsp;\t&lt;site&gt;<br>&emsp;&emsp;\t\t&lt;siteid&gt;1&lt;/siteid&gt;<br>&emsp;&emsp;\t\t&lt;sitename&gt;Test site&lt;/sitename&gt;<br>&emsp;&emsp;\t\t&lt;template&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;templateid&gt;1&lt;/templateid&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;templatelinkid&gt;1&lt;/templatelinkid&gt;<br>&emsp;&emsp;\t\t&lt;/template&gt;<br>&emsp;\t&lt;/site&gt;<br></code>",
        "operationId": "getLinkTemplateSheets",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "Id of the template for get linked iSheets",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "API will return the iSheets." },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/templateisheet/column": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the list of iSheets columns created using a specific iSheet template",
        "description": "<p>This method is used to get the list of iSheets columns created using a specific iSheet template</p>",
        "operationId": "getColumnsByTemplateISheet",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "templateisheetid",
            "in": "query",
            "description": "The id of the template which was used to create the specific iSheet columns",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of columns",
            "schema": { "$ref": "#/definitions/columnListDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/item/delete": {
      "post": {
        "tags": ["ISheet API"],
        "summary": "To delete the records from the iSheet",
        "description": "<p>This API call is used to delete items/records from iSheet.<br><br>This method can only delete a record if it was added through an API call and an external id was provided for the record added. <br>This method does not support deletion of a record internally created in Collaborate, using the Collaborate interface.</p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 60%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>siteid</td><td>int</td><td>The id of the site in which the iSheet exists</td></tr><tr><td>sheetid</td><td>int</td><td>Specific iSheet from which the records are to be deleted</td></tr><tr><td>items</td><td>int</td><td>These are the external ids of the system from which the records were imported, these ids can be obtained by a call to get external ids method</td></tr></tbody></table>",
        "operationId": "deleteIsheetItems_1",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/deleteItemsDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet ids which are deleted successfully or the error message",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ResponseDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets": {
      "get": {
        "tags": ["ISheet API"],
        "summary": "To get the iSheet details",
        "description": "<p>This API will get the list of iSheets.<br><br>Specific type of iSheets e.g file metadata iSheet can be obtained by providing the type parameter.</p><p>Request : Method Type : Get, Request URL: <i> /isheets?siteid=${siteid}&type=${type} </i></p><b>Parameters</b><br><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Parameter Name</th><th scope=\"col\">Value</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>siteid</td><td>Int</td><td> The id of the site for which the iSheets are to be obtained.</td></tr><tr><td>type</td><td>string</td><td> Parameter to specify the type of iSheet to be obtained. The possible values are documentmetadata / foldermetadata / normal.</td></tr></tbody></table><br><b>Response</b><br>If the authenticated user has access to the iSheets module for the specific site then this method call will return the iSheets in the site.<br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&emsp;\t&lt;isheets&gt;<br>&emsp;&emsp;\t\t&lt;isheet&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;name&gt;SharePoint_Sheet&lt;/name&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;id&gt;{Integer value of the }&lt;/id&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;type&gt;{text value of one of the supported types}&lt;/type&gt;<br>&emsp;&emsp;\t\t&lt;/isheet&gt;<br>&emsp;\t&lt;/isheets&gt;<br></code>",
        "operationId": "getISheets_1",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the iSheet",
            "required": false,
            "type": "string",
            "enum": [
              "normal",
              "documentmetadata",
              "foldermetadata",
              "contractexpressmetadata"
            ]
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheets",
            "schema": { "$ref": "#/definitions/ISheetsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/system/templates": {
      "get": {
        "tags": ["ISheet System Admin"],
        "summary": "To get the list of the iSheet template",
        "description": "<p>This API call is used to get iSheet templates.<br><br><b>Note :</b><br><ul><li>A site admin user in any single site can access this API</li><li>The request will return only 'active' iSheet templates</li></ul></p>",
        "operationId": "getISheetTemplates",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of iSheet templates",
            "schema": { "$ref": "#/definitions/ISheetTemplatesDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/likes": {
      "get": {
        "tags": ["Likes API"],
        "summary": "Get Likes List",
        "description": "Method to obtain User likes<br>This method is supported in version 4 of the API and above",
        "operationId": "getUserLikes",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content. \r\n<br> e.g. blogid for contenttype=blog and wikiid for contenttype=wiki",
            "required": true,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content Types \r\n<br> e.g. /api/3/likes?contenttype=files&contentid=102 \r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Events\r\n- Comments",
            "required": true,
            "type": "string"
          },
          {
            "name": "activitytype",
            "in": "query",
            "description": "activity type \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><tr><td><b>Content Type</b></td><td><b>Scope of activities</b></td></tr><tr><td>Files</td><td>UPLOADED<br /> UPDATED<br /> LIKED</td></tr><tr><td>Wiki</td><td>CREATED<br /> EDITED<br /> LIKED</td></tr><tr><td>Blog</td><td>PUBLISHED<br /> EDITED<br /> LIKED</td></tr><tr><td>Events</td><td>CREATED<br /> EDITED<br /> LIKED</td></tr><tr><td>Comments</td><td>ADDED</td></tr><tr><td>Tasks</td><td>ADDED<br /> UPDATED</td></tr></tbody></table>",
            "required": false,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "This parameter is used for QA attachment<br>e.g  foldertype = QA<br><br>It is optional and used for QA attachment in  version 5<br>api/5/likes?contenttype=files&contentid=1&foldertype=QA",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "User likes returned successfully",
            "schema": { "$ref": "#/definitions/UserLikes" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting user likes"
          }
        }
      },
      "put": {
        "tags": ["Likes API"],
        "summary": "Like / Unlike content",
        "description": "Like / Unlike content API<br>This method is supported in version 4 of the API and above",
        "operationId": "updateContentLike",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content Types \r\n<br> e.g. /api/3/likes?contenttype=files&contentid=102 \r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Events\r\n- Comments",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content. \r\n<br> e.g. blogid for contenttype=blog and wikiid for contenttype=wiki",
            "required": true,
            "type": "string"
          },
          {
            "name": "like",
            "in": "query",
            "description": "0 : Unlike<br>1 : Like",
            "required": true,
            "type": "string"
          },
          {
            "name": "activitytype",
            "in": "query",
            "description": "activity type \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><tr><td><b>Content Type</b></td><td><b>Scope of activities</b></td></tr><tr><td>Files</td><td>UPLOADED<br /> UPDATED<br /> LIKED</td></tr><tr><td>Wiki</td><td>CREATED<br /> EDITED<br /> LIKED</td></tr><tr><td>Blog</td><td>PUBLISHED<br /> EDITED<br /> LIKED</td></tr><tr><td>Events</td><td>CREATED<br /> EDITED<br /> LIKED</td></tr><tr><td>Comments</td><td>ADDED</td></tr><tr><td>Tasks</td><td>ADDED<br /> UPDATED</td></tr></tbody></table>",
            "required": false,
            "type": "string"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "This parameter is used for QA attachment<br>e.g  foldertype = QA<br><br>It is optional and used for QA attachment in  version 5.0<br>api/5/likes?contenttype=files&contentid=1&foldertype=QA",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "User likes operation successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing user likes"
          }
        }
      }
    },
    "/{version}/microblog/sharewith": {
      "get": {
        "tags": ["Microblog Resource"],
        "summary": "Get sharewith options for microblog",
        "description": "API to get list of sharewith option for post microblog",
        "operationId": "getSharewithOptions",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Text that will be searched against Org name, Site name and Group to filter out.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Site id of the site in which microblog is being posted",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Sharewith options returned successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting sharewith options for microblog"
          }
        }
      }
    },
    "/{version}/getImageForLinkPreview": {
      "get": {
        "tags": ["Microblog Resource"],
        "summary": "Get Image for Link Preview",
        "description": "API method to get image for Link Preview in Microblog",
        "operationId": "getImageForLinkPreview",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "imgURL",
            "in": "query",
            "description": "image URL",
            "required": true,
            "type": "string"
          },
          {
            "name": "width",
            "in": "query",
            "description": "width for image",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "description": "height for image",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while gettting image file"
          }
        }
      }
    },
    "/{version}/microblog": {
      "post": {
        "tags": ["Microblog Resource"],
        "summary": "Post Microblog",
        "description": "API method to post a Microblog",
        "operationId": "addMicroBlog",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for mention group & share with group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Microblog" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Activity returned successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while posting microblog"
          }
        }
      }
    },
    "/{version}/microblog/{microblogid}": {
      "delete": {
        "tags": ["Microblog Resource"],
        "summary": "Delete Microblog",
        "description": "API method to delete a microblog",
        "operationId": "deleteMicroblog",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "microblogid",
            "in": "path",
            "description": "ID of the microblog",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Microblog deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting microlbog"
          }
        }
      }
    },
    "/{version}/site/{siteid}/navigation": {
      "get": {
        "tags": ["Navigation"],
        "summary": "Get all site navigation menus",
        "description": "Get all site navigation menus API",
        "operationId": "getSiteNavigationMenus",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Sitenavigation returned successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting site navigation menus"
          }
        }
      },
      "post": {
        "tags": ["Navigation"],
        "summary": "Add single site navigation menu",
        "description": "Single Site navigation menu configurations API<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t<tbody>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<table class=\"Table\" style=\"width:209px; border-collapse:collapse\" width=\"209\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td nowrap=\"nowrap\" style=\"width:209px; padding:0cm 7px 0cm 7px; height:20px\" valign=\"bottom\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;itemid&gt;</span></b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">itemid is required while adding COLLABORATE_CONTAINER_TYPE menu. </span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Menu id of database.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menutypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">menutypealias is mandatory field. Allowed values are <b>[COLLABORATE_EXTERNAL_TYPE / COLLABORATE_SINGLE_CONTENT_TYPE / COLLABORATE_CONTAINER_TYPE]</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contenttypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Content type alias is mandatory field.</span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Following values are allowed.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>contenttypealias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Description</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a wiki page type menu. And &lt;contentid&gt; should be the wiki id. </span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog type menu. And &lt;contentid&gt; should be the blog id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a task type menu. And &lt;contentid&gt; should be the task id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event type menu. And &lt;contentid&gt; should be the event id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_DOCUMENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a document type menu. And &lt;contentid&gt; should be the document id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_FOLDER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a folder type menu. And &lt;contentid&gt; should be the folder id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_USER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a user type menu. And &lt;contentid&gt; should be the user id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_ITEMDATA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt; should be greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a site type menu. And &lt;siteid&gt; will be considered as  &lt;contentid&gt;.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog category type menu. And &lt;contentid&gt; should be the blog category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event category type menu. And &lt;contentid&gt; should be the event category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK_LIST</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a tasklist type menu. And &lt;contentid&gt; should be the tasklist id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE_MODULE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a module type menu. And &lt;contentid&gt; should be the module id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_VIEW</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_ADD_ISHEET_ITEM_LINK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_CONTAINER_EXTERNAL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Belongs to an external menu type or a container menu type.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contentid&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">content id is mandatory field. </span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, contentid will be considered based on the following modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Content id</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">1</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">2</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">3</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">4</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">5</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">6</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">7</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">8</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">9</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">10</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">13</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;modulealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, following values are allowed for modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;siteid&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Site is to identify that particular menu is belongs to which site.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;numberofcolumns&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_CONTAINER_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;parentmenuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used to identify that menu is belongs to which container.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;displayorder&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used at the time of displaying menu order.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;externalurl&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;linktarget&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE. </b>Default value is <b>_blank</b>. Allowed value is <b>_self</b>(to open link in same window) or <b>_blank</b>(to open link in new window).<br />\t\t\tlinktarget is used to open any hyperlink in new window or existing window.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;menucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssclassname&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenualign&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used in for <b>COLLABORATE_CONTAINER_TYPE. </b>Default value is left. And Allowed value is left/right.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_VIEW.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_ITEMDATA.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewmode&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. 0 (in <b>Form</b> view) or 1 (in <b>Grid</b> view) value is allowed. Otherwise default value 0 will be consider. And sheetviewmode is used for CONTENT_SHEET_ITEMDATA content type menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;disablelink&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;disablelink&gt; will not be considered at the time of add site navigation menu. Default value will be 0.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menuitemtitle&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Is used to set the multilingual values for the menu or submenu. <b>English UK is mandatory. </b><br />\t\t\tCurrently following languages are allowed.</span></span></span><br />\t\t\t</p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Language</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Code</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English UK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_GB</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Netherlands</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">nl_NL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Deutch</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">de_DE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Spanish</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">es_ES</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">French</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">fr_FR</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;title&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Title is used for menu label.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;tooltip&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. If tooltip is not exists and &lt;title&gt; is exists then &lt;title&gt; value will be consider as &lt;tooltip&gt; value.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;language&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Language is mandatory field in &lt;menutitle&gt;.</span></span></span></p>\t\t\t</td>\t\t</tr>\t</tbody></table><br/> <p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Note:</b> &lt;displayorder&gt; will not be consider at the time of add single site navigation menu. Menu will be appended in the existing menus.</span></p>",
        "operationId": "insertNavigationMenu",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Menu" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Site navigation menu saved successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing save site navigation menu configuration"
          }
        }
      },
      "put": {
        "tags": ["Navigation"],
        "summary": "Add multiple site navigation menu",
        "description": "Multiple site navigation menu configurations API<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t<tbody>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<table class=\"Table\" style=\"width:209px; border-collapse:collapse\" width=\"209\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td nowrap=\"nowrap\" style=\"width:209px; padding:0cm 7px 0cm 7px; height:20px\" valign=\"bottom\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;itemid&gt;</span></b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">itemid is required while adding COLLABORATE_CONTAINER_TYPE menu. </span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Menu id of database.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menutypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">menutypealias is mandatory field. Allowed values are <b>[COLLABORATE_EXTERNAL_TYPE / COLLABORATE_SINGLE_CONTENT_TYPE / COLLABORATE_CONTAINER_TYPE]</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contenttypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Content type alias is mandatory field.</span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Following values are allowed.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>contenttypealias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Description</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a wiki page type menu. And &lt;contentid&gt; should be the wiki id. </span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog type menu. And &lt;contentid&gt; should be the blog id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a task type menu. And &lt;contentid&gt; should be the task id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event type menu. And &lt;contentid&gt; should be the event id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_DOCUMENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a document type menu. And &lt;contentid&gt; should be the document id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_FOLDER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a folder type menu. And &lt;contentid&gt; should be the folder id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_USER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a user type menu. And &lt;contentid&gt; should be the user id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_ITEMDATA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt; should be greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a site type menu. And &lt;siteid&gt; will be considered as  &lt;contentid&gt;.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog category type menu. And &lt;contentid&gt; should be the blog category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event category type menu. And &lt;contentid&gt; should be the event category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK_LIST</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a tasklist type menu. And &lt;contentid&gt; should be the tasklist id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE_MODULE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a module type menu. And &lt;contentid&gt; should be the module id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_VIEW</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_ADD_ISHEET_ITEM_LINK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_CONTAINER_EXTERNAL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Belongs to an external menu type or a container menu type.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contentid&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">content id is mandatory field. </span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, contentid will be considered based on the following modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Content id</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">1</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">2</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">3</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">4</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">5</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">6</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">7</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">8</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">9</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">10</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">13</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;modulealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, following values are allowed for modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;siteid&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Site is to identify that particular menu is belongs to which site.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;numberofcolumns&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_CONTAINER_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;parentmenuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used to identify that menu is belongs to which container.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;displayorder&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used at the time of displaying menu order.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;externalurl&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;linktarget&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE. </b>Default value is <b>_blank</b>. Allowed value is <b>_self</b>(to open link in same window) or <b>_blank</b>(to open link in new window).<br />\t\t\tlinktarget is used to open any hyperlink in new window or existing window.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;menucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssclassname&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenualign&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used in for <b>COLLABORATE_CONTAINER_TYPE. </b>Default value is left. And Allowed value is left/right.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_VIEW.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_ITEMDATA.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewmode&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. 0 (in <b>Form</b> view) or 1 (in <b>Grid</b> view) value is allowed. Otherwise default value 0 will be consider. And sheetviewmode is used for CONTENT_SHEET_ITEMDATA content type menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;disablelink&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;disablelink&gt; will not be considered at the time of add site navigation menu. Default value will be 0.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menuitemtitle&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Is used to set the multilingual values for the menu or submenu. <b>English UK is mandatory. </b><br />\t\t\tCurrently following languages are allowed.</span></span></span><br />\t\t\t</p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Language</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Code</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English UK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_GB</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Netherlands</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">nl_NL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Deutch</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">de_DE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Spanish</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">es_ES</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">French</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">fr_FR</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;title&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Title is used for menu label.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;tooltip&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. If tooltip is not exists and &lt;title&gt; is exists then &lt;title&gt; value will be consider as &lt;tooltip&gt; value.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;language&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Language is mandatory field in &lt;menutitle&gt;.</span></span></span></p>\t\t\t</td>\t\t</tr>\t</tbody></table><br/> <p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Note:</b> &lt;displayorder&gt; will not be consider at the time of add multiple site navigation menus. Menus will be appended in the existing menus.</span></p>",
        "operationId": "insertUpdateNavigationMenuConfigurations",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Menus" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Site navigation menu configurations saved successfully"
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing site navigation menu configurations"
          }
        }
      }
    },
    "/{version}/site/{siteid}/navigation/{menuid}": {
      "get": {
        "tags": ["Navigation"],
        "summary": "Get single site navigation menu",
        "description": "Get single site navigation menu API",
        "operationId": "getSiteNavigationMenu",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuid",
            "in": "path",
            "description": "menuID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Sitenavigation menu returned successfully",
            "schema": { "$ref": "#/definitions/Menu" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversation messages"
          }
        }
      },
      "put": {
        "tags": ["Navigation"],
        "summary": "Update single site navigation menu",
        "description": "Update single site navigation menu API<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t<tbody>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<table class=\"Table\" style=\"width:209px; border-collapse:collapse\" width=\"209\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td nowrap=\"nowrap\" style=\"width:209px; padding:0cm 7px 0cm 7px; height:20px\" valign=\"bottom\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;itemid&gt;</span></b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">itemid is required while adding COLLABORATE_CONTAINER_TYPE menu. </span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Menu id of database.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menutypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">menutypealias is mandatory field. Allowed values are <b>[COLLABORATE_EXTERNAL_TYPE / COLLABORATE_SINGLE_CONTENT_TYPE / COLLABORATE_CONTAINER_TYPE]</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contenttypealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:264px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Content type alias is mandatory field.</span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Following values are allowed.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>contenttypealias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Description</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a wiki page type menu. And &lt;contentid&gt; should be the wiki id. </span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog type menu. And &lt;contentid&gt; should be the blog id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a task type menu. And &lt;contentid&gt; should be the task id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event type menu. And &lt;contentid&gt; should be the event id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_DOCUMENT</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a document type menu. And &lt;contentid&gt; should be the document id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_FOLDER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a folder type menu. And &lt;contentid&gt; should be the folder id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_USER</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a user type menu. And &lt;contentid&gt; should be the user id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_ITEMDATA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt; should be greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a site type menu. And &lt;siteid&gt; will be considered as  &lt;contentid&gt;.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_BLOG_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a blog category type menu. And &lt;contentid&gt; should be the blog category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_EVENT_CATEGORY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an event category type menu. And &lt;contentid&gt; should be the event category id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_TASK_LIST</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a tasklist type menu. And &lt;contentid&gt; should be the tasklist id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SITE_MODULE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to a module type menu. And &lt;contentid&gt; should be the module id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_SHEET_VIEW</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt; should be 0 or greater than 0.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_ADD_ISHEET_ITEM_LINK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">belongs to an isheet view type menu. And &lt;contentid&gt; should be the isheet id.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:81px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">CONTENT_CONTAINER_EXTERNAL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:282px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Belongs to an external menu type or a container menu type.</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;contentid&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">content id is mandatory field. </span></span></span></p>\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, contentid will be considered based on the following modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Content id</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">1</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">2</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">3</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">4</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">5</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">6</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">7</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">8</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">9</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">10</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:90px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p align=\"center\" style=\"text-align:center\"><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">13</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;modulealias&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:292px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">When contenttypealias is CONTENT_SITE_MODULE, following values are allowed for modulealias.</span></span></span></p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Module alias</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_HOME</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ACTIVITY</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_DOCUMENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_WIKI</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_BLOGS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_TASKS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_EVENTS</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_PEOPLE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_QA</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_ISHEET</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:272px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">SITE_MODULE_REPORTING</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;siteid&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Site is to identify that particular menu is belongs to which site.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;numberofcolumns&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_CONTAINER_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;parentmenuid&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used to identify that menu is belongs to which container.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;displayorder&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. It is used at the time of displaying menu order.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;externalurl&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE.</b></span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b><span style=\"color:black\">&lt;linktarget&gt;</span></b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. But is mandatory in <b>COLLABORATE_EXTERNAL_TYPE. </b>Default value is <b>_blank</b>. Allowed value is <b>_self</b>(to open link in same window) or <b>_blank</b>(to open link in new window).<br />\t\t\tlinktarget is used to open any hyperlink in new window or existing window.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilemenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;mobilesubmenucssstyle&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for mobile view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><span style=\"color:black\">&lt;menucssclassname&gt;</span></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;menucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssclassname&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenucssstyle&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used for desktop/tablet view css for sub menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;submenualign&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used in for <b>COLLABORATE_CONTAINER_TYPE. </b>Default value is left. And Allowed value is left/right.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_VIEW.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetitemid&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. Is used when contenttypealias is CONTENT_SHEET_ITEMDATA.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;sheetviewmode&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. 0 (in <b>Form</b> view) or 1 (in <b>Grid</b> view) value is allowed. Otherwise default value 0 will be consider. And sheetviewmode is used for CONTENT_SHEET_ITEMDATA content type menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;disablelink&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. 0 or 1 value is allowed. Otherwise default value 0 will be consider. This will be used at the time of update only. And this value will be used for COLLABORATE_EXTERNAL_TYPE menu.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;menuitemtitle&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; height:211px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Is used to set the multilingual values for the menu or submenu. <b>English UK is mandatory. </b><br />\t\t\tCurrently following languages are allowed.</span></span></span><br />\t\t\t</p>\t\t\t<table class=\"MsoTableGrid\" style=\"border-collapse:collapse; border:none\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Language</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:1px solid black; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>Code</b></span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English UK</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_GB</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">English US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">en_US</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Netherlands</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">nl_NL</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Deutch</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">de_DE</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Spanish</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">es_ES</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:205px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">French</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t\t<td style=\"border-bottom:1px solid black; width:181px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">fr_FR</span></span></span></p>\t\t\t\t\t\t</td>\t\t\t\t\t</tr>\t\t\t\t</tbody>\t\t\t</table>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;title&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Title is used for menu label.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">&lt;tooltip&gt;</span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Optional. If tooltip is not exists and &lt;title&gt; is exists then &lt;title&gt; value will be consider as &lt;tooltip&gt; value.</span></span></span></p>\t\t\t</td>\t\t</tr>\t\t<tr>\t\t\t<td style=\"border-bottom:1px solid black; width:224px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:1px solid black\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\"><b>&lt;language&gt;</b></span></span></span></p>\t\t\t</td>\t\t\t<td style=\"border-bottom:1px solid black; width:377px; padding:0cm 7px 0cm 7px; border-top:none; border-right:1px solid black; border-left:none\" valign=\"top\">\t\t\t<p><span style=\"font-size:11pt\"><span style=\"line-height:normal\"><span style=\"font-family:Calibri,sans-serif\">Language is mandatory field in &lt;menutitle&gt;.</span></span></span></p>\t\t\t</td>\t\t</tr>\t</tbody></table>",
        "operationId": "updateNavigationMenu",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuid",
            "in": "path",
            "description": "The menu id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Menu" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Site navigation menu configurations saved successfully"
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing site navigation menu configurations"
          }
        }
      },
      "delete": {
        "tags": ["Navigation"],
        "summary": "Remove site navigation menu",
        "description": "Remove site navigation menu API",
        "operationId": "deleteSiteNavigationMenu",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuid",
            "in": "path",
            "description": "menuID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "Sitenavigation menu  deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversation messages"
          }
        }
      }
    },
    "/{version}/site/{siteid}/navigation/setting": {
      "get": {
        "tags": ["Navigation"],
        "summary": "Get site navigation settings",
        "description": "Get site navigation settings API",
        "operationId": "getSiteNavigationSettings",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The site id of site navigation",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Site navigation settings returned successfully",
            "schema": { "$ref": "#/definitions/SiteNavigationSettingsDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting site navigation menus"
          }
        }
      },
      "put": {
        "tags": ["Navigation"],
        "summary": "Update site navigation settings",
        "description": "Update site navigation settings API",
        "operationId": "updateSiteNavigationSettings",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "Id of the site for which the settings is to be update",
            "required": true,
            "type": "string"
          },
          {
            "name": "sitenavigationtype",
            "in": "query",
            "description": "1 = Automatic\r\n 2 = Custom",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Site navigation settings updated successfully."
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Invalid sitenavigation type",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/organisations/{orgid}": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Get Organisation",
        "description": "<p>Get an organisation from Collaborate.This API call is used to retrieve an organisation from the system. The organisation identifier is the organisation ID.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62788'>https://dev.highq.com/jira/browse/COL-62788</a></b></p>",
        "operationId": "getOrganisation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "orgid",
            "in": "path",
            "description": "The ID of the organisation to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/organisation" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Organisation"],
        "summary": "Update Organisation",
        "description": "<p>Update an existing organisation in Collaborate.This API call is used to update an existing organisation in the system, by replacing the organisation with the provided organisation object.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;260</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This group is associated with the site(s) listed below</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">283</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact tier is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">275</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact type ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">276</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Contact email is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">278</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The internal organisation attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">284</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">274</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation industry id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">273</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The disable edit profile attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">285</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The restrict direct login attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">286</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation strategic attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">287</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>keycontact userid attribute is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">288</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The keycontact userid attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">312</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">269</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name cannot be more than 128 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">270</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A contact name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">277</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An email address is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">278</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid contact primary email address</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">279</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A company switchboard is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">280</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The online service link is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">281</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name cannot contain the following characters: &nbsp;\\\\ &nbsp;/ : * ? \\&quot; |</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">282</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This organisation name already exists in system.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">317</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact person&#39;s email address domain is already being used by another organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">315</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The external ID entered already exists in system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">407</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62783'>https://dev.highq.com/jira/browse/COL-62783</a></b></p>",
        "operationId": "updateOrganisation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "orgid",
            "in": "path",
            "description": "The ID of the organisation to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/organisation" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Organisation"],
        "summary": "Archive Organisation",
        "description": "<p> Archive an organisation within Collaborate.This API call is used to archive an organisation within the system. The organisation identifier is the organisation ID.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p><span class=\"ckInlineContent\" id=\"wikiContentID\">The Organisation ID&nbsp;is invalid</span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62784'>https://dev.highq.com/jira/browse/COL-62784</a></b></p>",
        "operationId": "deleteOrganisation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "orgid",
            "in": "path",
            "description": "The ID of the organisation to archive",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/organisations": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Get Organisation List",
        "description": "<p>Get a list of organisations. This API call is used to retrieve a list of organisations from the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The industry is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">293</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The category is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">294</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The status is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">295</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The limit value is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">291</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The offset value is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">292</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">289</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. Please use either asc or desc</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">290</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62789'>https://dev.highq.com/jira/browse/COL-62789</a></b></p>",
        "operationId": "getOrganisations",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "searchTxt",
            "in": "query",
            "description": "Will search across all organisation fields for a matching string. This should be the same search",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Search organisation by a domain name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "query",
            "description": "The ID of the organisation industry",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "The ID of the organisation category",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status: active | archive | pending",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "Supported order types are ID,Status,Name,CreatedDate,Users",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Allow ascending and descending sorting of a single field.<br>GET /api/4/organisations?orderby=desc<br>possible fields: asc,desc",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of organisations returned. e.g.<br>GET /api/4/organisations?offset=10&limit=5Default: 100",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Allows paging of organisations. e.g.<br>GET /api/4/organisations?offset=10&limit=5<br>Default: 0",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Organisations" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Organisation"],
        "summary": "Add Organisation",
        "description": "<p>Add a new organisation to Collaborate.This API call is used to add a new organisation object to the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact tier is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">275</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact type id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">276</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Contact email is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">278</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The internal organisation attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">284</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">274</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation industry ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">273</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The disable edit profile attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">285</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The restrict direct login attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">286</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation strategic attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">287</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>keycontact userid attribute is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">288</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The keycontact userid attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">312</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">269</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name cannot be more than 128 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">270</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A contact name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">277</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An email address is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">278</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid contact primary email address</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">279</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A company switchboard is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">280</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The online service link is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">281</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation name cannot contain the following characters: &nbsp;\\\\ &nbsp;/ : * ? \\&quot; |</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">282</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This organisation name already exists in system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">317</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact person&#39;s email address domain is already being used by another organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">315</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The external ID entered already exists in system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">407</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62781'>https://dev.highq.com/jira/browse/COL-62781</a></b></p>",
        "operationId": "addOrganisation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/organisation" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK [orgid,name,link are used in response. Remaining are not in response.]",
            "schema": { "$ref": "#/definitions/organisation" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/exceptiondomains": {
      "get": {
        "tags": ["Exceptiondomains"],
        "summary": "Exception domain list",
        "description": "<p>This API call is used to get list of exception domain objects in the system.\r\n<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">289</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. Please use either ascending or descending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">290</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64103'>https://dev.highq.com/jira/browse/COL-64103</a></b></p>",
        "operationId": "getExceptionalDomainList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "search",
            "in": "query",
            "description": "search",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "ordertype",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "order by asc/desc",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Domains" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Exceptiondomains"],
        "summary": "Add exception domain",
        "description": "<p>This API call is used to add a new exception domain to an organisation object in the system.</p><br><b>Error Codes</b><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A domain name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">265</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name formatting is incorrect</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">266</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">267</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">268</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name &#39;domainname.com&#39; already exists</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">314</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64099'>https://dev.highq.com/jira/browse/COL-64099</a></b></p>",
        "operationId": "addExceptionalDomain",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/domain" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DomainDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/domains/{domainID}": {
      "get": {
        "tags": ["Domains"],
        "summary": "Get Domain",
        "description": "<p>Get a domain to an organisation within Collaborate.This API call is used to get a domain to an organisation object in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "getOrgDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The ID of the domain",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DomainDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Domains"],
        "summary": "Move Domain",
        "description": "<p>Move an existing domain from one organisation to another within Collaborate\r\nThis API call is used to move a domain to a new organisation object in the system. This in turn will move all users who have an email address associated with that domain to the new organisation.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is invalid (Target Organisation id)</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">261</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please select different organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">262</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain cannot be moved to a bidder organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">316</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An exception domain cannot be moved to any organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">323</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain already exists in the given organisation. Please select a different organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">324</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">322</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "moveOrgDomain",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The domain ID to be moved",
            "required": true,
            "type": "string"
          },
          {
            "name": "neworganisation",
            "in": "query",
            "description": "The ID of the organisation to move the domain to",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Domains"],
        "summary": "Update Domain",
        "description": "<p>Update an existing domain in an organisation within Collaborate.This API call is used to change a domain within an organisation object in the system. This in turn will update the email address of all users within that organisation who have this domain assigned to their email address.</p><br><b>Error Codes</b><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong><span style=\"color:#000000;\">Summary</span></strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong><span style=\"color:#000000;\">Ref Code (V4)</span></strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong><span style=\"color:#000000;\">Ref Code (before V4)</span></strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A domain name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">265</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name formatting is incorrect</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">266</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">267</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">268</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name &#39;domainname.com&#39; already exists</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">314</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "updateOrgDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The domain id to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/domain" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Domains"],
        "summary": "Archive domain",
        "description": "<p>This API is used to archive a domain to an organisation within CollaborateThis API call is used to archive a domain to an organisation object in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 320px;\">Summary</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 103px;\">Ref Code (V4)</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 77px;\">Ref Code (Before V4)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 320px;\">The given domain ID is invalid</td>\r\n\t\t\t<td style=\"width: 103px;\">263</td>\r\n\t\t\t<td style=\"width: 77px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "archiveOrgDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The ID of the domain to archive",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/exceptiondomains/{domainID}": {
      "get": {
        "tags": ["Exceptiondomains"],
        "summary": "Get exception domain",
        "description": "<p>This API call is used to get a exception domain object in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64101'>https://dev.highq.com/jira/browse/COL-64101</a></b></p>",
        "operationId": "getExceptionalDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The ID of the domain",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DomainDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Exceptiondomains"],
        "summary": "Update exception domain",
        "description": "<p>This API call is used to change an exception domain within an organisation object in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td><strong>Summary</strong></td>\r\n\t\t\t<td><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A domain name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">265</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name formatting is incorrect</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">266</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">268</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The domain name &#39;domainname.com&#39; already exists</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">314</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An anonymous domain cannot be updated</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">392</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64100'>https://dev.highq.com/jira/browse/COL-64100</a></b></p>",
        "operationId": "updateExceptionalDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The domain id to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/domain" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Exceptiondomains"],
        "summary": "Delete exception domain",
        "description": "<p>This API call is used to delete a domain in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An anonymous domain cannot be archived</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">393</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64102'>https://dev.highq.com/jira/browse/COL-64102</a></b></p>",
        "operationId": "archiveExceptionDomain",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The ID of the domain to archive",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/organisations/departments": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Org department list",
        "description": "<p>This API call is used to get a list of departments in an organisation object in the system.<br>Version 13 onwards, multiple organisation ids (CSV) are supported. <br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid. name and ID&nbsp;are supported ordertype</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">351</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. asc and desc are supported orderby values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">147</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>You do not have access to the given organisation ID</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">318</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65701'>https://dev.highq.com/jira/browse/COL-65701</a></b></p>",
        "operationId": "getOrgDepartmentList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "The IDs of the organisations of which the departments to be listed",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "The field on which searching will be done. Only supported field is departmentname",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "Field on which sorting will be applied. It has to be ID or the name of the department.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "The sorting order, either asc or desc.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/departments" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Organisation"],
        "summary": "Add org department",
        "description": "<p>This API call is used to add a new department to an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n <tr>\r\n <td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>The Organisation ID&nbsp;is invalid</p>\r\n </td>\r\n <td style=\"width: 178px;\">260</td>\r\n <td style=\"width: 178px;\">&nbsp;</td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>This department name already exists</p>\r\n </td>\r\n <td style=\"width: 178px;\">370</td>\r\n <td style=\"width: 178px;\">&nbsp;</td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>You do not have the permissions to create a department within this organisation</p>\r\n </td>\r\n <td style=\"width: 178px;\">318</td>\r\n <td style=\"width: 178px;\">&nbsp;</td>\r\n </tr>\r\n </tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65697'>https://dev.highq.com/jira/browse/COL-65697</a></b></p>",
        "operationId": "addOrgDepartment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "The ID of the organisation to add the new department to.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/department" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/department" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/organisations/departments/{deptid}": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Get org department",
        "description": "<p>This API call is used to get a department from an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Department ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">349</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>You do not have permissions to view this Department ID</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">350</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65700'>https://dev.highq.com/jira/browse/COL-65700</a></b></p>",
        "operationId": "getOrgDepartment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "deptid",
            "in": "path",
            "description": "The ID of the department",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/department" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Organisation"],
        "summary": "Update org department",
        "description": "<p>This API call is used to change a department within an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This department name already exists</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">370</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Department ID is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">349</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The department status is invalid. Please use the active status.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">344</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65698'>https://dev.highq.com/jira/browse/COL-65698</a></b></p>",
        "operationId": "updateOrgDepartment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "deptid",
            "in": "path",
            "description": "The department ID to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/department" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Organisation"],
        "summary": "Delete org department",
        "description": "<p>This API call is used to delete a department to an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Department ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">349</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65699'>https://dev.highq.com/jira/browse/COL-65699</a></b></p>",
        "operationId": "deleteOrgDepartment",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "deptid",
            "in": "path",
            "description": "The ID of the department to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/configuration/messaginglinks": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Messaging link list",
        "description": "<p> Get a messaging link list in Collaborate.</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-72704'>https://dev.highq.com/jira/browse/COL-72704</a></b></p>",
        "operationId": "getMessageLinksList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "5"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/messaginglink" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/configuration/sociallinks": {
      "get": {
        "tags": ["Configuration"],
        "summary": "User - Social - List",
        "description": "<p>Get a social link list in Collaborate.</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-72703'>https://dev.highq.com/jira/browse/COL-72703</a></b></p>",
        "operationId": "getSocialsLinksList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "5"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sociallinks" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/orgaddresses": {
      "get": {
        "tags": ["Orgaddress"],
        "summary": "Org address list",
        "description": "<p>This API call is used to get list of a addresses in an organisation object in the system.<br>Version 13 onwards, multiple organisation ids (CSV) are supported.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n <tr>\r\n <td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>The Organisation ID&nbsp;is invalid</p>\r\n </td>\r\n <td style=\"width: 178px;\">260</td>\r\n <td style=\"width: 178px;\">&nbsp;</td>\r\n </tr>\r\n </tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-64267'>https://dev.highq.com/jira/browse/COL-64267</a></b></p>",
        "operationId": "getOrgAddressList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "The ID(s) of the organisation",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/address" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Orgaddress"],
        "summary": "Add org address",
        "description": "<p>This API call is used to add a new address to an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n <tr>\r\n <td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>The entered address&#39; external ID already exists in the system</p>\r\n </td>\r\n <td style=\"width: 178px;\">413</td>\r\n <td style=\"width: 178px;\">N/A</td>\r\n </tr>\r\n </tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-63737'>https://dev.highq.com/jira/browse/COL-63737</a></b></p>",
        "operationId": "addOrgAddress",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "The ID of the organisation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/address" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/address" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/orgaddresses/{addressid}": {
      "get": {
        "tags": ["Orgaddress"],
        "summary": "Get org address",
        "description": "<p>This API call is used to get an address to an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given address ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">308</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-63740'>https://dev.highq.com/jira/browse/COL-63740</a></b></p>",
        "operationId": "getOrgAddress",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "addressid",
            "in": "path",
            "description": "The ID of the address",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/address" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["Orgaddress"],
        "summary": "Update org address",
        "description": "<p>This API call is used to change an address within an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 691px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">Summary</td>\r\n\t\t\t<td style=\"width: 114px;\">Ref Code (V4)</td>\r\n\t\t\t<td style=\"width: 157px;\">Ref code (before V4)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>The given address ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">308</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>You do not have access to the given organisation ID</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">318</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>The address countryname is required.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">319</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>The address countryname is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">309</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>The defaultaddress attribute is invalid. It must be 1 or 0</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">313</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>A city name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">301</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>A city name can have a maximum of 50 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">302</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>A postal code can have a maximum of 50 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">303</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 411px;\">\r\n\t\t\t<p>The entered address&#39; external ID already exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 114px;\">413</td>\r\n\t\t\t<td style=\"width: 157px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-63738'>https://dev.highq.com/jira/browse/COL-63738</a></b></p>",
        "operationId": "updateOrgAddress",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "addressid",
            "in": "path",
            "description": "The address ID to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/address" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["Orgaddress"],
        "summary": "Delete org address",
        "description": "<p>This API call is used to delete an address to an organisation object in the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n <tbody>\r\n <tr>\r\n <td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n <td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n </tr>\r\n <tr>\r\n <td style=\"width: 675px;\">\r\n <p>The given address ID&nbsp;is invalid</p>\r\n </td>\r\n <td style=\"width: 178px;\">308</td>\r\n <td style=\"width: 178px;\">&nbsp;</td>\r\n </tr>\r\n </tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-63739'>https://dev.highq.com/jira/browse/COL-63739</a></b></p>",
        "operationId": "deleteAddress",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "addressid",
            "in": "path",
            "description": "The ID of the address to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/domains": {
      "get": {
        "tags": ["Domains"],
        "summary": "Domain list",
        "description": "<p>Get a domain list in an organisation within Collaborate\r\nThis API call is used to get list of domains in an organisation object in the system.<br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation id does not match with the domain id</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">264</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">289</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. Please use either asc or desc</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">290</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>You donot have access to the given organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">396</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "getOrgDomainList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "The ID of the organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "ordertype",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "orderby asc/desc",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Domains" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["Domains"],
        "summary": "add domain",
        "description": "<p>This method is used to add a new domain to an organisation within Collaborate. This API call is used to add a new domain to an organisation object in the system.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A domain name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">265</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name formatting is incorrect</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">266</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">267</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain status is invalid. It must either be active or pending</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">268</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The domain name &#39;domainname.com&#39; already exists</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">314</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>N/A</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The contact person&#39;s email address domain is already being used by another organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">315</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "addOrgDomain",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "\tThe ID of the organisation to add the new domain to ",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/domain" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DomainDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/configuration/managetools": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Manage tools",
        "description": "<p>Get manage tool status in Collaborate</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-73530'>https://dev.highq.com/jira/browse/COL-73530</a></b></p>",
        "operationId": "getManageToolList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "5"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/managetools" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/countries": {
      "get": {
        "tags": ["Countries"],
        "summary": "Get Country List",
        "description": "<p>Get a list of countries.This API call is used to retrieve a list of countries from the system.</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-69562'>https://dev.highq.com/jira/browse/COL-69562</a></b></p>",
        "operationId": "getCountryList",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "5"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/countries" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/conversations/users": {
      "get": {
        "tags": ["Private Message"],
        "summary": "Get message recipients",
        "description": "Method to obtain message recipients<br>This method is supported in version 8 of the API and above",
        "operationId": "getUsers",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "q",
            "in": "query",
            "description": "search input",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversationusers returned successfully",
            "schema": { "$ref": "#/definitions/users" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversation messages"
          }
        }
      }
    },
    "/{version}/conversations/{conversationid}/messages": {
      "get": {
        "tags": ["Private Message"],
        "summary": "Get Conversation Messages",
        "description": "Method to obtain message conversation<br>This method is supported in version 4 of the API and above",
        "operationId": "getConversationMessages",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "lastContentId",
            "in": "query",
            "description": "The integer value of the last message fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of messages to return in one request. Default is 20  and the maximum value is 100\r\nIf a value of 0 or less is provided in the request then 20 message will be returned.\r\nIf a value of more than 100 is provided then 100 messages are returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "conversationid",
            "in": "path",
            "description": "Conversation ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversation messages returned successfully",
            "schema": { "$ref": "#/definitions/ConversationsDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversation messages"
          }
        }
      },
      "post": {
        "tags": ["Private Message"],
        "summary": "Reply on Message Conversation",
        "description": "Reply on message conversation API",
        "operationId": "replyConversation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MessageDBO" }
          },
          {
            "name": "conversationid",
            "in": "path",
            "description": "Conversation ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversation replied successfully",
            "schema": { "$ref": "#/definitions/ConversationDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while replying conversation"
          }
        }
      }
    },
    "/{version}/conversations/{conversationid}/messages/{messageid}": {
      "get": {
        "tags": ["Private Message"],
        "summary": "Get Conversation Messages",
        "description": "Method to obtain message conversation<br>This method is supported in version 8 of the API and above",
        "operationId": "getConversationMessage",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "conversationid",
            "in": "path",
            "description": "Conversation ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "messageid",
            "in": "path",
            "description": "Message ID",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversation messages returned successfully",
            "schema": { "$ref": "#/definitions/ConversationsDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversation messages"
          }
        }
      }
    },
    "/{version}/conversations": {
      "get": {
        "tags": ["Private Message"],
        "summary": "Get Conversations",
        "description": "Method to obtain messages<br>This method is supported in version 4 of the API and above",
        "operationId": "getConversations",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "search input",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "ACTIVE (default)\n UNREAD\n ARCHIVED",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The integer value of the last message conversation fetched",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "No of message conversations to return in one request. Default is 6 and the maximum value is 25<br>If a value of 0 or less is provided in the request then 6 message conversations will be returned.<br>If a value of more than 25 is provided then 25 message conversations are returned. ",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversations returned successfully",
            "schema": { "$ref": "#/definitions/ConversationsDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting conversations"
          }
        }
      },
      "post": {
        "tags": ["Private Message"],
        "summary": "New conversation",
        "description": "Add new message API",
        "operationId": "newConversation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ConversationDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Conversation created successfully",
            "schema": { "$ref": "#/definitions/ConversationDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while creating new conversation"
          }
        }
      }
    },
    "/{version}/conversations/{conversationid}": {
      "put": {
        "tags": ["Private Message"],
        "summary": "Update Message Conversation",
        "description": "Update message conversation API",
        "operationId": "updateConversation",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "conversationid",
            "in": "path",
            "description": "Conversation ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "Actions\n        MARK_AS_READ\n        MARK_AS_UNREAD\n        MARK_AS_ARCHIVE\n        DELETE",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Conversation updated successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while updating conversation"
          }
        }
      }
    },
    "/{version}/sites/{siteid}/folders": {
      "get": {
        "tags": ["Site Resource APIs"],
        "operationId": "getFolders",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id of the site",
            "required": true,
            "type": "string"
          },
          {
            "name": "folderid",
            "in": "query",
            "description": "folderid of the folder",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/sites/templates/content": {
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Import template",
        "description": "<p>API to import template from .hqa file.<br><br>This is a Long polling API( Multi step API). Below are the steps explaning how to consume this API.<br></p><br><b>Step 1: Start the Import template process</b><br><br><b>Request URI:</b><br><br>POST /api/8/sites/templates/content<br><br><b>Request body (as a form-data):</b><br><br>.hqa file as FIle (multipart input)<br>templatename as Text(String)<br><br><b>Response:</b><br><br>Status code: 202 Accepted<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Step 2: Check the progress of Import template process</b><br><br><b>Request URI:</b><br><br>GET /api/8/progress/{progress_key}<br><br><b>Response:</b><br><br>In case Import template process is still running.<br><br>Status code: 200 OK<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br>When Import template process has been completed.<br><br>Status code: 303 See Other<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;DONE&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/sites/templates/{template_id}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><p>API version 10 on ward, multiple matter number is supported in import template</p>",
        "operationId": "importTemplate",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Choose file",
            "required": true,
            "type": "file"
          },
          {
            "name": "templatename",
            "in": "formData",
            "description": "Template name",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "156": { "description": "Site name already exists in the system" },
          "200": { "description": "OK" },
          "202": { "description": "Import template is in progress." },
          "303": { "description": "Import template completed." },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "436": { "description": "Invalid hqa file" },
          "437": { "description": "Backward compability is not supported" },
          "438": {
            "description": "Cannot create site because the instance licence limits have been reached. Please contact the System Administrator"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/sites/{siteid}/groups/{groupid}": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get site group",
        "description": "<p> Get details of individual site group.<br>From API version 12 onwards, a new attribute \"basicusergroup\" will be added in the response to identify a basic user group.</p>",
        "operationId": "getSiteGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "site group id to retrive",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add existing group to site",
        "description": "<p>This API method adds an existing system group to the site.<br>This API has been extended to add existing system basic user groups (of system / org type) in the site. </p>",
        "operationId": "addExistingGroupToSite",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the system group to be added to the site. ",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Update site group",
        "description": "<p>This API method updates the name of an existing group in a site.<br>This API has been extended to update the name of an existing basic user group in a site. </p>",
        "operationId": "updateSiteGroup",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "\tThe ID of the site group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/activate": {
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Activate users",
        "description": "<p>Use this method to activate user(s) in a site </p><p><b>Note:</b><br>\r\n<br>User Id must be integer. If it's not, it will display the following message \"User ID provided is Invalid.\"\r\n<br>If a user id is listed multiple times in the transaction id's list it will initially activate the user and the next time it will display the following message \"The selected user is already activated\". \r\n<br>The user must be a participant of the given site. If the user is not, it will display the following message \"User with the specified User ID does not exist in the site\" </p>",
        "operationId": "activateSiteParticipants",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TransactionIds" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/groups/{groupid}/modulepermissions": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get group module permission",
        "description": "<p>Method to get module permissions for a group  </p>",
        "operationId": "getModulePermissions",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the site group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/modulepermissions" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add / edit group module permission",
        "description": "<p>Method to allocate module permissions to a group.<br>From API version 12 onwards, permissions of a basic user group can be added / updated with respect to system level basic user permissions.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 727px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Summary</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Ref code (v12)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Basic user groups do not have this permission</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>477</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>",
        "operationId": "addGroupModulePermission",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the site group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/modulepermissions" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/activity": {
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Register site login activity",
        "description": "This API is used to add site login activity when user visits any site from HighQ Drive so that site will appear in recently accessed sites list.",
        "operationId": "addSiteLoginActivity",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site in which site login activity to be added",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Validation failed/ Forbidden" }
        }
      }
    },
    "/{version}/sites/templates/{templateid}/content": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Export template",
        "description": "<p>API to Export template as a .hqa file.<br><br>This is a Long polling API( Multi step API). Below are the steps explaning how to consume this API.<br></p><br><b>Step 1: Start the Export template process</b><br><br><b>Request URI:</b><br><br>GET /api/8/sites/templates/{template_id}/content<br><br><b>Response:</b><br><br>Status code: 202 Accepted<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Step 2: Check the progress of Export template process</b><br><br><b>Request URI:</b><br><br>GET /api/8/progress/{progress_key}<br><br><b>Response:</b><br><br>In case Export template process is still running.<br><br>Status code: 200 OK<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br>When Export template process has been completed.<br><br>Status code: 303 See Other<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;DONE&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/sites/templates/{template_id}/content/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Step 3: Export/Download template </b><br><br><b>Request URI:</b><br><br>GET /api/8/sites/templates/{template_id}/content/{progress_key}<br><br><b>Response:</b><br><br>Status code: 200 OK<br><br>hqa file will be in response.<br><br><p>API version 10 on ward, multiple matter number is supported in export template</p>",
        "operationId": "exportSiteTemplateFirstStep",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "202": {
            "description": "Export site from template process is in progress"
          },
          "303": {
            "description": "Export site from template process completed"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/sites/{siteid}/templates": {
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Create template from site",
        "description": "<p>API to Create template from site.<br><br>\"templatename\" tag and \"templatedescription\" tag is required to create template from site. <br>\"module\"and \"landingpage\" tag will not be respected as it will take this both configuration from site. <br>This is a Long polling API( Multi step API). Below are the steps explaning how to consume this API.<br></p><br><b>Step 1: Start the Create template from site process</b><br><br><b>Request URI:</b><br><br>POST api/8/sites/{site_id}/templates<br><br><b>Request body:</b><br><br><pre>&lt;template&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;templatename&gt;&lt;/templatename&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;templatedescription&gt;&lt;/templatedescription&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;adminnote&gt;&lt;/adminnote&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;clientno&gt;&lt;/clientno&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;matterno&gt;&lt;/matterno&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;categories&gt;&lt;/categories&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;includeUsers&gt;&lt;/includeUsers&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;includeSiteLogo&gt;&lt;/includeSiteLogo\t&gt;<br>&lt;/template&gt;</pre><br><br>Note : API version 10 on wards, multiple matter numbers are supported.<br><pre>\r\n&nbsp;&nbsp;&lt;matternos&gt;\r\n\t\t&lt;matterno&gt;\r\n\t\t\t&lt;value&gt;string&lt;/value&gt;\r\n\t\t\t&lt;readonly&gt;true&lt;/readonly&gt;\r\n\t\t&lt;/matterno&gt;\r\n\t&lt;/matternos&gt;</pre><br>Note : API version 12 onwards, templateType and templateLicenceType parameters in the request body are supported.<br><pre>\r\n\t&lt;templateType&gt;&lt;/templateType&gt;\r\n\t&lt;templateLicenceType&gt;&lt;/templateLicenceType&gt;\r\n<br><br><b>Template type values:</b><br><br>0 - Allows derivatives<br>1 - No derivatives<br><br><b>Template licence type values:</b><br><br>0 - Free / No licence needed<br>1 - Licence needed<br><br><b>Response:</b><br><br>Status code: 202 Accepted<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Step 2: Check the progress of Create template from site process</b><br><br><b>Request URI:</b><br><br>GET /api/8/progress/{progress_key}<br><br><b>Response:</b><br><br>In case Create template from site process is still running.<br><br>Status code: 200 OK<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br>When Create template from site has been completed.<br><br>Status code: 303 See Other<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;DONE&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/sites/templates/{template_id}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><br><b>Matter number related validation messages</b> <br><table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" >\r\n            <p>You cannot have duplicate matter numbers</p>\r\n            </td>\r\n            <td align=\"left\" ><p>451</p></td>\r\n            <td align=\"left\" ><p>10</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>",
        "operationId": "createTemplateFromSite",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SiteTemplate" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "156": {
            "description": "Template name already exists in the system"
          },
          "200": { "description": "OK" },
          "202": {
            "description": "Create template from site process is in progress"
          },
          "303": {
            "description": "Create template from site process completed"
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/sites/{siteid}/collobfolders": {
      "get": {
        "tags": ["Site Resource APIs"],
        "operationId": "getCollobFoldersDetails",
        "produces": ["application/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "siteid of the site",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "parentfolderid of the folder",
            "required": false,
            "type": "string"
          },
          {
            "name": "dmsdatabasename",
            "in": "query",
            "description": "dms database name",
            "required": false,
            "type": "string"
          },
          {
            "name": "childonly",
            "in": "query",
            "description": "child only ",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/sites/templates/{templateid}/site": {
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Create site from template",
        "description": "<p>API to Create site from template.<br><br>This API requires site name (and mandatory fields configured at ASP level if any) in the request to create a new site from template. <br><br>\"landingpage\" has default value as configured in the selected template. <br>\"landingpage\" expect three different wordings or identifications for File module. Possible values are: <br>- files (root folder)<br>- files (recent activity)<br>- files (advanced search)<br><br>This is a Long polling API( Multi step API). Below are the steps explaning how to consume this API.<br></p><br><b>Step 1: Start the Create site from template process</b><br><br><b>Request URI:</b><br><br>POST api/8/sites/templates/{template_id}/site<br><br><b>Request body:</b><br><br><pre>&lt;site&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;sitename&gt;&lt;/sitename&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;sitedescription&gt;&lt;/sitedescription&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;module&gt;&lt;/module&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;landingpage&gt;&lt;/landingpage&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;startdate&gt;&lt;/startdate&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;endDate&gt;&lt;/endDate&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;clientno&gt;&lt;/clientno&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;matterno&gt;&lt;/matterno&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;categories&gt;&lt;/categories&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;adminnote&gt;&lt;/adminnote&gt;<br>&lt;/site&gt;</pre><br><br>Note : API version 10 on wards, multiple matter numbers are supported.<br><pre>\r\n&nbsp;&nbsp;&lt;matternos&gt;\r\n\t\t&lt;matterno&gt;\r\n\t\t\t&lt;value&gt;string&lt;/value&gt;\r\n\t\t\t&lt;readonly&gt;true&lt;/readonly&gt;\r\n\t\t&lt;/matterno&gt;\r\n\t&lt;/matternos&gt;</pre><br><b>Response:</b><br><br>Status code: 202 Accepted<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Step 2: Check the progress of Create site from template process</b><br><br><b>Request URI:</b><br><br>GET /api/8/progress/{progress_key}<br><br><b>Response:</b><br><br>In case Create site from template process is still running.<br><br>Status code: 200 OK<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;INPROGRESS&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/progress/{progress_key}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br>When Create site from template process has been completed.<br><br>Status code: 303 See Other<br><br>Response body:<br><br>&lt;progressresponse&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;progresskeystatus&gt;DONE&lt;/progresskeystatus&gt;<br>    &nbsp;&nbsp;&nbsp;&nbsp;&lt;link&gt;https://host.com/context/api/8/sites/{site_id}&lt;/link&gt;<br>&lt;/progressresponse&gt;<br><br><b>Matter number related validation messages</b> <br><table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" ><p>Matter number(s) is (are) required</p></td>\r\n            <td align=\"left\" ><p>151</p></td>\r\n            <td align=\"left\" ><p>1</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" >\r\n            <p>You cannot have duplicate matter numbers</p>\r\n            </td>\r\n            <td align=\"left\" ><p>451</p></td>\r\n            <td align=\"left\" ><p>10</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>",
        "operationId": "createSiteFromTemplate",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/site" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "156": { "description": "Site name already exists in the system" },
          "200": { "description": "OK" },
          "202": {
            "description": "Create site from template process is in progress"
          },
          "303": {
            "description": "Create site from template process completed"
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/sites/{siteid}/documentstatus/{documentkey}": {
      "post": {
        "tags": ["Site Resource APIs"],
        "operationId": "checkDocumentCopyStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "siteid of the site",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentkey",
            "in": "path",
            "description": "documentkey of document",
            "required": true,
            "type": "string"
          },
          {
            "name": "rootfolderid",
            "in": "query",
            "description": "root folderid of the document",
            "required": false,
            "type": "string"
          },
          {
            "name": "isbatchprocess",
            "in": "query",
            "description": "value of isbatchprocess",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/progress/{progresskey}": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Check progress status",
        "description": "API to check status of a running progress by progress key.",
        "operationId": "checkProgressKeyStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "progresskey",
            "in": "path",
            "description": "A progress key",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Process is in progress" },
          "303": { "description": "Process is completed" },
          "401": { "description": "Unauthorized" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/{userid}/emailalerts": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get email alert settings",
        "description": "<p>This method allows you to get the email alert setting for a user</p>",
        "operationId": "getEmailAlertsForSiteUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user. ",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/emailalerts" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Set email alert settings",
        "description": "<p> This method allows you to set or update the email alert setting for a user</p>",
        "operationId": "setEmailAlertsForSiteUser",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/emailalerts" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get all site users",
        "description": "<p>Method to obtain a list of site users</p><p><b>Notes</b><br>1.The value of limit parameter behaves as follows:<br> limit =100 is the default value<br>if limit>0 then (number of items returned is equal to limit)<br>if limit=-1 then return all records<br>if limit <-1 then the system returns the default no of items i.e 100<br>2.The value of the offset parameter behaves as below<br>(Default) offset =0 <br>if the offset is higher than 0 then the records are returned from the offset value<br>if offset is lower than 0 then an offset value of 0 is set<br>3.Default value for orderby parameter is asc (ascending)<br>4.Default value for ordertype parameter is organisation (organisation name)<br>5.In limit parameter if the limit is 0, it will display a validation message stating that the \"limit provided is invalid\"<br>6.In groupid parameter if the group is invalid, it will display a validation message stating that the \"groupid provided is Invalid\"</p>",
        "operationId": "getAllSiteUsers",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organisationid",
            "in": "query",
            "description": "A integer value representing an organisation in the Collaborate instance, the ID can be obtained by calling the Get Organisations API.",
            "required": false,
            "type": "string"
          },
          {
            "name": "invitationnotsent",
            "in": "query",
            "description": "A list of all users to whom an invitation is not sent.",
            "required": false,
            "type": "string"
          },
          {
            "name": "notloggedin",
            "in": "query",
            "description": "A list of users who have never logged in to the site.",
            "required": false,
            "type": "string"
          },
          {
            "name": "suspendedusers",
            "in": "query",
            "description": "A list of suspended users of the site.",
            "required": false,
            "type": "string"
          },
          {
            "name": "unallocatedusers",
            "in": "query",
            "description": "A list of users who are not a member of any groups in the site.",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "A integer value representing a group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting position of the user list from when the user list  should be returned. This is to allow pagination.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to return in an individual get call.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Can be ordered asc (ascending) or desc (descending). The default is ascending.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "The order type is fullname, organisation, invited, lastlogin. The default is organisation",
            "required": false,
            "type": "string"
          },
          {
            "name": "activeusers",
            "in": "query",
            "description": "A list of active users of the site",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Text that will be searched against first name, last name, email and organisation to filter out users. Available from collaborate version 5.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add user to site",
        "description": "<p>This method explains how to add a number of new users to the site.<br>When adding a single user to a site follow the first step below. When adding more than one user to a site the below two steps should be followed.<br>Note: The getProgressiveKey call is covered in step 1 and is used further in the process.Step 1:<br>Request URI<br>POST  /api/3/sites/{siteid}/users</p><b>Response</b><br>The API returns a 200 OK http response if successful, otherwise an error object and error code is returned.<br> If a single user has been added successfully then the response will be as per below:<br>&lt;users&gt;<br>    &lt;user&gt;<br>        &lt;index&gt;1&lt;/index&gt;<br>        &lt;userid&gt;1805&lt;/userid&gt;<br>        &lt;email&gt;testemail@highq.com&lt;/email&gt;<br>        &lt;status&gt;Success&lt;/status&gt;<br>        &lt;statuscode&gt;201&lt;/statuscode&gt;<br>        &lt;message&gt;User added successfully&lt;/message&gt;<br>    &lt;/user&gt;<br>&lt;/users&gt;<br>If more than one user has been added successfully then response will be as per below:<br>&lt;progressivekeyresponse&gt;<br>    &lt;progressivekey&gt;zJ5IlSYyhJ_1500443110814&lt;/progressivekey&gt;<br>    &lt;progressivekeystatus&gt;INPROGRESS&lt;/progressivekeystatus&gt;<br>&lt;/progressivekeyresponse&gt;<br>Step 2:<br>Purpose<br>Once step 1 has been called, the user progress status needs to be checked. This is done by using this API end point call.<br>&lt;progressivekeyresponse&gt;<br>    &lt;progressivekey&gt;zJ5IlSYyhJ_1500443110814&lt;/progressivekey&gt;<br>    &lt;progressivekeystatus&gt;INPROGRESS&lt;/progressivekeystatus&gt;<br>&lt;/progressivekeyresponse&gt;<br>When a user has been added successfully the response will be as per below:<br> &lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&lt;users&gt;<br>    &lt;user&gt;<br>        &lt;index&gt;1&lt;/index&gt;<br>        &lt;userid&gt;1805&lt;/userid&gt;<br>        &lt;email&gt;testemail@highq.com&lt;/email&gt;<br>        &lt;status&gt;Success&lt;/status&gt;<br>        &lt;statuscode&gt;201&lt;/statuscode&gt;<br>        &lt;message&gt;User added successfully&lt;/message&gt;<br>    &lt;/user&gt;<br>    &lt;user&gt;<br>        &lt;index&gt;2&lt;/index&gt;<br>        &lt;status&gt;Failure&lt;/status&gt;<br>        &lt;statuscode&gt;403&lt;/statuscode&gt;<br>        &lt;message&gt;Invalid Email address&lt;/message&gt;<br>    &lt;/user&gt;<br>&lt;/users&gt;<br>Assumption<br>- User will be added in site with the existing organisation only.<br>- If a user with the same email already exists in the site, a validation message will be displayed.<br>- Please note that if an existing system user is added to a site, then the request xml information such as firstname, lastname and orgid will not be updated. Only the system user will be added to site.<br>- If user associated with external organization then it will not add in internal site, a validation message will be displayed.(From 5.1 onwards).<br><br><b>BasicUser related validation messages</b> <br><table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"left\" ><span style=\"color:#000000;\"><strong><p>Status code</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" ><p>You can not mark this user as basic user as it is existed in system</p></td>\r\n            <td align=\"left\" ><p>473</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" >\r\n            <p>You can not mark this user as basic user as it is external user</p>\r\n            </td>\r\n            <td align=\"left\" ><p>472</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" ><p>You can not mark this user as normal user as it is already a basic user</p></td>\r\n            <td align=\"left\" ><p>474</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"left\" ><p>Invalid value of isbasicuser. Valid value is 0 or 1</p></td>\r\n            <td align=\"left\" ><p>475</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>",
        "operationId": "addUserToSite",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "Site IDs",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/IntegrationResponseUsersObject" }
          },
          {
            "name": "sendinvitation",
            "in": "query",
            "description": "If set to true, the newly added user will be sent an invitation",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Add existing user to site",
        "description": "<p>This is the method to add a user to the site. This method expects that the user already exists in the system and the API user is aware of the userid of the user.<br>Note: The site should already exist in the system.</p>",
        "operationId": "insertExistingUserToSite",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site to which the user is to be added.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "\tThe ID of the user who is to be added to the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sendinvitation",
            "in": "query",
            "description": "True or false option. (This is set to true by default)<br>If you do not want the notification sent to the user when a users are added to the site, the parameter should be set to false. ",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "delete": {
        "tags": ["Site Resource APIs"],
        "summary": "Remove users from a site",
        "description": "<p> This method can be used to remove user(s) from a site.</p>",
        "operationId": "removeUserFromSite",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TransactionIds" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/{userids}": {
      "delete": {
        "tags": ["Site Resource APIs"],
        "summary": "Remove users from a site",
        "description": "<p> This method can be used to remove user(s) which given in userCSV from a site.</p>",
        "operationId": "removeUsersFromSite",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID for the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userids",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/progressivekeystatus/{progressivekey}": {
      "post": {
        "tags": ["Site Resource APIs"],
        "operationId": "checkProgressiveKeyStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "type": "string"
          },
          {
            "name": "progressivekey",
            "in": "path",
            "description": "value of progressivekey",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/sites/{siteid}/users/resetpassword": {
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Send reset password email to users",
        "description": "<p> Use this method to send a reset password email to user(s)</p><p><b>Notes : </b><br>1) In the case of success, it will display the message \"Successfully sent the reset password email\"<br> 2) When a user id is not correct, it will display the message \"User Id provided is invalid\"<br>3) When a given user id is not a site participant, it will display the message \"User with the specified user ID does not exist in the site\"<br>4) When a user id has already requested a password reset email and then requests it again it will display the message \"User with this User ID has already been sent a reset password email\"<br>5) When a user id is not in the system or a user is not active, it will display a message \"User with this user ID does not exist in system or the user is not active\"<br>6) When the site is archived or a user does not have access to the site, it will display the message \"Site is archived or user does not have access to the site \"<br>7)  In any other case of exception, it will display the message \"Internal server error\"</p>",
        "operationId": "memberManagerResetPassword",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TransactionIds" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/invitation": {
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Send invitation email to users",
        "description": "<p> Use this method to send an invitation email to user(s)</p><p><b>Notes : </b><br><br>1) User id must be integer. If it's not, it will display the message \"User ID provided is Invalid.\"<br>2) If a user id is displayed in the transaction id's list multiple times, an invitation will be sent to the user and then a message will display the second time stating \"This user was already sent an invitation.\"<br>3) User must be a participant of a given site. If they are not it will display the message \"User with the specified User ID does not exist in the site.\"<br>4) Admin users can send invitations to users who were added by him. Other users will see the message \"You do not have rights to send an invitation email to the specified user.\"<br>5) If the site is in preparation mode at the time the invitation is send to site admin only and it was send by site admin or system admin.<br>6) If the site is in archive mode at that time an invitation is sent, the response will be \"Access denied\".<br>7) If the site is in read only mode at that time an invitation is sent, only system admin have rights to send an invitation to site participants.<br>8) In the request body, a user must add an e-mail message in the CDATA tag if they have special characters in e-mail message tag. See the request body below<br> &lt;invitations&gt;<br>      &lt;messagebody&gt;<br>        &lt;![CDATA[E-Mail message.]]&gt;<br>    &lt;/messagebody&gt;<br>     &lt;transactionids&gt;<br>        &lt;transactionid&gt;102&lt;/transactionid&gt;<br>        &lt;transactionid&gt;126&lt;/transactionid&gt;<br>        &lt;transactionid&gt;128&lt;/transactionid&gt;<br>        &lt;transactionid&gt;129&lt;/transactionid&gt;<br>     &lt;/transactionids&gt;<br> &lt;/invitations&gt;<br>9) If user status is suspended, inactive or archived at the time an invitation is sent, the email will not be sent to the specific user and this message will display \"User with this User ID does not exist in system or User is not active.\"",
        "operationId": "sendInvitationToSiteParticipant",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "siteid of the site",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Invitation" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/{userid}/groups": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get the list of groups in which the userID is a member",
        "description": "<p>Method returns the list of groups in which the given user is a member.<br>From API version 12 onwards, a new attribute \"basicusergroup\" is added to the response to identify, if the group is a basic user group or not.</p>",
        "operationId": "getAllSiteGroupsUsers",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "14"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/usergroups" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while gettting list of groups"
          }
        }
      }
    },
    "/{version}/sites/{siteid}/users/{userid}/modulepermissions": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get user module permission",
        "description": "<p>Use this method to get module permissions for a user </p>",
        "operationId": "getModulePermissionForUser",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the site user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/modulepermissions" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add / edit user module permission",
        "description": "<p>Method to allocate module permissions to a user.<br>From API version 12 onwards, permissions of a basic user can be added / updated with respect to system level basic user permissions.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 727px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Summary</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Ref code (v12)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Basic users do not have this permission</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>478</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>",
        "operationId": "addModulePermissionForUser",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user. ",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/modulepermissions" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/getPermittedSitesForUser": {
      "get": {
        "tags": ["Site Resource APIs"],
        "operationId": "getPermittedSitesForUser",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "userEmailID",
            "in": "query",
            "description": "emailid of user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceMetaInfoRequired",
            "in": "query",
            "description": " if metainfo of instance is required ",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startPosition",
            "in": "query",
            "description": "start position ",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Total number of values to be returned.",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "12"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/sites/{siteid}/groups/{groupid}/users": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get users of a site group",
        "description": "<p>This API method returns the users of a site group </p>",
        "operationId": "getSiteGroupParticipants",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the site group.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Add user to a group",
        "description": "<p>From version 12 onwards, this API method associates a basic user to a basic user group and non basic users to non basic user group.</p>\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><p>Basic user(s) can not be added to a site group.</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>464</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>3</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>Other than basic user(s) can not be added to a basic user group.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>465</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>3</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
        "operationId": "addUserToGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site. ",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the site group. ",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "The ID of the user to be added to the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "delete": {
        "tags": ["Site Resource APIs"],
        "summary": "Delete user from a group",
        "description": "<p>This API method removes a user from a group </p>",
        "operationId": "deleteUserFromGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the site group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "The ID of the user to be removed from the group. ",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/{siteid}/users/suspended": {
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Suspend users",
        "description": "<p>Use this method to suspend user(s) in a site  </p><p><br><b>Notes :</b><br>1) In case of success, it will display the following message \"User suspended successfully.\"<br>2) When the user id is not correct, it will display the following message \"User Id provided is Invalid\"<br>3) When a given user id is not a site participant, it will display the following message \"User with the specified User ID does not exist in the site\"<br>4) When a user id is already suspended from the site, it will display the following message \"The selected user is already suspended\"<br>5) When a user id is not in system or the user is not active, it will display the following message \"User with this User ID does not exist in system or User is not active\"<br>6) When a given user id is a system administrator or has created the given site it will display the following message \"The selected user is either a System Administrator or is the creator of this site and cannot be suspended. \"<br>7) In any other exception, it will display the following message \"Internal server error\" </p>",
        "operationId": "suspendSiteParticipants",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TransactionIds" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sitetemplates": {
      "get": {
        "tags": ["Sitetemplates"],
        "summary": "Get site templates",
        "description": "<p>API method to obtain site templates<br>API version 10 onwards, multiple matter numbers are supported. \"matternos\" tag indicates the multiple matter number in this API response.</p>",
        "operationId": "getSiteTemplates",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "Possible values are {recent|favourite|category|all} Default for this field is 'recent'<br>By default any filter will send back the first 20 sites if pagination is false ",
            "required": false,
            "type": "string",
            "enum": ["recent", "favourite", "category", "all"]
          },
          {
            "name": "returncount",
            "in": "query",
            "description": "The no of site templates returned. Default is 20. This option does not apply if filterBy property is set to all",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryid",
            "in": "query",
            "description": "This parameter is used to get the site template list based on the site category ID, please provide site template categoryid in addition to setting the filterby property to category. <br>example = /api/1/sitetemplates?filterby=category&categoryid=1<br>Version 13 onwards category id csv is supported. example = /api/13/sites?filterby=category&categoryid=1,2,3",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "This parameter is used to search site template by name. The site template is included in the search result if the string appears  in the title of the site (The results are returned in ascending order)<br>example: Retrieve sites having \"HighQ\" word in their name : /api/1/sitetemplates?name='HighQ'<br>This will return all sites having \"HighQ\" word in their site template name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "One of the two site template status available in the system<br>{archived|preparation}<br>Default -> {preparation}<br>if filterBy={all}  is set then all status become applicable.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includefolderpermission",
            "in": "query",
            "description": "{true|false} default is false",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitetemplates" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sitecategories": {
      "get": {
        "tags": ["Sitecategories"],
        "summary": "Get site categories",
        "description": "<p>API method to obtain site categories </p><p>Version 13 onwards, categoriesids, categoryName  and filter search parameters have been introduced.<br>categories can be search through csv ids and name.<br>In filter search, one parameter can be pass 'usersite'. This filter returns only those categories which are assoicate with sites.\r\n\r\nVersion 13 onwards, normal users can access this API. But normal users can get only those categories which are assoicate with sites. </p>",
        "operationId": "getSitesCategory",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "categoriesids",
            "in": "query",
            "description": "Provide category id as csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Category name",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "usersite - search all categories from sites",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/categories" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorised" },
          "403": { "description": "Validation failed/Forbidden" },
          "405": {
            "description": "Method not allowed (calling API with the wrong method)"
          },
          "500": {
            "description": "Internal error occurred while obtaining site templates"
          }
        }
      }
    },
    "/{version}/sites/templates/{templateid}/content/{progresskey}": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Export/Download template as a .hqa file",
        "description": "<p>API to export site template as a .hqa file.<br><br>To use this API, first use/consume Export template API (sites/templates/{templateid}/content).<br>progresskey can be found in the response of Export template API.<br>Please see documentation of Export template API for more details on how to consume this API.</p>",
        "operationId": "exportSiteTemplate",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template",
            "required": true,
            "type": "string"
          },
          {
            "name": "progresskey",
            "in": "path",
            "description": "A progress key",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Template exported" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/sites/{siteid}/users/email": {
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Send an email to users",
        "description": "<p> Use this method to send an email to user(s)</p><p><b>Notes :</b>\r\n<br>1) User id must be integer. If it's not, it will display this message \"User ID provided is Invalid.\"\r\n<br>2) If a user id is listed multiple times in the transaction id's list an email will be sent to the user and the second time it will display a message stating \"This user was already sent an email.\"\r\n<br>3) The user must be a participant of the given site. If not then it will display a message stating \"User with the specified User ID does not exist in the site.\"\r\n<br>4) If the site is in read only mode at the time the invitation is sent only system admin have rights to send an email to site participants.\r\n<br>5) In the request body users must have to add CDATA tag if they have special characters in emailsubject or messagebody  tag. The request body is shown below\r\n<br>\r\n<br>&lt;emailusers&gt;\r\n<br>&lt;emailsubject&gt;&lt;![CDATA[Subject]]&gt;&lt;/emailsubject&gt;<br>    &lt;messagebody&gt;&lt;![CDATA[message]]&gt;&lt;/messagebody&gt;<br>    &lt;transactionids&gt;<br>        &lt;transactionid&gt;181&lt;/transactionid&gt;<br>        &lt;transactionid&gt;124&lt;/transactionid&gt;<br>&lt;/emailusers&gt;</p>",
        "operationId": "sendEmailToUser",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/EmailUserDBO" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/transactionstatus" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while send email to users"
          }
        }
      }
    },
    "/{version}/sites/{siteid}/groups": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get all site groups",
        "description": "<p>A list of site groups.<b><br>Notes :</b><br>In the response, all site groups are returned e.g. org,site,system,admin, allsystem, synced.<br>From API version 12 onwards, basic user groups can also be fetched using this API.</p>",
        "operationId": "getAllSiteGroups",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "org (only org groups which are in the site)<br>synced (only AD groups which are in the site) <br>system (only system groups which are in the site) <br>site (Only site groups which are in the site) <br>allsystem ({system + AD + org } groups which are in the site)<br>admin (Admin groups like Site admin, Member admin, Content admin, Reporting admin, QA admin )<br>basic_user (supported from API version 12 onwards, basic user groups which are in the site) <br>Filter the group list by these 6 options.<br>If no parameter is provided for the filter, then all groups of the site are returned. ",
            "required": false,
            "type": "string",
            "enum": [
              "org",
              "synced",
              "system",
              "site",
              "allsystem",
              "admin",
              "basic_user"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort the group list by these 2 options.<br>If no parameter is provided for orderby, the  group list will be sorted in ascending order.",
            "required": false,
            "type": "string",
            "enum": ["asc", "desc"]
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "The group is ordered by these 5 options.<br>If no parameter is provided for ordertype, then the name is the default value.",
            "required": false,
            "type": "string",
            "enum": ["name", "type", "numberofusers", "created", "modified"]
          },
          {
            "name": "q",
            "in": "query",
            "description": "Text that will be searched against the group name to filter out the list of the group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitegroups" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Add site group",
        "description": "<p>This API method adds a new group to the site.<br><b>Notes</b><ul><li>copypermissionsfrom is Mandatory field it is use to copy other group permission.<li>Please set value of copypermissionsfrom  to -1 when you don't want to copy any other groups permissions.<li>The group name cannot contain the following characters:  \\  / : * ? \" < > |<li>From API version 12 onwards, this API supports creating a basic user group in the site. In order to create a basic user group, set the value of the \"basicusergroup\" attribute to 1.</ul><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 727px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Summary</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Ref code (v12)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input for copy permissions from. Please provide id of a basic user group.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>470</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input for copy permissions from. Please provide id of a site group.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>471</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input for basicusergroup. Valid values are 0 or 1.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>463</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>",
        "operationId": "createSiteGroup",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "siteid",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "3"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitegroup" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      }
    },
    "/{version}/sites/templates/{templateid}": {
      "get": {
        "tags": ["Site Resource APIs"],
        "summary": "Get template",
        "description": "<p>The get template API returned the details for a template. Anyone with template access in Collaborate is permitted to use this API endpoint.<br>The fields returned for the template object are determined based on user permissions. If the user is a site admin user then they will get fields like Admin Notes otherwise not.<br>The current implementation does not include logo link.<br>The response object contains the user ID of the template owner.<br>The API responds with an access denied message when 'My site' details of another user are accessed.<br>Blank values for individual fields are not returned in the XML response, absence of value in the returned XML means that either the value does not exist for that field or the user does not have access to that field.<br>From version 7 onwards module tag will be in response to all user (Not only Admin) , and enable=0/1 will be based on either ON/OFF or have access (for normal users) to that module<br>API version 10 onwards, multiple matter numbers are supported. \"matternos\" tag indicates the multiple matter number in this API response.</p>",
        "operationId": "getTemplate",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template in question",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/site" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "put": {
        "tags": ["Site Resource APIs"],
        "summary": "Update template",
        "description": "<p>Use this API endpoint to update the details of an existing template. The API supports the same fields used in create template API.</p><br><br><p>This method supports multiple matter numbers to add into site using API version 10 on ward. \"matternos\" tag indicates multiple matter numbers with readonly or not.</matternos></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>duplicate values of matter number are existed in the request body.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>451</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>10</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The given templateid is invalid.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>457</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>8</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>Invalid template status. Valid values are Preparation and Archived</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>460</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>8</p></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The template status is required</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>461</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>8</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>",
        "operationId": "updateSite_1",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "text/plain", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SiteTemplate" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while gettting site"
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Site Resource APIs"],
        "summary": "Delete template",
        "description": "<p>This API method is used to delete a template. The template is marked as archived and the system admin can revert the action if required. The system throws an 'Access Denied' message if the template does not exist.<br>If a delete file request is sent through the API for a template that has already been archived, the API will return a 200 OK response to that request.<br><br><b>Response</b><br>The system sends a 200 OK response in case of success and throws an error object in case of an error.\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>The given templateid is invalid.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>457</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>8</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</p>",
        "operationId": "deleteSite_1",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "The ID for the template in question.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error occured while deleting site"
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/{version}/sites/templates": {
      "get": {
        "tags": ["Sitetemplates"],
        "summary": "Get template list",
        "description": "<p>API method to obtain site templates<br>API version 10 onwards, multiple matter numbers are supported. \"matternos\" tag indicates the multiple matter number in this API response.<br>API version 13 onwards, multiple categories search is supported.</p>",
        "operationId": "getSiteTemplates_1",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "Possible values are {recent|favourite|category|all} Default for this field is 'recent'<br>By default any filter will send back the first 20 sites if pagination is false ",
            "required": false,
            "type": "string",
            "enum": ["recent", "favourite", "category", "all"]
          },
          {
            "name": "returncount",
            "in": "query",
            "description": "The no of site templates returned. Default is 20. This option does not apply if filterBy property is set to all",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryid",
            "in": "query",
            "description": "This parameter is used to get the site template list based on the site category ID, please provide site template categoryid in addition to setting the filterby property to category. <br>example = /api/1/sitetemplates?filterby=category&categoryid=1<br>Version 13 onwards category id csv is supported. example = /api/13/sites?filterby=category&categoryid=1,2,3",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "This parameter is used to search site template by name. The site template is included in the search result if the string appears  in the title of the site (The results are returned in ascending order)<br>example: Retrieve sites having \"HighQ\" word in their name : /api/1/sitetemplates?name='HighQ'<br>This will return all sites having \"HighQ\" word in their site template name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "One of the two site template status available in the system<br>{archived|preparation}<br>Default -> {preparation}<br>if filterBy={all}  is set then all status become applicable.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includefolderpermission",
            "in": "query",
            "description": "{true|false} default is false",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateSource",
            "in": "query",
            "description": "Optional for Filter by Template source Value, Should be 0 = Internal or 1 = External, Example templateSource=1",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateType",
            "in": "query",
            "description": "Optional for Filter by Template Type Value, Should be 0 = Allows Derivatives or 1 = No Derivatives, Example templateType=0",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateLicense",
            "in": "query",
            "description": "Optional for Filter by Template License Value, Should be 0 = No License Needed or 1 = License Needed, Example templateLicense=1",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/sitetemplates" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occured while gettting site" }
        }
      },
      "post": {
        "tags": ["Site Resource APIs"],
        "summary": "Create template",
        "description": "<p>Use this API to create a new template.The template object only supports attributes which are visible in the create template interface.<br>This API requires template name and template description to create a new template.<br>\"module\" tag represents different module to configure in template as it is shown in request attributes. If \"module\" tag is not passed then File and People module will be enabled by default.<br>This method does not support uploading template image in this call, the template icon support will be provided as a separate call.<br>The method call expects an existing category ID. The category ID should be obtained by the calling application by an earlier call to the Site categories interface. If no any categories are given in the request, none category (not actual any category) will be added by default. <br>template start and end date should be in the format of 'dd MMM yyyy' and it is NOT UTC. API client will always request actual date. <br>\"landingpage\" has default value as \"files (root folder)\". <br>\"landingpage\" expect three different wordings or identifications for File module. Possible values are:<br>- files (root folder)<br>- files (recent activity)<br>- files (advanced search)<br><br><p>This method supports multiple matter numbers to add into template using API version 10 on ward. \"matternos\" tag indicates multiple matter numbers with readonly or not.</matternos></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table style=\"width: 858px;\" cellspacing=\"1\" cellpadding=\"1\" border=\"1\">\r\n    <tbody>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\"><span style=\"color:#000000;\"><strong><p>Error message</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>Reference code</p></strong></span></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><span style=\"color:#000000;\"><strong><p>From version</p></strong></span></td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" style=\"width: 450px;\">\r\n            <p>duplicate values of matter number are existed in the request body.</p>\r\n            </td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>451</p></td>\r\n            <td align=\"center\" style=\"width: 178px;\"><p>10</p></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>",
        "operationId": "createSite_1",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SiteTemplate" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Template created successfully [id,sitename and link tags are used in response.]",
            "schema": { "$ref": "#/definitions/site" }
          },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "409": { "description": "Template already exists in the system" },
          "500": {
            "description": "Internal error occured while adding template"
          }
        }
      }
    },
    "/{version}/groups/{groupid}/users/{userid}": {
      "get": {
        "tags": ["System Groups"],
        "summary": "Get user of a group",
        "description": "<p>API method to get user from a group. Please note that this method only gets user of an AD group, and not the system groups.",
        "operationId": "getUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "group id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["System Groups"],
        "summary": "Remove user from system group",
        "description": "<p>This API call is used to remove multiple users in a system group.<br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system:</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The group does not exist within the system&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Group id is not in proper format&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The User ids are not in a given group:</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">259</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Users cannot be removed from an auto-created group</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">306</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in proper format&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The User&#39;s id length cannot exceeds 50 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">304</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66707'>https://dev.highq.com/jira/browse/COL-66707</a></b></p>",
        "operationId": "removeUserFromSystemGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the system group",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The IDs of the users to be removed from system group.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/groups/{groupid}": {
      "get": {
        "tags": ["System Groups"],
        "summary": "Get system group",
        "description": "<p>This API call is used to get a system group object in the system.<br>The value of 'type' attribute for 'Contract Express admins and authors' and 'Contract Express users' groups will be 'contract_express'.<br>From API version 12 onwards, a new attribute \"basicusergroup\" will be shown in the response which will be used to identify if the group is a basic user group.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Group id is&nbsp;required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">125</td>\r\n\t\t\t<td style=\"width: 178px;\">125</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Group id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The group does not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65839'>https://dev.highq.com/jira/browse/COL-65839</a></b></p>",
        "operationId": "getGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the system group",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "id or name",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/group" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["System Groups"],
        "summary": "Delete system group",
        "description": "<p>This API call is used to delete a system group. <br>NOTE : <br>1. This API now can be used to delete system as well as active directory groups.<br>2. This API supports deleting basic user groups as well.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Group id must be required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">125</td>\r\n\t\t\t<td style=\"width: 178px;\">125</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Group id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>An auto-created group cannot be deleted</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">311</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The group does not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This system group name is associated with one or more sites</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">310</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Contract express group cannot be deleted</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">452</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65905'>https://dev.highq.com/jira/browse/COL-65905</a></b></p>",
        "operationId": "removeSystemGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the System group to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["System Groups"],
        "summary": "Update system group",
        "description": "<p>This API call is used to change a system group.Note:<br>1. In the previous version of this API all fields were mandatory, with the new version individual fields that can be updated<br>2. This API endpoint only supported \"Active directory\" system groups, now any system group can be updated <br>3. \"basicgroup\" attribute can not be used in this API</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 727px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Summary</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">Ref code (before v4)</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Ref code (v4)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>The group name cannot be empty</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">121</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>121</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>The system group name &#39;Highq&#39; already exists within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">122</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>122</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Group id is not in the proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">124</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>124</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Group id must be required&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">125</td>\r\n\t\t\t<td style=\"width: 179px;\">125</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>The group does not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">126</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>126</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Invalid input. Please remove &#39;&gt;&#39; OR &#39;&lt;&#39; from given input : name</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">142</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>390</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input. Please remove &#39;&gt;&#39; OR &#39;&lt;&#39; from given input : description</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">142</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>391</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>An auto-created group cannot be updated</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">320</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Contract express group's name or description cannot be changed</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">453</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65905'>https://dev.highq.com/jira/browse/COL-65905</a></b></p>",
        "operationId": "updateSystemGroup",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the system group",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/group" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/groups/{groupid}/users": {
      "get": {
        "tags": ["System Groups"],
        "summary": "Get users of a group",
        "description": "<p>API method to get users from a group. Please note that this method only gets users of an AD group, and not the system groups.",
        "operationId": "getAllUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "group id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IntegrationResponseUsersObject" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["System Groups"],
        "summary": "Add user to a system group",
        "description": "<p>This API call is used to add users in a system group.<br>This API can also be used to add a user to the basic user group.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system:</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The group does not exist within the system&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t\t<td style=\"width: 178px;\">126</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Group id is not in the proper format&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t\t<td style=\"width: 178px;\">124</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User id is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Archived user(s) cannot be added to the system group:</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">394</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A user cannot be added to an auto-created group&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">299</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Only internal users are allowed in contract express admins and authors group</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">454</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Basic user(s) can not be added to a system group. (From API version 12 onwards)</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">464</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Other than basic user(s) can not be added to a basic user group. (From API version 12 onwards)</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">465</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65908'>https://dev.highq.com/jira/browse/COL-65908</a></b></p>",
        "operationId": "addUserInSystemGroup",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "groupid",
            "in": "path",
            "description": "The ID of the system group",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserIDListDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/users/{user_id}/groups": {
      "get": {
        "tags": ["System Groups"],
        "summary": "Get system groups by user id",
        "description": "<p>This API call is used to get a system group object in the system. <br>From API version 12 onwards,a new attribute \"basicusergroup\" is added in the response to identify a basic user group.</p><br>Previously this API only system admin user can access but now onwards normal user also can access this API as part of COL-145881.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User does not exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">403</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User id is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Access denied</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">130</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-108271'>https://dev.highq.com/jira/browse/COL-108271</a>\r\n</br><a href='https://dev.highq.com/jira/browse/COL-145881'>https://dev.highq.com/jira/browse/COL-145881</a></b></p>",
        "operationId": "getGroupOfUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "9"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntegrationResponseGroupsObject"
            }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/groups": {
      "get": {
        "tags": ["System Groups"],
        "summary": "System group list",
        "description": "<p>This API call is used to get a list of system groups.<br>Notes :<br>The following changes have been made to this API endpoint<br>1. Introduced sorting.<br>2. Added following additional items to the return object createddate, totalcount, total, nooforganisation.<br>3. The value of 'type' attribute for 'Contract Express admins and authors' and 'Contract Express users' groups will be 'contract_express'.<br>4. 'Contract Express' groups can be filtered by type 'contract_express'.<br>5. From API version 12 onwards, a new \"type\", \"basic_user\" has been added to filter basic user groups. Also, the \"contract_express\" type is extended <br>&nbsp;&nbsp;&nbsp;&nbsp;to get \"Contract Express basic users\" group.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Invalid value provided in type, valid values are org, system, synced or contract_express</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">146</td>\r\n\t\t\t<td style=\"width: 178px;\">146</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Invalid value provided in type, valid values are org, system, synced, contract_express or basic_user (From API version 12 onwards)</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">146</td>\r\n\t\t\t<td style=\"width: 178px;\">146</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid. createddate is supported ordertype&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">150</td>\r\n\t\t\t<td style=\"width: 178px;\">150</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. asc and desc are supported orderby values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">151</td>\r\n\t\t\t<td style=\"width: 178px;\">151</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65896'>https://dev.highq.com/jira/browse/COL-65896</a></b></p><p>\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 794px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td><strong>Parameters</strong></td>\r\n\t\t\t<td style=\"width: 540px;\"><strong>Description</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>type</td>\r\n\t\t\t<td style=\"width: 540px;\">\r\n\t\t\t<p>org&nbsp;(Organisation Auto created groups)<br />\r\n\t\t\tsynced&nbsp;(Groups imported from an external system like Active Directory)&nbsp;<br />\r\n\t\t\tsystem&nbsp;(System groups)<br />\r\n           contract_express&nbsp;(Contract Express groups)<br />\r\n           basic_user&nbsp;(Basic user groups) (From API version 12 onwards)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>sort</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 540px;\">\r\n\t\t\t<p>Allow ascending and descending sorting of a single field.</p>\r\n\t\t\t<p>GET /api/3/groups?ordertype=createddate</p>\r\n\t\t\t<p>This returns a list of groups sorted by createddate in ascending order.</p>\r\n\t\t\t<p>possible fields: createddate</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>order by</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 540px;\">\r\n\t\t\t<p>Allow ascending and descending sorting of a single field.</p>\r\n\t\t\t<p><em>GET /api/3/groups?orderby=</em>desc</p>\r\n\t\t\t<p>possible fields: asc,desc</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><br>",
        "operationId": "getAllGroup",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string",
            "enum": [
              "org",
              "synced",
              "system",
              "contract_express",
              "basic_user"
            ]
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "Allow ascending and descending sorting of a single field.<br>GET /api/3/groups?ordertype=createddate<br>This returns a list of groups sorted by createddate in ascending order.<br>possible fields: createddate",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Allow ascending and descending sorting of a single field.<br>GET /api/3/groups?orderby=desc<br>possible fields: asc,desc",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK [<br> Where \"total\" represents the total no of system groups in the system and \"totalcount\" is the no of groups returned in the response based on the filter criteria.]",
            "schema": {
              "$ref": "#/definitions/IntegrationResponseGroupsObject"
            }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["System Groups"],
        "summary": "add system group",
        "description": "<p>This API call is used to add a new system group object in the system.<br>This API can be used to create a basic user group using \"basic\" attribute.</p><br><b>Error Codes</b><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 727px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Summary</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">Ref code (before v4)</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Ref code (v4)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>System group name required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 179px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>258</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>Invalid input. Please remove &#39;&gt;&#39; OR &#39;&lt;&#39; from given input : name</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>390</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input. Please remove &#39;&gt;&#39; OR &#39;&lt;&#39; from given input : description</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>391</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input for sourcetype. Valid values are Active Directory or System.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>359</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>The group name cannot be empty</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">121</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>121</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>The system group name &#39;Highq&#39; already exists within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">122</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>122</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid sourcetype input for basic user group. Valid value is System</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>462</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 543px;\">\r\n\t\t\t<p>Invalid input for basicusergroup. Valid values are 0 or 1</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 543px;\">N/A</td>\r\n\t\t\t<td style=\"width: 179px;\">\r\n\t\t\t<p>463</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-67587'>https://dev.highq.com/jira/browse/COL-67587</a></b></p>",
        "operationId": "createSystemGroup",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/group" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK [groupID,link are used in response]",
            "schema": { "$ref": "#/definitions/group" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemreports/sitesummaryreport/content": {
      "get": {
        "tags": ["System Reports APIs"],
        "summary": "Download Site summary xlsx report",
        "description": "API method to download Site summary report export in  xlsx format<br>- <strong>Only System admin (Internal Admin) can download the report</strong>",
        "operationId": "downloadSiteSummarySystemReportsXLSFile",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "7"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Document downloaded" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Access denied" },
          "404": {
            "description": "Page not found / Metthod calling with invalid API version"
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal server error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/configuration/supportedfiletypes": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Supported fileTypes info",
        "description": "<p>This api method helps to obtain information about blacklist/whitelist filetypes of Instance <br>Sample request URL : https://domain.com/instancename/api/1/ configuration/supportedfiletypes<br>Assumptions :<br>Any system user can call this API  If matched extension not found in system then only <type> tag is display for that filetype </p>",
        "operationId": "getSupportedfiletypesInfo",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/configuration" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while gettting filetypes"
          }
        }
      }
    },
    "/{version}/configuration/application": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Get Apllication details",
        "description": "<p>This api method can be used to get application details of a Collaborate Instance<br>Sample request URL : https://domain.com/instancename/api/11/configuration/application <br>Assumptions :<br>Only logged in user can access this api </p>",
        "operationId": "getApplicationDetails",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/ApplicationDetails" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while gettting basicdetail"
          }
        }
      }
    },
    "/{version}/apiapplication": {
      "get": {
        "tags": ["System Resource"],
        "operationId": "getAPIAppInfoByAppIdentifier",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "appidentifier",
            "in": "query",
            "description": "value of appidentifier of application",
            "required": false,
            "type": "string"
          },
          {
            "name": "apptype",
            "in": "query",
            "description": "apptype of application",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "description": "resourcetype of application",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/configuration/filetypefunctions": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Check filetype functions",
        "description": "<p>API method to check if the file type is supported for a specific functionality. For example if a file type is supported by online viewer or not. The client will send a single file extension in query string for which it wants to find the available functions, and in response Collaborate will respond with available functions for that filetype. </p><p><br>Confirmations and assumptions<br>Access rights of this API has been given a value of \"ACCESS_ALL\", which means everyone with a valid account can access this method.<ul><li> Filetype parameter is a required parameter. <li> If blank filetype query parameter is supplied then an error message will be returned. <li> A error message is displayed If filetype query param contains any of the following  characters \\ / ? : * \" > < | .  <li> If the filetype is not present in the Collaborate system and the filetype is controlled in Collaborate using a block list. If the requested filetype is not present in the black list then default values will be returned for this filetype. <li> An error message is returned if the requested filetype parameter has a length greater than 50 characters.  \r\n<li> \"allowed\" tag in the response XML determines if file of that type can be added to the system or not. A value of 0 means that a file with the specific extension cannot be inserted in the system and 1 means it can be inserted into the system.</ul></p>",
        "operationId": "getSupportedFileTypeInfoByFileType",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "filetype",
            "in": "query",
            "description": "Provide the file extension for which the details are required",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/configuration" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while gettting filetypes"
          }
        }
      }
    },
    "/{version}/appliance/audit": {
      "post": {
        "tags": ["System Resource"],
        "operationId": "insertApplianceAudit",
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "appidentifier",
            "in": "query",
            "description": "app identifier",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ApplianceInfoDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/microservice/authorize": {
      "get": {
        "tags": ["System Resource"],
        "operationId": "authorizeMicroService",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "query",
            "description": "application name",
            "required": false,
            "type": "string"
          },
          {
            "name": "microServiceTypeAlias",
            "in": "query",
            "description": "microservicetypelias of the microservice",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientID",
            "in": "query",
            "description": "client id ",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "microServiceID",
            "in": "query",
            "description": "microservice id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "secretKey",
            "in": "query",
            "description": "secret key",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string"
          },
          {
            "name": "microServiceAppName",
            "in": "query",
            "description": "microservice application name",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/configuration/basicdetails": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Get Instance details",
        "description": "<p>This api method can be used to get basic details of a Collaborate Instance<br>Sample request URL : https://domain.com/instancename/api/1/configuration/basicdetails <br>Assumptions :<br>No credentials required to call this api method (Change introduced in 3.4.5)  </p>",
        "operationId": "getInstanceDetails",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/configuration" }
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occured while gettting basicdetail"
          }
        }
      }
    },
    "/{version}/tasks/{taskid}": {
      "get": {
        "tags": ["Tasks APIs"],
        "summary": "Get Single Task",
        "description": "Method to Get Single Task<br>This method is supported in version 3 of the API and above",
        "operationId": "getTask",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task Fetch successfully",
            "schema": { "$ref": "#/definitions/Task" }
          },
          "200": { "description": "Task Fetch successfully" },
          "400": { "description": "Problem with parameters in get task" },
          "401": { "description": "Unauthorised in get task" },
          "403": {
            "description": "Validation failed | Forbidden in get task",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while Fetching Task"
          }
        }
      },
      "put": {
        "tags": ["Tasks APIs"],
        "summary": "Edit Task",
        "description": "Method to Edit Task<br>This method is supported in version 3 of the API and above",
        "operationId": "editTask",
        "consumes": [
          "application/json",
          "application/xml",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Task" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Edited successfully" },
          "400": { "description": "Problem with parameters in edit task" },
          "401": { "description": "Unauthorised in edit task" },
          "403": {
            "description": "Validation failed | Forbidden in edit task",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting Task Edit"
          }
        }
      },
      "delete": {
        "tags": ["Tasks APIs"],
        "summary": "Delete Task",
        "description": "Method to Delete Task<br>This method is supported in version 3 of the API and above",
        "operationId": "deleteTask",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Deleted successfully" },
          "400": { "description": "Problem with parameters in delete task" },
          "401": { "description": "Unauthorised in delete task" },
          "403": {
            "description": "Validation failed | Forbidden in delete task",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting Task Delete"
          }
        }
      }
    },
    "/{version}/tasks/status/{statusid}": {
      "put": {
        "tags": ["Tasks APIs"],
        "summary": "Edit Tasks status",
        "description": "Method to edit Tasks status<br>This method is supported in version 3 of the API and above",
        "operationId": "editTaskStatus",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "statusid",
            "in": "path",
            "description": "status id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TaskStatus" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Status edited successfully" },
          "400": {
            "description": "Problem with parameters in edit task status"
          },
          "401": { "description": "Unauthorised in edit task status" },
          "403": {
            "description": "Validation failed | Forbidden in edit task status",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while editing task status"
          }
        }
      },
      "delete": {
        "tags": ["Tasks APIs"],
        "summary": "Delete Tasks status",
        "description": "Method to delete Tasks status<br>This method is supported in version 3 of the API and above",
        "operationId": "deleteTaskStatus",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "statusid",
            "in": "path",
            "description": "status id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Status deleted successfully" },
          "400": {
            "description": "Problem with parameters in delete task status"
          },
          "401": { "description": "Unauthorised in delete task status" },
          "403": {
            "description": "Validation failed | Forbidden in delete task status",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting task status"
          }
        }
      }
    },
    "/{version}/tasks": {
      "get": {
        "tags": ["Tasks APIs"],
        "summary": "Get All Tasks",
        "description": "Method to Get All Tasks<br>This method is supported in version 3 of the API and above",
        "operationId": "getAllTask",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Site ID CSV supported from API version 13 and above, If MySite content need to pass MySite id only.<br>Multiple site id with comma separated value i.e 1,2,3<br>Passing <b>All</b> as parameter value will consider only sites which user has access.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listid",
            "in": "query",
            "description": "list_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigneeid",
            "in": "query",
            "description": "Assigneeid parameter always works in combination with assigneetypeid. <br>And these parameters will always have higher priority then newly introduced parameters <b>assigneeuserid</b> and <b>assigneegroupid</b> in version <b>13</b>",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "description": "priority",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusid",
            "in": "query",
            "description": "status_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "order_type",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "in": "query",
            "description": "group_by",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigneetypeid",
            "in": "query",
            "description": "assignee_type_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "string"
          },
          {
            "name": "documentid",
            "in": "query",
            "description": "document_id",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "parenttaskid",
            "in": "query",
            "description": "parent_task_id",
            "required": false,
            "type": "string",
            "default": "-1"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigneeuserid",
            "in": "query",
            "description": "This Assignee User ID filtration is supported from API version 13 and above, this field accepts comma-separated assigne user id values. <br>Multiple assignee user id with comma separated value i.e 1,2,3",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigneegroupid",
            "in": "query",
            "description": "This Assignee Group ID filtration is supported from API version 13 and above, this field accepts comma-separated assigne group id values.<br>Multiple assignee group id with comma separated value i.e 1,2,3",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "This Tag filtration is supported from API version 13 and above, this field accepts comma-separated tag values.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task List Fetched successfully",
            "schema": { "$ref": "#/definitions/Tasks" }
          },
          "200": { "description": "Task List Fetched successfully" },
          "400": { "description": "Problem with parameters in get all task" },
          "401": { "description": "Unauthorised in get all task" },
          "403": {
            "description": "Validation failed | Forbidden in get all task",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching task list"
          }
        }
      },
      "post": {
        "tags": ["Tasks APIs"],
        "summary": "Add Task",
        "description": "Method to Add Task<br>This method is supported in version 3 of the API and above",
        "operationId": "addTask",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "tasklistid",
            "in": "query",
            "description": "task_list_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Task" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task Added successfully",
            "schema": { "$ref": "#/definitions/Task" }
          },
          "200": { "description": "Task Added successfully" },
          "400": { "description": "Problem with parameters in add task" },
          "401": { "description": "Unauthorised in add task" },
          "403": {
            "description": "Validation failed | Forbidden in add task",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting Task Add"
          }
        }
      }
    },
    "/{version}/tasks/lists": {
      "get": {
        "tags": ["Tasks APIs"],
        "summary": "Get All task List",
        "description": "Method to get All task List<br>This method is supported in version 3 of the API and above",
        "operationId": "getAllTaskList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parenttasklistid",
            "in": "query",
            "description": "parent tasklist id (list's parent list id)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task List fetched successfully",
            "schema": { "$ref": "#/definitions/TaskLists" }
          },
          "200": { "description": "Task List fetched successfully" },
          "400": {
            "description": "Problem with parameters in get all task list"
          },
          "401": { "description": "Unauthorised in get all task list" },
          "403": {
            "description": "Validation failed | Forbidden in get all task list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching task list"
          }
        }
      },
      "post": {
        "tags": ["Tasks APIs"],
        "summary": "Add Task List",
        "description": "Method to Add Task List<br>This method is supported in version 3 of the API and above",
        "operationId": "addTaskList",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TaskList" }
          },
          {
            "name": "preventDuplicate",
            "in": "query",
            "description": "preventDuplicate",
            "required": false,
            "type": "string",
            "default": "0"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task List Added successfully",
            "schema": { "$ref": "#/definitions/TaskList" }
          },
          "200": { "description": "Task List Added successfully" },
          "400": { "description": "Problem with parameters in add task list" },
          "401": { "description": "Unauthorised in add task list" },
          "403": {
            "description": "Validation failed | Forbidden in add task list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while adding Task list"
          }
        }
      }
    },
    "/{version}/tasks/{taskid}/attachments/{attachmentid}": {
      "delete": {
        "tags": ["Tasks APIs"],
        "summary": "Remove Task Attachments",
        "description": "Method to Remove Task Attachments<br>This method is supported in version 3 of the API and above",
        "operationId": "removeTaskAttachment",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentid",
            "in": "path",
            "description": "attachment_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Attachment removed successfully" },
          "400": {
            "description": "Problem with parameters in remove task attachment"
          },
          "401": { "description": "Unauthorised in remove task attachment" },
          "403": {
            "description": "Validation failed | Forbidden in remove task attachment",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while removing Task attachments"
          }
        }
      }
    },
    "/{version}/tasks/specifiedfields/{taskid}": {
      "put": {
        "tags": ["Tasks APIs"],
        "summary": "Edit Task specific field",
        "description": "Method to edit task specific field<br>This method is supported in version 3 of the API and above",
        "operationId": "editTaskSpecifiedFields",
        "consumes": [
          "application/json",
          "application/xml",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Task" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task edit with specific successfully" },
          "400": {
            "description": "Problem with parameters in edit task specific fields"
          },
          "401": { "description": "Unauthorised in edit task specific fields" },
          "403": {
            "description": "Validation failed | Forbidden in edit task specific fields",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while editing task with specific field"
          }
        }
      }
    },
    "/{version}/tasks/status": {
      "get": {
        "tags": ["Tasks APIs"],
        "summary": "Get All Tasks Status",
        "description": "Method to Get All Tasks Status<br>This method is supported in version 3 of the API and above",
        "operationId": "getTaskStatusList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task status List Fetched successfully",
            "schema": { "$ref": "#/definitions/TaskStatuses" }
          },
          "200": { "description": "Task status List Fetched successfully" },
          "400": {
            "description": "Problem with parameters in get task status list"
          },
          "401": { "description": "Unauthorised in get task status list" },
          "403": {
            "description": "Validation failed | Forbidden in get task status list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching task status list"
          }
        }
      },
      "post": {
        "tags": ["Tasks APIs"],
        "summary": "Add Tasks Status",
        "description": "Method to Add Tasks Status<br>This method is supported in version 3 of the API and above",
        "operationId": "addTaskStatus",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TaskStatus" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task status Added successfully",
            "schema": { "$ref": "#/definitions/TaskStatus" }
          },
          "200": { "description": "Task status Added successfully" },
          "400": {
            "description": "Problem with parameters in add task status"
          },
          "401": { "description": "Unauthorised in add task status" },
          "403": {
            "description": "Validation failed | Forbidden in add task status",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while Adding task status"
          }
        }
      }
    },
    "/{version}/tasks/lists/{tasklistid}": {
      "put": {
        "tags": ["Tasks APIs"],
        "summary": "Edit Tasks List",
        "description": "Method to Edit Tasks List<br>This method is supported in version 3 of the API and above",
        "operationId": "editTaskList",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "tasklistid",
            "in": "path",
            "description": "task list id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TaskList" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task List Edited successfully" },
          "400": { "description": "Problem with parameters in edit task list" },
          "401": { "description": "Unauthorised in edit task list" },
          "403": {
            "description": "Validation failed | Forbidden in edit task list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while Editting task list"
          }
        }
      },
      "delete": {
        "tags": ["Tasks APIs"],
        "summary": "Delete Task List",
        "description": "Method to Delete Task List<br>This method is supported in version 3 of the API and above",
        "operationId": "removeTaskList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "tasklistid",
            "in": "path",
            "description": "task_list_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Task List Deleted successfully",
            "schema": { "$ref": "#/definitions/Task" }
          },
          "200": { "description": "Task List Deleted successfully" },
          "400": {
            "description": "Problem with parameters in remove task list"
          },
          "401": { "description": "Unauthorised in remove task list" },
          "403": {
            "description": "Validation failed | Forbidden in remove task list",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while Deleting Task List"
          }
        }
      }
    },
    "/{version}/tasks/{taskid}/reminders/{reminderid}": {
      "delete": {
        "tags": ["Tasks APIs"],
        "summary": "Delete Task Reminder",
        "description": "Method to Delete Task reminder<br>This method is supported in version 3 of the API and above",
        "operationId": "deleteTaskReminder",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "task_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "reminderid",
            "in": "path",
            "description": "reminder_id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task Reminder Deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised in delete task reminder" },
          "403": {
            "description": "Validation failed | Forbidden in delete task reminder",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting task reminder in delete task reminder"
          }
        }
      }
    },
    "/{version}/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get user list",
        "description": "<p>Get a list of users\r\n<br>This API call is used to retrieve a list of users from the system.\r\n<br>Note:\r\n<br><br>1. New query parameters introduced with this version are:\r\n<br><br> neverlogin, neverinvited, notingroup, ordertype, orderby, orgid, groupid, externalid, firstname, lastname, email, search\r\n<br><br>2. Introduced fields totalcount, total\r\n<br><br>3. Introduced the following fields for the response body \r\n<br>emaildomain, org, invitationsent, createdby, createddate, modifiedby, modifieddate, ifpartner, lastlogindate, invalidlogins, externalid, publicwebsiteprofileid, systemuser, resetpassworddate, usertypeid, avatar, practicegroup, langcode, publicprofile, dateOfBirth\r\n<br><br>4. The \"location\" tag has been renamed to \"address\" tag to make it consistent with the Collaborate UI \r\n<br><br>5. In every GET API # value for search is not supported because the jersey framework itself does not support #. After # all the parameters/values will be ignored.The response will now display the address as:\r\n<br>&lt;address&gt;<br />\r\n&lt;addressid&gt;1&lt;/addressid&gt;<br />\r\n&lt;addressline1&gt;2nd floor&lt;/addressline1&gt;<br />\r\n&lt;addressline2&gt;additional&lt;/addressline2&gt;<br />\r\n&lt;city&gt;london&lt;/city&gt;<br />\r\n&lt;state&gt;state&lt;/state&gt;<br />\r\n&lt;country&gt;uk&lt;/country&gt;<br />\r\n&lt;postCode&gt;EC4R&lt;/postCode&gt;<br />\r\n&lt;/address&gt;<br />\r\nInstead of<br />&lt;location&gt;\r\n&lt;addressline1&gt;2nd floor, 55 King William Street&lt;/addressline1&gt;\r\n&lt;addressline2&gt;additional&lt;/addressline2&gt;\r\n&lt;addressline3&gt;state&lt;/addressline3&gt;\r\n&lt;city&gt;London&lt;/city&gt;\r\n&lt;country&gt;United Kingdom&lt;/country&gt;\r\n&lt;postcode&gt;EC4R 9AD&lt;/postcode&gt;\r\n&lt;/location&gt;<br><br>6. Below is the response tag for user roles which is available with API version 11 onwards \r\n<p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;SYSTEM_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;System Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Internal User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;CREATE_SITE&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Create Site&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;AUTO_LOGIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Auto Login&lt;/name&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url&gt;https://URL-LINK&lt;/url&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;<br><br>7. New query parameter introduced with 12 version are:\r\n<br><br> systemAdminSearch. If this parameter is equals 1, than method returns only users with System Admin Role<p><span style=\"color:#000000;\"><strong><span style=\"font-size:16px;\">Notes :</span></strong></span></p>\r\n\r\n<p><ul>\r\n\t<li><span style=\"color:#000000;\">The value of limit parameter has the following behaviour:</span>\r\n\t<ul>\r\n\t\t<li><span style=\"color:#000000;\">If no value is provided in the limit, 100 is used as the&nbsp;default value.</span></li>\r\n\t\t<li><span style=\"color:#000000;\">If the limit is higher than 0, then it uses that value as limit.</span></li>\r\n\t\t<li><span style=\"color:#000000;\">To return all the records use -1 for the limit.</span></li>\r\n\t\t<li>If the limit is&nbsp;lower than -1 then the limit value is set to a default value of 100.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>The value of the offset parameter has the following behaviour:\r\n\t<ul>\r\n\t\t<li>If no value is provided in the offset, 0 is used as the&nbsp;default value.</li>\r\n\t\t<li>If the offset is lower than 0,&nbsp; then an offset value is set to be a default value of 0.</li>\r\n\t\t<li>If the offset is higher than 0 and less than the number of records in the&nbsp;user list, then the records starting from the offset value are returned.</li>\r\n\t\t<li>If the offset is higher than the total number of records in the&nbsp;user list, then the offset has a&nbsp;default value of 0.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul></p><p>8. From version 12 onwards, a new user role called \"Basic user\" is supported for internal users and  \"Allow user to bypass XSS protection\" is supported for internal and external users in this API.</p> \r\n<p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;BASIC_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Basic User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;ALLOW_USER_TO_BYPASS_XSS_PROTECTION&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Allow user to bypass XSS protection&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><p>9. From version 13 onwards, this API is open for all users.(for normal users and other sites admins etc.).<br>      &nbsp;&nbsp;&nbsp;&nbsp;Before version 13 only system admin can access this API.</p><p>10. From version 14 onwards, a new user role called \"Allow user to manage Contract Express system groups\" will be supported in this API. Below is the request body to update for internal users. For roleOptionType user can allow INTERNAL_EXTERNAL_USER or INTERNAL_USER.</p><p><pre>&lt;roles&gt;\n\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Internal User&lt;/name&gt;\r\n\t\t\t&lt;/role&gt;\r\n\t\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;ALLOW_USER_TO_MANAGE_CONTRACT_EXPRESS_SYSTEM_GROUPS&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Allow user to manage Contract Express system groups&lt;/name&gt;\r\n\t\t\t&lt;roleOptionType&gt;INTERNAL_USER&lt;/roleOptionType&gt;\r\n\t\t&lt;/role&gt;\r\n&lt;/roles&gt;\n</pre></p><br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Invalid input for user status. It would be ACTIVE,ARCHIVED or INACTIVE</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">147</td>\r\n\t\t\t<td style=\"width: 178px;\">147</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The neverinvited value is invalid. True and false are supported neverinvited values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">387</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The neverlogin value is invalid. True and false are supported neverlogin values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">388</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The groupids are invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">214</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The notingroup value is invalid. True and false are supported notingroup values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>389</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The ordertype is invalid. name, organisation, status, invited,lastlogin,lname,fname,email,jobtitle,department,</p>\r\n\t\t\t<p>createddate,modifieddate and userid are supported ordertypes</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">289</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The orderby value is invalid. asc and desc are supported orderby values.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">290</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The offset value is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">138</td>\r\n\t\t\t<td style=\"width: 178px;\">138</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The limit value is invalid.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">137</td>\r\n\t\t\t<td style=\"width: 178px;\">137</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65899'>https://dev.highq.com/jira/browse/COL-65899</a></b></p>",
        "operationId": "getAllSystemUsers",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Possible values for the status are Active, Archived, Inactive and Locked. If more than one is specified, this should be in a comma separated list\r\nIf a value is not provided, the API endpoint will return a list of all users with any status in the system. i.e if the user is active, archived or inactive,locked",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting position of the user list from when the user list should be returned. This is to allow pagination.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to return in an individual get call.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "Organisations - if more than one is specified, this should be in a comma separated list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "neverinvited",
            "in": "query",
            "description": "Returns a list of users who have never been invited. The value can be either true or false.",
            "required": false,
            "type": "string"
          },
          {
            "name": "neverlogin",
            "in": "query",
            "description": "Returns a list of users who have never logged in. The value can be either true or false.",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "User Groups - if more than one is specified, this should be in a comma separated list",
            "required": false,
            "type": "string"
          },
          {
            "name": "notingroup",
            "in": "query",
            "description": "Returns a list of users who are not in any group. The value can be either true or false.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "This returns a list of users on a specified sort type. The default sort type is organisation.<br>Possible fields: name, organisation, status, invited, lastlogin, fname, lname, email, jobtitle, department, createddate, modifieddate, userid",
            "required": false,
            "type": "string",
            "enum": [
              "name",
              "organisation",
              "status",
              "invited",
              "lastlogin",
              "fname",
              "lname",
              "email",
              "jobtitle",
              "department",
              "createddate",
              "modifieddate",
              "userid"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "This sorts the result on ordertype. The default value of orderby is asc.\r\nPossible Values: asc and desc",
            "required": false,
            "type": "string",
            "enum": ["asc", "desc"]
          },
          {
            "name": "externalid",
            "in": "query",
            "description": "Returns a user who has the given externalid",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstname",
            "in": "query",
            "description": "Returns a list of users whose first name is given in the parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "Returns a list of users whose last name is given in the parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Returns a user who has given the email id. From version 11 onwards we also support multiple email id in CSV format with exact email filter. <br>For example if we pass 'tom.chick@highq.com','systemuser@highq.com' then it will gives only 2 users if such users are exist otherwise ignores those values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "This returns list of users whose first name, last name, email, externalID, job title, department, organisation, street address, city, country, office phone and mobile phone that match with the value given in the parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "alphabets",
            "in": "query",
            "description": "Returns list of users whose last name starts with the value given in parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobtitle",
            "in": "query",
            "description": "Returns list of users whose jobtitle matches any of the exact values given in the parameter pipe separated values",
            "required": false,
            "type": "string"
          },
          {
            "name": "locations",
            "in": "query",
            "description": "Returns list of users whose address city matches any of the exact values given in the parameter pipe separated values",
            "required": false,
            "type": "string"
          },
          {
            "name": "departments",
            "in": "query",
            "description": "Returns list of users whose department matches any of the exact values given in the parameter pipe separated values",
            "required": false,
            "type": "string"
          },
          {
            "name": "organisations",
            "in": "query",
            "description": "Returns list of users whose organisation name matches any of the exact values given in the parameter pipe separated values",
            "required": false,
            "type": "string"
          },
          {
            "name": "specialities",
            "in": "query",
            "description": "Returns list of users whose specialities consist any of the exact values given in the parameter pipe separated values ",
            "required": false,
            "type": "string"
          },
          {
            "name": "systemAdminSearch",
            "in": "query",
            "description": "Returns list of user which roles contains System Admin Role if the value is 1 - ",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Add User",
        "description": "<p>This API call is used to add a new user to the system.<br>Note:<br>1. Added support for the following new fields<br>emaildomain, org, invitationsent, createdby, createddate, modifiedby, modifieddate, ifpartner, lastlogindate, invalidlogins, externalid, publicwebsiteprofileid, systemuser, resetpassworddate, usertypeid, avatar, practicegroup, langcode, publicprofile, dateOfBirth<br>2. Address tag has been added in API version 4<br>&#60;address&#62;<br>&#60;addressid&#62;1&#60;/addressid&#62;<br>&#60;/address&#62;</p><p><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Email address is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">101</td>\r\n\t\t\t<td style=\"width: 178px;\">101</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Invalid email address</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>First name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum allowed&nbsp;characters for the first name must be between 1 to 100</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t\t<td style=\"width: 178px;\">352</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The secretary&#39;s email address is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t\t<td style=\"width: 178px;\">353</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Status must be active or inactive</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">116</td>\r\n\t\t\t<td style=\"width: 178px;\">116</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered department cannot be more than 256 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">354</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered ifpartner attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">355</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered systemuser attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">356</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered usertypeid attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">357</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered langcode attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">358</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered sourcetype attribute is invalid.Valid values are System, Active directory or System default .</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">359</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid phone number&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">360</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid phone number in format {countrycode}&nbsp; ${areacode}${number}.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">361</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid mobile number in format {countrycode}${number}.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">362</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid office phone country code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">363</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The office phone country code can have a maximum of 4 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">364</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid office phone area code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">365</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The office phone area code can have a maximum of 5 Digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">366</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Office phone number should have maximum&nbsp;of 15 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">368</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid mobile phone country code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">369</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The mobile phone country code can have a maximum of 4 Digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">372</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter a valid mobile number</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">373</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mobile phone number should have maximum of 20 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">374</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Domain does not exist</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">105</td>\r\n\t\t\t<td style=\"width: 178px;\">105</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Email already exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">111</td>\r\n\t\t\t<td style=\"width: 178px;\">111</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mention organisation in case of self registered domain&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">187</td>\r\n\t\t\t<td style=\"width: 178px;\">187</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mention organisation in case of exceptional domain&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">115</td>\r\n\t\t\t<td style=\"width: 178px;\">115</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Org id is not in the proper format&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">112</td>\r\n\t\t\t<td style=\"width: 178px;\">112</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Organisation does not exist</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">106</td>\r\n\t\t\t<td style=\"width: 178px;\">106</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Domain exist in other organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">114</td>\r\n\t\t\t<td style=\"width: 178px;\">114</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Entered Address Id is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">308</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Social link name not found in system.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">375</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">376</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link value is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">377</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum characters for social link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">378</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter the name for the custom link</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">379</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The custom link value required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">380</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Max characters for custom link name must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">381</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Max characters for custom link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">382</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link name required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">383</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Message link name not found in system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">384</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link value required&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">385</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Max characters for message link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">386</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">408</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">409</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The custom link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">410</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65685'>https://dev.highq.com/jira/browse/COL-65685</a></b></p>",
        "operationId": "createUser",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "OK [userid,firstname,lastname,link]",
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          },
          "400": {
            "description": "",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user status",
        "description": "<p>Activate a user within Collaborate\r\nThis API call is used to activate/inactive/anonymise a user within the system. The user identifier is the user ID of the user.<br>This API call is also used to unlock (users who are locked), invite or resetpassword<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User ID is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The status of following anonymised user(s) cannot be changed.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">325</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User ID&nbsp;is not in the proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>This given action is invalid. Please use unlock,invite or resetpassword</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">367</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users are not active in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">395</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62810'>https://dev.highq.com/jira/browse/COL-62810</a></b></p>",
        "operationId": "activateUsers",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "status",
            "in": "query",
            "description": "update status Inactive, Active, Anonymise",
            "required": false,
            "type": "string",
            "enum": ["Inactive", "Active", "Anonymise"]
          },
          {
            "name": "action",
            "in": "query",
            "description": "user action unlock,invite,resetpassword",
            "required": false,
            "type": "string",
            "enum": ["unlock", "invite", "resetpassword"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UsersDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/users/experiences/{expid}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user experience",
        "description": "<p>This API call is used to get an experience object in the system.\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(102, 153, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The experience id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">326</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in the proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given userid is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">342</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The experience id is not associated with the given user id</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">343</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66710'>https://dev.highq.com/jira/browse/COL-66710</a></b></p>",
        "operationId": "getUserExperience",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "expid",
            "in": "path",
            "description": "The ID of the experience to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "ID of the user whose experience you are updating",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/experience" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user experience",
        "description": "<p>This API call is used to change a experience.\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>User id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td>113</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The given userid is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td>342</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The experience id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td>326</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The experience id is not associated with the given user id</p>\r\n\t\t\t</td>\r\n\t\t\t<td>343</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The company name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>328</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The job title is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>329</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The Experience From month field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>330</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The Experience From year field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>331</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The Experience To month field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>332</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The Experience To year field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td>333</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The information in the Experience From month field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td>335</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The information in the Experience To month field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td>336</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>Please enter a year between 1900 and the current year as your start date</p>\r\n\t\t\t</td>\r\n\t\t\t<td>337</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>Please enter a year between 1900 and the current year as your end date</p>\r\n\t\t\t</td>\r\n\t\t\t<td>338</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The information in the Experience from year field is not formatted correctly</p>\r\n\t\t\t</td>\r\n\t\t\t<td>339</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The information in the Experience To year field is not formatted correctly</p>\r\n\t\t\t</td>\r\n\t\t\t<td>340</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>The information in the Currently working value field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td>341</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66712'>https://dev.highq.com/jira/browse/COL-66712</a></b></p>",
        "operationId": "updateUserExperience",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "expid",
            "in": "path",
            "description": "The experience id to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "The ID of the user whose experience is to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/experience" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user experience",
        "description": "<p>This API call is used to delete an experience.\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The experience id is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">326</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in the proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given userid is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">342</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The experience id is not associated with the given user id</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">343</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66713'>https://dev.highq.com/jira/browse/COL-66713</a></b></p>",
        "operationId": "deleteUserExperience",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "expid",
            "in": "path",
            "description": "The ID of the experience to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "ID of the user whose experience is to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/systemAdminUserList": {
      "get": {
        "tags": ["User"],
        "summary": "Get System Admin list",
        "description": "<p>Get a list of System Admin users\r\n<br>This API call is used to retrieve a list of Sytem admin users except those user whose domain is exception domain or highq.com.\r\n<p>Below is the response for this API.</p> \r\n<p>&lt;users&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;user&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;email&gt;jasmin.bhatti@highqsolutions.com&lt;/email&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/user&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;user&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;email&gt;hardik.patel@highqsolutions.com&lt;/email&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/user&gt;\n<br/>&lt;/users&gt;</p></p>",
        "operationId": "getSolutionTemplateSystemAdminList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/users" }
          }
        }
      }
    },
    "/{version}/users/sharesettings": {
      "get": {
        "tags": ["User"],
        "operationId": "getMyFileShareSettings",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/users/activities": {
      "get": {
        "tags": ["User"],
        "summary": "Get User Activities",
        "description": "Get User Activities API<br>There are three key activity areas in Collaborate. \r\n1. Dashboard activity\r\n2. Site Activity\r\n3. User Activity<br><br>The purpose of this API method is to provide the user activity. The user activity API has been separated from the activity API, due to multiple reasons listed below: <br>- The user activity should include activity from MySite which does not exist in Dashboard activity and hence in Activity API<br>- The user activity includes personal actions like viewing documents, which can flood the dashboard activity feed<br>- The folder views do not need to be included in the activity stream, however creation of folder should be included in the user activity stream.<br>- When the document is download from the server using the API, a download audit should be recorded for that activity<br>- Once the document is download and is cached on the client, any view action should be recorded as an additional activity, and should be posted to the server. ( e.g on iOS device, if the local cache of the document does not send a download call on each click in the activity stream, then we should register it as a view option on each view on the iOS device )<br>- The activity should have the site filter to get user activity specific to a site<br>- The activity API should have a content filter to filter the activity based on a specific content.<br><br> <b>Technical Considerations:</b><br>- The download and view activity of documents is not displayed in the desktop activity, however we need to display it for the mobile interface, which means we need to treat it differently.<br>- The activity stream needs to include MySites activity.<br><br>The Activities are: \r\n- Add \r\n- Update ( Add version)\r\n- View\r\n- Download\r\n- File saved from Microsoft Office\r\n- File opened in Microsoft Office",
        "operationId": "getUserSpecificActivity",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "site",
            "in": "query",
            "description": "- Site \r\n<br>e.g. /users/activities?site=<siteid>\r\nIf site id is provided , the parameter for sitescope is ignored, sitescope parameter is only considered when no site id is given. \r\n \r\n- Predefined grouping of sites\r\n<br> e.g./user/activities?sitescope={all / memberoff /favourite}  (The all parameter only applies to a user who is a system admin)",
            "required": false,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "The type of content to filter by.<br><br>Default is Files, however you can filter by all content types available in the activitiy stream like\r\ne.g. /users/activities?contenttype=files\r\n- Files",
            "required": false,
            "type": "string",
            "default": "files"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of items to return. Default is 20 (Max is 100 , Activity to a maximum of 3 months can be provided)",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastactivityid",
            "in": "query",
            "description": "The no of last activity fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sitescope",
            "in": "query",
            "description": "Predefined grouping of sites\r\n<br> e.g./user/activities?sitescope={all / memberoff /favourite}  (The all parameter only applies to a user who is a system admin)",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "startdate and enddate both parameters should be passed when we want search based on the date parameters. Otherwise both parameters are optional.\nThis param is supported from API version 11 and above.\n\nDate format should be dd MMM yyyy (UTC) - eg. 01 Jun 2020",
            "required": false,
            "type": "string"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "startdate and enddate both parameters should be passed when we want search based on the date parameters. Otherwise both parameters are optional.\nThis param is supported from API version 11 and above.\n\nDate format should be dd MMM yyyy (UTC) - eg. 01 Jun 2020",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "User activities returned successfully",
            "schema": { "$ref": "#/definitions/Activities" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting user activities"
          }
        }
      }
    },
    "/{version}/users/domains/{domainID}": {
      "put": {
        "tags": ["User"],
        "summary": "Move bulk users to another domain",
        "description": "<p>Move an existing domain from one organisation to another within Collaborate\r\nThis API call is used to move a domain to a new organisation object in the system. This in turn will move all users who have an email address associated with that domain to the new organisation.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given domain ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">263</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User ID&nbsp;is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User ID&nbsp;is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Moving the selected users to &#39;bidder&#39; will turn the users into bidders. Delete the following files and retry this operation.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">334</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given action cannot be performed on anonymised user(s).</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">325</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The specified organisation does not exist</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">100</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The organisation ID does not match with the domain ID</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">411</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation ID&nbsp;is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">322</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The Organisation ID&nbsp;is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">260</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-75419'>https://dev.highq.com/jira/browse/COL-75419</a></b></p>",
        "operationId": "moveUsersToNewDomain",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UserIDListDBO" }
          },
          {
            "name": "domainID",
            "in": "path",
            "description": "The domain ID to be moved",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgid",
            "in": "query",
            "description": "organisation id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/users/userprofile/specialities": {
      "get": {
        "tags": ["User"],
        "operationId": "getUserprofileSpecialities",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "search input",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of specialities to be returned in one request",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "integer value for the last specality fetched",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/users/experiences": {
      "get": {
        "tags": ["User"],
        "summary": "User experience list",
        "description": "<p>This API call is used to get list of experience.\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User id is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system:</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given action cannot be performed on the anonymised user(s).</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">325</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66714'>https://dev.highq.com/jira/browse/COL-66714</a></b></p>",
        "operationId": "getUserExperienceList",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "The ID of the user whose experience is to be listed",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/experiences" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Add user experience",
        "description": "<p>This API call is used to add a new experience object in the system.\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 1058px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"width: 144px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"width: 136px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>User id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">113</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The given userid is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">342</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The company name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">328</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The job title is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">329</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The Experience From month field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">330</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The Experience From year field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">331</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The Experience To month field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">332</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The Experience To year field is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">333</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The information in the Experience From month field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">335</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The information in the Experience To month field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">336</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>Please enter a year between 1900 and the current year as your start date</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">337</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>Please enter a year between 1900 and the current year as your end date</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">338</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The information in the Experience from year field is not formatted correctly</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">339</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The information in the Experience To year field is not formatted correctly</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">340</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 772px;\">\r\n\t\t\t<p>The information in the Currently working value field is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 144px;\">341</td>\r\n\t\t\t<td style=\"width: 136px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66711'>https://dev.highq.com/jira/browse/COL-66711</a></b></p>",
        "operationId": "addUserExperience",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/experience" }
          },
          {
            "name": "userid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK [id,link included in response. others are not.]",
            "schema": { "$ref": "#/definitions/experience" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/sayHello": {
      "get": {
        "tags": ["User"],
        "operationId": "sayHello",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/{version}/users/{userid}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user",
        "description": "<p>Get a user from Collaborate</p>\r\n<p>This API call is used to retrieve a user from the system.</p>\r\n<p><strong>Note:</strong></p>\r\n<p>1. The following fields have been introduced in this version</p>\r\n<p>emaildomain, org, invitationsent, createdby, createddate, modifiedby, modifieddate, ifpartner, lastlogindate, invalidlogins, externalid, publicwebsiteprofileid, systemuser, resetpassworddate, usertypeid, avatar, practicegroup, langcode, publicprofile, dateOfBirth<br />\r\n2.&nbsp;&nbsp;The &quot;location&quot; tag has been renamed to &quot;address&quot; tag to make it consistent with the Collaborate UI&nbsp;</p>\r\n<p>The response will now display the address as&nbsp;</p>\r\n<p>&lt;address&gt;<br />\r\n&lt;addressid&gt;1&lt;/addressid&gt;<br />\r\n&lt;addressline1&gt;2nd floor&lt;/addressline1&gt;<br />\r\n&lt;addressline2&gt;additional&lt;/addressline2&gt;<br />\r\n&lt;city&gt;london&lt;/city&gt;<br />\r\n&lt;state&gt;state&lt;/state&gt;<br />\r\n&lt;country&gt;uk&lt;/country&gt;<br />\r\n&lt;postCode&gt;EC4R&lt;/postCode&gt;<br />\r\n&lt;/address&gt;<br />\r\n<br />\r\nInstead of</p>\r\n<p><br />\r\n&lt;location&gt;<br />\r\n&lt;addressline1&gt;2nd floor, 55 King William Street&lt;/addressline1&gt;<br />\r\n&lt;addressline2&gt;additional&lt;/addressline2&gt;<br />\r\n&lt;addressline3&gt;state&lt;/addressline3&gt;<br />\r\n&lt;city&gt;London&lt;/city&gt;<br />\r\n&lt;country&gt;United Kingdom&lt;/country&gt;<br />\r\n&lt;postcode&gt;EC4R 9AD&lt;/postcode&gt;<br />\r\n&lt;/location&gt;<br />\r\n<br />\r\n3. If the user is a basic user, the value of \"role\" attiribute will be \"basic user\".<br />\r\n4. \"encryptedUserId\" field has been added from 14 version.</p>\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User does not exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65605'>https://dev.highq.com/jira/browse/COL-65605</a></b></p>",
        "operationId": "getUser_1",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID or email of the user to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "id or email",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },

      "put": {
        "tags": ["User"],
        "summary": "Update User",
        "description": "<p>This API call is used to update an existing user in the system.Note:<br>1. The following fields have been introduced in the response body emaildomain, org, invitationsent, createdby, createddate, modifiedby, modifieddate, ifpartner, lastlogindate, invalidlogins, externalid, publicwebsiteprofileid, systemuser, resetpassworddate, usertypeid, avatar, practicegroup, langcode, publicprofile, dateOfBirth<br>2. Address tag is available from API version 4\r\n&#60;address&#62;<br>&#60;addressid&#62;1&#60;/addressid&#62;<br>&#60;/address&#62;<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User ID&nbsp;is not in proper format&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>113</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User does not exist&nbsp;in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Update user is not applicable in the case of a self registered user</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">188</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<p>188</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Email address is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">101</td>\r\n\t\t\t<td style=\"width: 178px;\">101</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Invalid email address</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>First name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Max characters allowed for first name must be between 1 to 100</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">102</td>\r\n\t\t\t<td style=\"width: 178px;\">352</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The secretary&#39;s email address is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">104</td>\r\n\t\t\t<td style=\"width: 178px;\">353</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Status must be active or inactive</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">116</td>\r\n\t\t\t<td style=\"width: 178px;\">116</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered department cannot be more than 256 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">354</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered ifpartner attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">355</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered systemuser attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">356</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered usertypeid attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">357</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered langcode attribute is invalid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">358</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The entered sourcetype attribute is invalid. Valid values are System, Active directory or System default&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">359</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid phone number&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">360</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid phone number in format {countrycode}&nbsp; ${areacode}${number}.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">361</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid mobile number in format {countrycode}${number}.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">362</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid office phone country code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">363</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The office phone country code can have a maximum of 4 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">364</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid office phone area code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">365</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The office phone area code can have a maximum of 5 Digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">366</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Office phone number should have Maximum 15 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">368</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter a valid mobile phone country code</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">369</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The mobile phone country code can have a maximum of 4 Digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">372</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please enter valid mobile number</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">373</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mobile phone number should have Maximum 20 digits</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">374</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Domain does not exist</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">105</td>\r\n\t\t\t<td style=\"width: 178px;\">105</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Email already exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">111</td>\r\n\t\t\t<td style=\"width: 178px;\">111</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mention organisation in the case of an exceptional domain&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">115</td>\r\n\t\t\t<td style=\"width: 178px;\">115</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Org ID&nbsp;is not in proper format&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">112</td>\r\n\t\t\t<td style=\"width: 178px;\">112</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Organisation does not exist</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">106</td>\r\n\t\t\t<td style=\"width: 178px;\">106</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Domain exists in other organisation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">114</td>\r\n\t\t\t<td style=\"width: 178px;\">114</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Entered Address ID is not valid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">308</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Social link name not found in system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">375</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">376</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link value is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">377</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum&nbsp;characters for social link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">378</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Enter the name for the custom link</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">379</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The custom link value is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">380</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum characters for custom link name must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">381</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum characters for custom link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">382</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link name is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">383</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Message link name not found in system.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">384</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link value is required&nbsp;&nbsp;&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">385</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Maximum characters for message link value must be between 1 to 500</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">386</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The social link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">408</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The message link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">409</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The custom link is disabled</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">410</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-65687'>https://dev.highq.com/jira/browse/COL-65687</a></b></p>",
        "operationId": "updateUser",
        "consumes": ["text/plain", "application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IntegrationUserDBO" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Archive User",
        "description": "<p>This API call is used to archive a user within the system.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (before V4)</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code (V4)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A User ID&nbsp;is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User ID&nbsp;is not in the proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The User&#39;s ID&nbsp;length cannot exceeds 50 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">N/A</td>\r\n\t\t\t<td style=\"width: 178px;\">304</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-67441'>https://dev.highq.com/jira/browse/COL-67441</a></b></p>",
        "operationId": "deleteUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/admin/impersonate": {
      "get": {
        "tags": ["User"],
        "operationId": "generateAccessTokenForAdminImpersonation",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "userid",
            "in": "query",
            "description": "userid of the user",
            "required": false,
            "type": "string"
          },
          {
            "name": "useremail",
            "in": "query",
            "description": "user email",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/users/{userid}/roles": {
      "get": {
        "tags": ["User"],
        "summary": "Get User System Roles",
        "description": "<p>Get User System Roles</p>\r\n<p>This API call is used to retrieve a user system level role from the system along with an autologin url if this has been configured at system level and user level </p>\r\n\n<p><strong>Note:</strong></p>\r\n<p>Following is the response for this API</p>\r\n<br><p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;SYSTEM_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;System Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Internal User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;CREATE_SITE&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Create Site&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;AUTO_LOGIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Auto Login&lt;/name&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url&gt;https://URL-LINK&lt;/url&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><p>From version 12 onwards, a new user role called \"Basic user\" is supported for internal users and  \"Allow user to bypass XSS protection\" is supported for internal and external users in this API.</p>\r\n<br><p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;BASIC_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Basic User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;ALLOW_USER_TO_BYPASS_XSS_PROTECTION&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Allow user to bypass XSS protection&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><p>From version 14 onwards, a new user role called \"Allow user to manage Contract Express system groups\" is supported for internal users in this API. For roleOptionType user can allow INTERNAL_EXTERNAL_USER or INTERNAL_USER.</p>\r\n<br><p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;ALLOW_USER_TO_MANAGE_CONTRACT_EXPRESS_SYSTEM_GROUPS&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Allow user to manage Contract Express system groups&lt;/name&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;roleOptionType&gt;INTERNAL_USER&lt;/roleOptionType&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><br />\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User does not exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "getUserRoles",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user to retrieve the user roles",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Roles" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update User System Roles",
        "description": "<p>Update User Roles</p>\r\n<p>This API call is used to update a user's system level role. </p>\r\n\n<p>The new updated user role will be included in the response.</p>\r\n<p>For example: if we parse a system admin role in the request body, the response will include the system admin role along with the internal-user role as the system admin role is a higher level. </p>\r\n<br><br />\r\n<p>Below is the sample request body to update internal user</p>\r\n<br><p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;SYSTEM_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;System Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Internal User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;CREATE_SITE&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Create Site&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><br />\r\n<p>Below is the sample request body to update external user</p>\r\n<br><p>&lt;roles&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_ADMIN&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External Admin&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;role&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;alias&gt;EXTERNAL_USER&lt;/alias&gt;\n<br/>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;External User&lt;/name&gt;\n<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&lt;/role&gt;\n<br/>&lt;/roles&gt;</p><br /><br /><p>From version 12 onwards, a new user role called \"Basic user\" will be supported in this API. All internal users are allowed to apply basic user role but This user will lose their all permissions from the site. The user will be moved from its organisation group to a basic organisation group. Only those user are removed from sites who are added in sites via system group. Same rules apply for converting basic user to internal user Below is the request body to update the basic user role for internal users.</p><p><pre>&lt;roles&gt;\n\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;BASIC_USER&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Basic User&lt;/name&gt;\r\n\t\t\t&lt;/role&gt;\r\n\t\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Internal User&lt;/name&gt;\r\n\t\t&lt;/role&gt;\r\n&lt;/roles&gt;\n</pre></p><p>From version 12 onwards, a new user role called \"Allow user to bypass XSS protection\" will be supported in this API. Below is the request body to update Allow user to bypass XSS protection role for internal and external users.</p><p><pre>&lt;roles&gt;\n\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;ALLOW_USER_TO_BYPASS_XSS_PROTECTION&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Allow user to bypass XSS protection&lt;/name&gt;\r\n\t\t\t&lt;/role&gt;\r\n&lt;/roles&gt</pre></p><p><p>From version 14 onwards, a new user role called \"Allow user to manage Contract Express system groups\" will be supported in this API. Below is the request body to update for internal users. For roleOptionType user can allow INTERNAL_EXTERNAL_USER or INTERNAL_USER.</p><p><pre>&lt;roles&gt;\n\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;INTERNAL_USER&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Internal User&lt;/name&gt;\r\n\t\t\t&lt;/role&gt;\r\n\t\t\t&lt;role&gt;\r\n\t\t\t&lt;alias&gt;ALLOW_USER_TO_MANAGE_CONTRACT_EXPRESS_SYSTEM_GROUPS&lt;/alias&gt;\r\n\t\t\t&lt;name&gt;Allow user to manage Contract Express system groups&lt;/name&gt;\r\n\t\t\t&lt;roleOptionType&gt;INTERNAL_USER&lt;/roleOptionType&gt;\r\n\t\t&lt;/role&gt;\r\n&lt;/roles&gt;\n</pre></p>We can also removes all the roles by providing below request bodyXML Request body<br />&lt;roles&gt;\n<br/>&lt;/roles&gt;\n<br/><br/><br/>JSON Request body<br />{}<br/><br/><b>Note :</b>In this PUT request we are not doing anything about url tag so in request as well as response body please ignore url tag</p><br />\r\n<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>Ref Code</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User does not exists in the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User id is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>You do not have access to change the role for this ASP user</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">462</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>External roles cannot be applied to an internal user</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">463</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Internal roles cannot be applied to an external user</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">464</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Please provide a valid request body</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">465</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Other than internal user role can not be applied to basic user role</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">466</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "updateUserRoles",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "The ID of the user to update the user roles",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Roles" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Roles" }
          },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/users/{userid}/avatar": {
      "get": {
        "tags": ["User"],
        "summary": "Get user avatar",
        "description": "<p>This is an API method to get the user avatar. <br><b>Response</b><br>The API response is a multipart stream of data. If the avatar has not been uploaded then a place holder default system avatar is returned. In the case of an error, an error object is returned with the appropriate error message. </p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-62788'>https://dev.highq.com/jira/browse/COL-62788</a></b></p>",
        "operationId": "getUserAvatar",
        "produces": [
          "application/octet-stream",
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "id parameter is the User id of the user, whose avatar is to be obtained. ",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of the avatar.Following are supported <br> ",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [16, 32, 48, 64, 96, 128, 256, 512, 330]
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string",
            "default": "1"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Avatar was returned successfully " },
          "400": {
            "description": "Problem with parsing XML or JSON object (Bad Request)"
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden " },
          "404": { "description": "Avatar does not exist in the system" },
          "405": {
            "description": "Method not allowed (calling API with the wrong method) "
          },
          "500": {
            "description": "Internal error occurred",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Add User profile image(Avatar)",
        "description": "<p>Add a profile image for a user in Publisher<br>This API call is used to add a new profile image(avatar)<br><b>Note:</b><br>1. Following form-data parameters are optional: avatarXPosition, avatarYPosition,avatarWidth, avatarHeight<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\"><span class=\"ckInlineContent\" id=\"wikiContentID\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><span class=\"ckInlineContent\" id=\"wikiContentID\"><strong>Ref Code (V5)</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Please enter valid numbers</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">396</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>The file was not found</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">397</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Upload an image which has a size greater than 0</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">406</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>The image type you are trying to upload is not supported</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">398</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Due to a system error, this {0} cannot be uploaded</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">399</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>This file is unsupported, the file upload has been terminated</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">400</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>This image is too small. Ensure the shortest side is at least 256 pixels long.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">401</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Please enter valid x position or width. The sum of x position and width should not exceed the actual width of an image.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">402</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Please enter valid y position or height. The sum of y position and height should not exceed the actual height of an image.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">403</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Image height and width must be same.&nbsp;Only a square image can be uploaded for a user avatar.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">404</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\">\r\n\t\t\t<p>Error occurred while transferring data to repository or updating database</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\">405</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66662'>https://dev.highq.com/jira/browse/COL-66662</a></b></p>",
        "operationId": "addUserAvtar",
        "consumes": ["multipart/form-data"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "ID of user ",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          },
          {
            "name": "avatarXPosition",
            "in": "formData",
            "description": "x position of image",
            "required": false,
            "type": "string"
          },
          {
            "name": "avatarYPosition",
            "in": "formData",
            "description": "y position of image",
            "required": false,
            "type": "string"
          },
          {
            "name": "avatarWidth",
            "in": "formData",
            "description": "width of image",
            "required": false,
            "type": "string"
          },
          {
            "name": "avatarHeight",
            "in": "formData",
            "description": "height of image",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete User profile image",
        "description": "<p>Delete a profile image for a user<br>This API call is used to delete a profile image.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 675px;\"><strong>Summary</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (V4)</strong></td>\r\n\t\t\t<td style=\"background-color: rgb(255, 255, 255); width: 178px;\"><strong>Ref Code (before V4)</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The following users do not exist within the system</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The given action cannot be performed on anonymised user(s).</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">325</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>User ID&nbsp;is not in proper format</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t\t<td style=\"width: 178px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p><p><br><b>JIRA Ticket : <a href='https://dev.highq.com/jira/browse/COL-66663'>https://dev.highq.com/jira/browse/COL-66663</a></b></p>",
        "operationId": "deleteUserAvtar",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "5"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "4xx Fail transaction(Client Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "5xx Fail transaction(Server Side)",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/users/mentions": {
      "get": {
        "tags": ["User"],
        "summary": "Mentions API",
        "description": "Method to obtain a list of users for the Mentions flow in a Microblog (post), Comment and Message \r\n<br>Sample request format for different operation<br>1. While Adding/Sharing a microblog (post)<br>scope = microblog<br>sharewith = ORG_1,SITE_10,SITE_102,SYSTEM_GROUP_1,GROUP_1 (optional)\r\n<br>2. While adding / editing a comment on microblog<br>scope = comment<br>contentype = microblog<br>contentid = {microblog id}\r\n<br>3. While Sending a new message / reply<br>scope = message",
        "operationId": "getUsersForMention",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "6"
          },
          {
            "name": "scope",
            "in": "query",
            "description": "comment/microblog/message",
            "required": true,
            "type": "string"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Files/Wiki/Blog/Tasks/Events/Microblogs",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "content's ID. If a comment is being added/edited on a wiki then use the wiki's id",
            "required": true,
            "type": "string"
          },
          {
            "name": "sharewith",
            "in": "query",
            "description": "In case of posting a Microblog use the example ORG_1,SITE_10,SITE_23,SYSTEM_GROUP_1,GROUP_1",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Text that will be searched against user's details",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport to get groups in listing.",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The integer value of the last user list fetched",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of users to return in one request",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": {
            "description": "Users or Groups returned successfully",
            "schema": { "$ref": "#/definitions/users" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting users"
          }
        }
      }
    },
    "/{version}/approvals/sites/{siteid}/documentstatus": {
      "post": {
        "tags": ["Approval Workflow APIs"],
        "summary": "Associate Approval",
        "description": "<p>This API is used to get associate approval based on siteid, documentid, templateid and status.<br><br><strong>Note :</strong><br><br>The value of status parameter behaves as following<br>- if status = 1 then awaiting approval and this is the default value<br>- if status = 2 then approved<br>- if status = 3 then rejected</p>",
        "operationId": "associateApproval",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "string",
            "default": "1",
            "enum": ["1", "2", "3"]
          },
          {
            "name": "documentid",
            "in": "query",
            "description": "document id",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateid",
            "in": "query",
            "description": "template id",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestorid",
            "in": "query",
            "description": "This is an optional parameter, only used by HighQ internal services, please do not provide any value in this parameter as the API token user will be used for the approval request.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/approvals/sites/{siteid}/templates": {
      "get": {
        "tags": ["Approval Workflow APIs"],
        "summary": "Get Approval Workflow Templates",
        "description": "<p>This API is used to get approval workflow template details based on siteid.<br><br><strong>Note :</strong><br><br>The value of limit parameter behaves as following<br>- limit =25 is the default value<br>- if limit>0 then (number of items returned is equal to limit)<br>- if limit=-1 then return all records<br>- if limit <-1 then the system returns the default no of items i.e 25<br><br>The value of Offset parameter behaves as under<br>- (Default) offset =0<br>- if offset > 0 then the records are returned from the offset value<br>- if offset < 0 then offset value of 0 is set</p>",
        "operationId": "getApprovalWorkflows",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "This is the order of the items returned. Possible values are \"asc\" , \"desc\" , Default is desc, which means that the latest items are returned first.",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "can be one of name, createdby, lastmodified",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point for each record returned",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request. Default value is 25",
            "required": false,
            "type": "string",
            "default": "25"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ApprovalWorkflowResponseDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": {
            "description": "Internal error",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          }
        }
      }
    },
    "/{version}/blog/{siteid}/draft": {
      "delete": {
        "tags": ["Blog API"],
        "summary": "delete blog draft",
        "description": "Method is used for delete blog draft.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "deleteWikiDraft",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "the site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "draftid_csv",
            "in": "query",
            "description": "the draft id csv<br><br>comma saparated blog draft id <b>i.e. 1,2,3</b> to delete multiple drafts.<br> <b>ALL</b> to delete all drafts.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Blog Draft Deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting blog draft"
          }
        }
      }
    },
    "/{version}/blog/{siteid}/{blogid}": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get blog details",
        "description": "Method to obtain Get blog details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getBlog",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "blogid",
            "in": "path",
            "description": "blog id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "blog details returned successfully",
            "schema": { "$ref": "#/definitions/BlogResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching blog details"
          }
        }
      },
      "put": {
        "tags": ["Blog API"],
        "summary": "Update Blog",
        "description": "Method to update existing blog.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "updateBlog",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "blogid",
            "in": "path",
            "description": "blog id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "add blog request parameter \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>blogtitle</td><td>String</td><td> title of the blog</td></tr><tr><td>blogcontent</td><td>String</td><td> content of the blog i.e. <strong> &lt;![CDATA[ &lt;p&gt; blog content &lt;/p&gt; ]]> </strong> </td></tr><tr><td>tags</td><td>String</td><td> comma saparated tag value i.e. <b> tag1,tag2,tag3</b></td></tr><tr><td>categories</td><td>String</td><td> comma saparated category id i.e. <b> 1,2,3</b></td></tr><tr><td>publishstatus</td><td>Integer</td><td> status of blog <br><strong>1</strong> = publish<br><strong>0</strong> = draft <br><br><strong>Note : default value for publishstatus is 1</strong></td></td></tr><tr><td>notificationid</td><td>Integer</td><td>user notification preference. <br><strong>1</strong> = respect user email preferences <br> <strong>2</strong> = send immediate email to all users. <br><strong>3</strong> = suppress all email notifications. <br><strong>4</strong> = suppress all notifications and activity <br><br><strong>Note : default value for notification is 1</strong></td></tr><tr><td>attachments</td><td>String</td><td> comma saparated attachment id i.e. <b>i.e. 1,2,3</b>  </td></tr><tr><td>showcomment</td><td>Integer</td><td> comments are allowed for blog or not <br><strong>1</strong> = to enable show comments. <br> <strong>0</strong> = to disable show comments. <br><br> If &lt;showComment&gt; tag contains no values,system will treat it like 0.<br><br><strong>Note : default value for showcomment is 1</strong></td></tr><tr><td>publisdhedby</td><td>Integer</td><td>It represents the blog author, for null value,it will consider the login user as blog author. <br><br><strong>Note : login user as content admin is allowed to change the blog author</strong> </td></tr><tr><td>publishdate</td><td>String</td><td>It is published date for the blog. for null value, blog will update automatically. for scheduled post, use date format <strong>dd MMM yyyy HH:mm</strong> i.e. 20 Jan 2020 15:20</td></tr></tbody></table><br>Note*:There is no support of uploading header image while updating blog.",
            "required": true,
            "schema": { "$ref": "#/definitions/BlogRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "blog updated successfully",
            "schema": { "$ref": "#/definitions/BlogResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while updating blog"
          }
        }
      },
      "delete": {
        "tags": ["Blog API"],
        "summary": "To Delete blog post",
        "description": "Method to delete blog post.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "deleteBlog",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "blogid",
            "in": "path",
            "description": "blog id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "blog is deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting blog"
          }
        }
      }
    },
    "/{version}/blog/{siteid}/drafts": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get list of blog drafts",
        "description": "Method is used to get list of blog drafts.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getBlogDraftList",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting integer value of the item to be fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items return in one request. Default is 100  and and there is no maximum limit <br><br>If a value of 0 provided in the request then 100 items will be returned If a value of -1 provided in the request then All items will be returnedand if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "search text",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><tr><td>All (Default)</td></tr><tr><td>AUTOSAVED</td></tr><tr><td>DRAFT</td></tr></table>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "sort order \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><tr><td>0</td><td>Ascending Order</td></tr><tr><td>1</td><td>Desending Order</td></tr></table>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "sort Type \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><td>TITLE</td><td>title</td></tr><tr><td>LASTSAVED</td><td>last modified date</td></tr><tr><td>STATUS</td><td>draft type</td></tr></table><br>Note: For sortytpe as blank, sorting will be done based on blog title in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Blog drafts list is fetched successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching blog drafts"
          }
        }
      }
    },
    "/{version}/blog/{siteid}": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get list of blog",
        "description": "Method to obtain list of blog details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getAllBlog",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryid",
            "in": "query",
            "description": "blog category id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteids",
            "in": "query",
            "description": "multiple site id<br>For all the site in which user have access, pass the ALL as parameter value.<br><br> <b>Note:</b> When this parameter is give at that time siteid of path param will not be considered. And siteid path param will not be validated but it should be passed with any value as it is required field in previous api version. This will be supported from version 13 and above. When this parameter is given (with multiple site ids) at that time categoryid will not be considered.",
            "required": false,
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "description": "period like ALL, LAST_WEEK, LAST_MONTH <br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "month",
            "in": "query",
            "description": "month",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "year",
            "in": "query",
            "description": "year",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "multiple tags <br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The strting integer value of the item to be fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items return in one request. Default is 10  and and there is no maximum limit <br><br>If a value of 0 provided in the request then 10 items will be returned If a value of -1 provided in the request then All items will be returnedand if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "blog list is fetched successfully",
            "schema": { "$ref": "#/definitions/BlogsResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching blog list"
          }
        }
      },
      "post": {
        "tags": ["Blog API"],
        "summary": "Insert Blog",
        "description": "Method to add new blog.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "insertBlog",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "add blog request parameter \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>blogtitle</td><td>String</td><td> title of the blog</td></tr><tr><td>blogcontent</td><td>String</td><td> content of the blog i.e. <strong> &lt;![CDATA[ &lt;p&gt; blog content &lt;/p&gt; ]]> </strong> </td></tr><tr><td>tags</td><td>String</td><td> comma saparated tag value i.e. <b> tag1,tag2,tag3</b></td></tr><tr><td>categories</td><td>String</td><td> comma saparated category id i.e. <b> 1,2,3</b></td></tr><tr><td>publishstatus</td><td>Integer</td><td> status of blog <br><strong>1</strong> = publish<br><strong>0</strong> = draft <br><br><strong>Note : default value for publishstatus is 1</strong></td></td></tr><tr><td>notificationid</td><td>Integer</td><td>user notification preference. <br><strong>1</strong> = respect user email preferences <br> <strong>2</strong> = send immediate email to all users. <br><strong>3</strong> = suppress all email notifications. <br><strong>4</strong> = suppress all notifications and activity <br><br><strong>Note : default value for notification is 1</strong></td></tr><tr><td>attachments</td><td>String</td><td> comma saparated attachment id i.e. <b>i.e. 1,2,3</b>  </td></tr><tr><td>showcomment</td><td>Integer</td><td> comments are allowed for blog or not <br><strong>1</strong> = to enable show comments. <br> <strong>0</strong> = to disable show comments. <br><br> If &lt;showComment&gt; tag contains no values,system will treat it like 0.<br><br><strong>Note : default value for showcomment is 1</strong></td></tr><tr><td>publishedby</td><td>Integer</td><td>It represents the blog author, for null value,it will consider the login user as blog author. <br><br><strong>Note : login user as content admin is allowed to change the blog author</strong> </td></tr><tr><td>publishdate</td><td>String</td><td>It is published date for the blog. for null value, blog will update automatically. for scheduled post, use date format <strong>dd MMM yyyy HH:mm</strong> i.e. 20 Jan 2020 15:20</td></tr></tbody></table><br>Note*:There is no support of uploading header image while inserting blog.",
            "required": true,
            "schema": { "$ref": "#/definitions/BlogRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "blog added successfully",
            "schema": { "$ref": "#/definitions/BlogResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occurred adding blog" }
        }
      }
    },
    "/{version}/blog/{siteid}/category": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get all category",
        "description": "Method to obtain all blog category.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getBlogCategory",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "blog category is returned successfully",
            "schema": { "$ref": "#/definitions/GriffinCategories" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching blog category"
          }
        }
      }
    },
    "/{version}/blog/{siteid}/schedule": {
      "get": {
        "tags": ["Blog API"],
        "summary": "Get list of schedule blog",
        "description": "Method to obtain list of scheduled blog details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getScheduledBlogPostInfo",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The strting integer value of the item to be fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items return in one request. Default is 100  and and there is no maximum limit <br><br>If a value of 0 provided in the request then 100 items will be returned If a value of -1 provided in the request then All items will be returnedand if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "sort order \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><tr><td>0</td><td>Ascending Order</td></tr><tr><td>1</td><td>Desending Order</td></tr></table>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "sort Type \r\n<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\"><tbody><td>AUTHOR</td><td>author</td></tr><tr><td>LASTUPDATED</td><td>lastUpdated</td></tr><tr><td>SCHEDULEDDATE</td><td>scheduledDate</td></tr><tr><td>TITLE</td><td>title</td></tr></table>",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "scheduled blog list is fetched successfully",
            "schema": { "$ref": "#/definitions/BlogsResponseDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching scheduled blog list"
          }
        }
      }
    },
    "/{version}/events": {
      "get": {
        "tags": ["Events APIs"],
        "summary": "Get All Events",
        "description": "Method to obtain Get All events.<br><br>This method is supported in version 13 of the API and above",
        "operationId": "getEvents",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteidcsv",
            "in": "query",
            "description": "multiple site id with comma separated value i.e. 1,2,3 <br> passing <b>ALL</b> as parameter value will consider only sites which user has access.<br><br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "categorycsv",
            "in": "query",
            "description": "category csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "authoridcsv",
            "in": "query",
            "description": "author id csv",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags",
            "required": false,
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "description": "period",
            "required": false,
            "type": "string",
            "default": "PERIOD_TYPE_ALL_UPCOMING",
            "enum": [
              "PERIOD_TYPE_ALL_UPCOMING",
              "PERIOD_TYPE_TODAY",
              "PERIOD_TYPE_THIS_WEEK",
              "PERIOD_TYPE_NEXT_7_DAYS",
              "PERIOD_TYPE_NEXT_30_DAYS",
              "PERIOD_TYPE_LAST_30_DAYS",
              "PERIOD_TYPE_LAST_90_DAYS",
              "PERIOD_TYPE_LAST_180_DAYS",
              "PERIOD_TYPE_LAST_YEAR"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "order by",
            "required": false,
            "type": "string",
            "default": "START_DATE",
            "enum": ["START_DATE", "END_DATE", "PUBLISHED_DATE"]
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "order type",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "string",
            "default": "15"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "string",
            "default": "0"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "events returned successfully",
            "schema": { "$ref": "#/definitions/Events" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching events"
          }
        }
      }
    },
    "/{version}/favourites": {
      "get": {
        "tags": ["Favourites API"],
        "summary": "Get Favourites List",
        "description": "Method to obtain favourite items.<br><br>This method is supported in version 4 of the API and above",
        "operationId": "getAllFavourites",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content type<br>e.g. /api/3/favourites?contenttype=files\r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Site\r\n- iSheet\r\n- Folder\r\n- SiteHome \r\n- Sitetemplate",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupsupport",
            "in": "query",
            "description": "groupsupport flag for share with group",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The integer value of the last Favorite item fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of Favorite items to return in one request. Default is 20  and and there is no maximum limit <br><br>If a value of 0 or less is provided in the request then 20 Favorite items will be returned and if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Favorite items returned successfully",
            "schema": { "$ref": "#/definitions/FavoriteContents" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while returning Favorite items"
          }
        }
      },
      "put": {
        "tags": ["Favourites API"],
        "summary": "Favourite Items - Add to favourites / Remove from favourites",
        "description": "Add to favourites / Remove from favourites API <br><br>Note: For Q&A foldertype user will get access denied as they can not update Q&A file favourite.",
        "operationId": "updateFavourite",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "4"
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Content type<br>e.g. /api/3/favourites?contenttype=files\r\n- Microblogs\r\n- Files\r\n- Wiki\r\n- Blog\r\n- Tasks\r\n- Events\r\n- Site\r\n- iSheet\r\n- Folder\r\n- SiteHome\r\n- Sitetemplate",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentid",
            "in": "query",
            "description": "This the content id of the required content. \r\n<br>e.g. blogid for contenttype=blog, taskid for contenttype=tasks",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "favourite",
            "in": "query",
            "description": "0 : Remove from favourites\r\n<br>1 : Add to favourites",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "foldertype",
            "in": "query",
            "description": "the foldertype=qa for Q&A file support from version 5",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Favourite operation performed successfully",
            "schema": { "$ref": "#/definitions/ConversationsDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while performing favourite operation"
          }
        }
      }
    },
    "/{version}/files/docauto/{docautoengineid}/generatedocument/singlerecord/{templateid}": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "To download the documents from single-record iSheet",
        "description": "<p>This API call is used to download the documents from single-record iSheet.</p><p>Use the progress key to check the status</p>",
        "operationId": "generateCEDocument",
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "docautoengineid",
            "in": "path",
            "description": "This is an identity number for the Document Automation engine. We only support Contract Express as the Document Automation engine at this point and the value for it is 1",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "templateid",
            "in": "path",
            "description": "This is the id of the CE template",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "This is the id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetrecordid",
            "in": "query",
            "description": "This is the id of the iSheet record",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetid",
            "in": "query",
            "description": "This is the id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/files/cebulkdocsgeneration": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Generate bulk documents from contract express templates and isheet items",
        "description": "<p>This API call is used to generate the documents from contract express templates and isheet items.</p><p>Use the progress key to check the status</p>",
        "operationId": "bulkDocsGeneration",
        "consumes": ["application/json", "application/xml", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "This is the id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetid",
            "in": "query",
            "description": "This is the id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CeBulkDocGenerationRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/folderstructure": {
      "post": {
        "tags": ["Document Resource APIs"],
        "summary": "Add folder structure",
        "description": "<p>This api will allow you to create folder structure into site.",
        "operationId": "insertFolderStructure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "parentfolderid",
            "in": "query",
            "description": "ID of the parent folder in which want to add folder",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "<pre>[\n  {\n    \"name\": \"Root\",\n    \"folders\": [\n      {\n        \"name\": \"Folder1\",\n        \"folders\": [\n          {\n            \"name\": \"Folder1.1\",\n            \"folders\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Folder2\",\n        \"folders\": []\n      }\n    ]\n  },\n  {\n    \"name\": \"Root2\",\n    \"folders\": []\n  }\n]</pre>",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "This key is returned when a long-running operation is called and can be used to find the final status of the operation",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/largefileshare/share": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get Shared List",
        "description": "<p>This API is to get share  file/folder list of site/myfiles  share content <br><br><strong>Note :</strong><br><br>- <strong>siteid</strong>: {the site/mysite id to get shared items}</p>",
        "operationId": "getShareListOfLargeFileShare",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "siteid of {site/mysite}",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of items to returned",
            "required": false,
            "type": "string",
            "default": "25"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point of the returned items. This should be the item ID.",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "This is the order of the items returned. Possible values are \"Asc\" , \"desc\" , Default is Desc, which means that the latest items are returned first.",
            "required": false,
            "type": "string",
            "default": "Desc"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "can be one of name,shared,",
            "required": false,
            "type": "string",
            "default": "shared"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/SharedDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/largefileshare/receive": {
      "get": {
        "tags": ["Document Resource APIs"],
        "summary": "Get Received List",
        "description": "<p>This API is to get receive  file/folder list of site/myfiles  received content <br><br><strong>Note :</strong><br><br>- <strong>siteid</strong>: {the site/mysite id to get received items}</p>",
        "operationId": "getReceiveListOfLargeFileShare",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "siteid of {site/mysite}",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No of items to returned",
            "required": false,
            "type": "string",
            "default": "25"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point of the returned items. This should be the item ID.",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "This is the order of the items returned. Possible values are \"Asc\" , \"desc\" , Default is Desc, which means that the latest items are returned first.",
            "required": false,
            "type": "string",
            "default": "Desc"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "can be one of name, owner,received, expires",
            "required": false,
            "type": "string",
            "default": "received"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response successfully",
            "schema": { "$ref": "#/definitions/ReceivedDBO" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Validation failed/ Forbidden" },
          "405": {
            "description": "Method not allowed (calling api with wrong method)"
          },
          "500": { "description": "Internal error occured" }
        }
      }
    },
    "/{version}/isheets/admin/isheetstatus": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get ISheet Status List",
        "description": "<p>Isheet Status List</p>",
        "operationId": "getISheetStatusList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the ISheet Status list",
            "schema": { "$ref": "#/definitions/ISheetStatusListDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/updateOtherChoiceItem/{siteid}/{sheetId}": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To Update Other Choice Column Type to noraml Choice",
        "description": "<p>Update Other Choice Column Type to noraml Choice</p>",
        "operationId": "updateOtherChoiceColumn",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "siteID of Isheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetID to get Sheet detail",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/isheettype": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To get ISheet Type List",
        "description": "<p>Isheet Type List</p>",
        "operationId": "getISheetTypeList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "Id of the iSheet site for which the iSheets are to be obtained",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the ISheet Status list",
            "schema": { "$ref": "#/definitions/ISheetTypeDBO" }
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheets/admin/activeIsheet": {
      "get": {
        "tags": ["ISheet Admin API"],
        "summary": "To active Isheet",
        "description": "<p>Active Isheet</p>",
        "operationId": "activeIsheet",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the API",
            "required": true,
            "type": "string",
            "default": "8"
          },
          {
            "name": "sheetId",
            "in": "query",
            "description": "sheetID which will get active",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status for Isheet",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "query",
            "description": "siteID of Isheet",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "The API will return the 200 response code without any message"
          },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "There is a problem with the parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/search": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "iSheet advanced search",
        "description": "<p>This API call is used for iSheet advanced search.</p>",
        "operationId": "sheetItemSearch",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "3"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to show per request",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset allows us to specify which row to start from retrieving data",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetItemSearchDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Will return a dynamic XML/JSON Object. i.e. JSON - { \"totalRecords\": {taotalCount} } Or XML - <totalRecords>{taotalCount}</totalRecords>"
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/externalIdsBySheetId": {
      "get": {
        "tags": ["ISheet Module"],
        "summary": "To get external ids of the iSheet",
        "description": "<p>This API gives the external ids of iSheets.It will return maximun 1000 external ids in single call.The external ids are the id of the iSheet records added to the system by an earlier API call. <br>The client application can use these external ids to match the ids with the external system and perform operations.</p><br><p>If no external ids were added to the system when the records were added to the system, or the records were added through the Collaborate then no external ids will be returned for this call.</p><br>",
        "operationId": "getExternalIdsBySheetId",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "sheetid",
            "in": "query",
            "description": "Id of the iSheet for which the external Id's details are to be obtained",
            "required": true,
            "type": "string"
          },
          {
            "name": "startPos",
            "in": "query",
            "description": "Starting row index of iSheet Item",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of external ids",
            "schema": { "$ref": "#/definitions/isheetItemsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/{isheetid}/items/count": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "iSheet item count",
        "description": "<p>This API call is used to get total record count of iSheet.</p>",
        "operationId": "sheetItemCount",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "isheetid",
            "in": "path",
            "description": "Id of the iSheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetviewid",
            "in": "query",
            "description": "Id of the iSheet view",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/isheetItemSearchDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return total record count of isheet along with isheetid.",
            "schema": { "$ref": "#/definitions/isheetItemCountDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/items/insertUpdateItems": {
      "post": {
        "tags": ["ISheet Module"],
        "summary": "To insert/update isheet records with minimum content admin role",
        "description": "<p>This API is used to insert/update items based on externalID/itemID passed. Use either externalID or itemID attributes not both against a single item<br>sequence attribute mapping in head tag against a column should match against item tag inside data tag to insert / update values correctly for item</p><br><p>If externalID already exists in system against an isheet this API will update the record</p><br>",
        "operationId": "insertUpdateItems",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/sheetDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the progressive key object",
            "schema": { "$ref": "#/definitions/ProgressiveKeyDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/system/templatesheetsforsite": {
      "get": {
        "tags": ["ISheet System Admin"],
        "summary": "To get the list of iSheets created using a specific iSheet template",
        "description": "<p>This API call is used to get a list of iSheets created using a specific iSheet template.</p><p>Request : Method Type : Get, Request URL: <i> /isheet/system/templatesheetsforsite/{templateid} </i></p><p>Parameters</p><br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Parameter Name</th><th scope=\"col\">Value</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>templateid</td><td>Int</td><td> The id of the template which was used to create the specific iSheets.</td></tr></tbody></table><br><b>Response XML</b><br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?&gt;<br>&emsp;\t&lt;site&gt;<br>&emsp;&emsp;\t\t&lt;siteid&gt;1&lt;/siteid&gt;<br>&emsp;&emsp;\t\t&lt;sitename&gt;Test site&lt;/sitename&gt;<br>&emsp;&emsp;\t\t&lt;template&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;templateid&gt;1&lt;/templateid&gt;<br>&emsp;&emsp;&emsp;\t\t\t&lt;templatelinkid&gt;1&lt;/templatelinkid&gt;<br>&emsp;&emsp;\t\t&lt;/template&gt;<br>&emsp;\t&lt;/site&gt;<br></code>",
        "operationId": "getSiteWiseTemplateIsheetsByTemplateId",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "templateid",
            "in": "query",
            "description": "The id of the template which was used to create the specific iSheets",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "API will return the iSheets." },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed/ Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/isheet/system/getSheetsByTemplateId": {
      "get": {
        "tags": ["ISheet System Admin"],
        "summary": "To get the list of iSheets created using a specific iSheet template",
        "description": "<p>This method is used to get the list of iSheets created using a specific iSheet template</p>",
        "operationId": "getTemplateIsheetsByTemplateId",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "templateid",
            "in": "query",
            "description": "The id of the template which was used to create the specific iSheets",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of template isheets",
            "schema": { "$ref": "#/definitions/templateIsheetsDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": {
            "description": "Internal server error while fetching template isheets by template id"
          }
        }
      }
    },
    "/{version}/isheet/system/linkedIsheetTemplates": {
      "get": {
        "tags": ["ISheet System Admin"],
        "summary": "To get the list of linked isheet templates",
        "description": "<p>This API is used to get the list of linked isheet templates</p><br><p><b>Note:</b> Only the linked isheet having import synchronize data check templates are returned through this call.</p>",
        "operationId": "getLinkedIsheetTemplates",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "Version of the api",
            "required": true,
            "type": "string",
            "default": "12"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "API will return the list of linked isheet templates",
            "schema": { "$ref": "#/definitions/templateListDBO" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": {
            "description": "Internal server error while fetching linked isheet templates"
          }
        }
      }
    },
    "/{version}/sendmatterrequest": {
      "put": {
        "tags": ["Legal Tracker Integration Resource"],
        "summary": "To send matter request id and update to isheet",
        "description": "<p>This API call is used to update matter request id on isheet.</p><p>Use the progress key to check the status</p>",
        "operationId": "sendMatterIntakeRequest",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": [
          "application/xml",
          "application/json",
          "text/xml",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "This is the version of the API",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "updatedby",
            "in": "query",
            "description": "This is the id of the user",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteid",
            "in": "query",
            "description": "This is the id of the site",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isheetid",
            "in": "query",
            "description": "This is the id of the isheet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "itemid",
            "in": "query",
            "description": "This is the id of the isheet item",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Success message.",
            "schema": { "type": "string" }
          },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "405": {
            "description": "Method not allowed (calling API endpoint with the wrong method)"
          },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/notification": {
      "get": {
        "tags": ["Notification API"],
        "summary": "Get Notifications",
        "description": "API to fetch notifications.<br><br>Api is supported from version 11 and above<br><br> Following notificationtypealias are allowed.<ul>           <li>NEWTASK_ASSIGNED</li>\t\t\t<li>COMMENT_ON_MYCONTENT</li>\t\t\t<li>COMMENT_ON_ICOMMENTED</li>\t\t\t<li>EDIT_CONTENT_IHAVEAUTHORED</li>\t\t\t<li>EDIT_CONTENT_IHAVEEDITED</li>\t\t\t<li>EDIT_OR_COMMENT_TASKIHAVEASSIGNED</li>\t\t\t<li>EDIT_OR_COMMENT_CONTENTIHAVEFAVOURITED</li>\t\t\t<li>LIKE_CONTENT_IHAVEAUTHORED</li>\t\t\t<li>LIKE_CONTENT_IHAVELIKED</li>\t\t\t<li>MENTIONS_ON</li>\t\t\t<li>START_FOLLOWINGME</li>\t\t\t<li>SEND_PRIVATEMESSAGE</li>\t\t\t<li>ISHEET_COMMENT_ON_MYCONTENT</li>\t\t\t<li>ISHEET_COMMENT_ON_ICOMMENTED</li></ul><br> Following types are allowed :<br><ul>           <li>Online</li>\t\t\t<li>Push</li>        </ul>",
        "operationId": "getNotifications",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "notificationtypealias",
            "in": "query",
            "description": "above notificationtypealias are valid",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset is optional. offset is start from 0. Default value is 0.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is optional. Max limit value is 100. Default limit value is 25.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of notification",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "search notification",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "User notifications returned successfully",
            "schema": { "$ref": "#/definitions/Notifications" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while returning user notification"
          }
        }
      },
      "put": {
        "tags": ["Notification API"],
        "summary": "Read notification",
        "description": "Method to Read Notification.<br><br> This method is supported in version 11 of the API and above<br><br> Pass notificationid, when want to update read status of specific notification.<br><br> Notificationid -1 is to update read status of all the notifications of the user",
        "operationId": "readNotification",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "notificationid",
            "in": "query",
            "description": "Notification id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Read notification successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while read user notification"
          }
        }
      }
    },
    "/{version}/notification/settings": {
      "get": {
        "tags": ["Notification API"],
        "summary": "Get User Notification Settings",
        "description": "Method to obtain user notification settings.<br><br>This method is supported in version 10 of the API and above",
        "operationId": "getNotificationSettings",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "User notification settings returned successfully",
            "schema": { "$ref": "#/definitions/NotificationSettings" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while returning user notification settings"
          }
        }
      },
      "put": {
        "tags": ["Notification API"],
        "summary": "Updates Notification Settings",
        "description": "<p>This API call is used to change the  Notification settings in the system.<br><br><b>Details for Title and type and the values</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><strong>Title</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>Type</strong></td>\r\n\t\t\t<td style=\"width: 178px;\"><strong>values for email, push and online</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Assign a new task to me</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">NEWTASK_ASSIGNED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Comments on content authored by me</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">COMMENT_ON_MYCONTENT</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Comments on something I have commented on.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">COMMENT_ON_ICOMMENTED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Edits content I have authored.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">EDIT_CONTENT_IHAVEAUTHORED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Edits content I have edited.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">EDIT_CONTENT_IHAVEEDITED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Edits or comments on a task assigned to me.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">EDIT_OR_COMMENT_TASKIHAVEASSIGNED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Edits or comments on something I have favourited.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">EDIT_OR_COMMENT_CONTENTIHAVEFAVOURITED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Likes content authored by me.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">LIKE_CONTENT_IHAVEAUTHORED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Likes content I liked.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">LIKE_CONTENT_IHAVELIKED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Mentions me.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">MENTIONS_ON</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Starts following me.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">START_FOLLOWINGME</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>Sends me a private message.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">SEND_PRIVATEMESSAGE</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>iSheet Comments on content created by me.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">ISHEET_COMMENT_ON_MYCONTENT</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>iSheet Comments on something I have commented on.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">ISHEET_COMMENT_ON_ICOMMENTED</td>\r\n\t\t\t<td style=\"width: 178px;\">1=enable ,0 = disable</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>",
        "operationId": "updateNotificationSettings",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/NotificationSettings" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "notificationSettings updated successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while updating notification setting"
          }
        }
      }
    },
    "/{version}/notification/filter": {
      "get": {
        "tags": ["Notification API"],
        "summary": "Get Notification filters",
        "description": "API to fetch notification filters<br><br>Following types are allowed :<br><ul>           <li> Online</li>\t\t\t<li> Push</li></ul>",
        "operationId": "getNotificationFilters",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of notification",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": " notifcation filters  returned successfully",
            "schema": { "$ref": "#/definitions/NotificationFiltersDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while returning user notification filters"
          }
        }
      }
    },
    "/{version}/notification/devicetoken/{device_token}": {
      "delete": {
        "tags": ["Notification API"],
        "summary": "deletes device token",
        "description": "Method to delete device token.<br><br>This method is supported in version 11 of the API and above",
        "operationId": "deleteDeviceToken",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "name": "device_token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "devicetoken deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting notification token"
          }
        }
      }
    },
    "/{version}/two-factor-auth/approval": {
      "post": {
        "tags": ["Notification API"],
        "operationId": "sendTwoFactorAuthApproval",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "totp",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "approvalStatus",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/two-factor-auth/pair-device": {
      "post": {
        "tags": ["Notification API"],
        "operationId": "pairDevice",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/TwoFactorPairDevice" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/{version}/notification/devicetoken": {
      "post": {
        "tags": ["Notification API"],
        "summary": "Adds the device token",
        "description": "<p>This API call is used to add the  devicetoken in the system.<br><br><b>Details for values of Application name  and Device type</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 450px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 65px;\"><strong><b>param</strong></b></td>\r\n\t\t\t<td style=\"width: 65px;\"><strong><b>value</strong></b></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 65px;\">\r\n\t\t\t<p>applicationname</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 65px;\">\r\n\t\t\t<p> HIGHQ_NOW, HIGHQ_DRIVE</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 65px;\">\r\n\t\t\t<p>devicetype</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 65px;\">\r\n\t\t\t<p>ANDROID, IOS, WINDOWS, MAC</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>",
        "operationId": "addDeviceToken",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "11"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/Devicetoken" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "devicetoken added successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred adding device token"
          }
        }
      }
    },
    "/{version}/sites/people": {
      "get": {
        "tags": ["People API"],
        "summary": "Get people details",
        "description": "Method to obtain Get people details.<br><br>This method is supported in version 13 of the API and above",
        "operationId": "getPeople",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "siteids",
            "in": "query",
            "description": "multiple site id with comma separated value i.e. 1,2,3 <br> deafult value is <b>ALL</b>. parameter value <b>ALL</b> will consider only sites which user has access.<br><br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "filter people based on name",
            "required": false,
            "type": "string"
          },
          {
            "name": "organisationid",
            "in": "query",
            "description": "organisation id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "group id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "the starting integer value of the item to be fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of items return in one request. default is 100 and there is no maximum limit <br><br>if a value of 0 provided in the request then, 100 items will be returned, if a value of -1 is provided in the request, then all items will be returned and if a value of greater than 0 is provided then items equal to the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "sort order \r\n0 = Ascending Order, 1 = Descending Order",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ordertype",
            "in": "query",
            "description": "sort Type \r\nNAME = name, \r\n ORGANISATION = organisation,<br>Note: For sortType as blank, sorting will be done based on organisation in ascending order.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "people details returned successfully",
            "schema": { "$ref": "#/definitions/PeopleDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching people details"
          }
        }
      }
    },
    "/{version}/search/parameters": {
      "get": {
        "tags": ["Search API"],
        "summary": "Get Search Parameters.",
        "description": "Method to obtain Search Parameter details.<br><br>This method is supported in version 12 of the API and above <br><strong>Restricted site data will not included in search results.</strong>",
        "operationId": "getParameters",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Search parameters get successfully.",
            "schema": { "$ref": "#/definitions/SearchParameterDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": {
            "description": "Internal error occurred while fetching search parameters."
          }
        }
      }
    },
    "/{version}/search": {
      "post": {
        "tags": ["Search API"],
        "summary": "Get Search Result.",
        "description": "Method to Get Search Result from multiple instances.<br><strong>Restricted site data will not included in search results.</strong>",
        "operationId": "search",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "in": "body",
            "name": "body",
            "description": "<table cellpadding=\"1\" cellspacing=\"1\" border=\"1\">   <thead>      <tr>         <th scope=\"col\">Name</th>         <th scope=\"col\">Type</th>         <th scope=\"col\">Description</th>     </tr>   </thead>   <tbody>      <tr>         <td>searchTerm</td>         <td>String</td>         <td>Search text <b>(e.g. term1 term2)</b> or Boolean Query <b>(e.g. term1 AND term2 NOT term3).</b> <br/> Also searching into title of content is possible through parameter by passing <b>title:</b> before search text (e.g. <b>title:test</b> it will search all content having test keyword in title of the content). </td>      </tr>      <tr>         <td>contentTypes</td>         <td>List</td>         <td>List of content type to be filtered for search <b>(e.g. [\"folder\",\"documents\",\"blog\",\"page\",\"module\"...])</b>.</td>      </tr>      <tr>         <td>fileTypes</td>         <td>List</td>         <td>List of file types to be search. <b>(e.g. [\"xlsx\",\"pdf\",...])</b></td>      </tr>\t  <tr>         <td>filterInstances</td>         <td>List</td>         <td><b>List of Instances from which search needs to support.</b>\t\t     <table cellpadding=\"1\" cellspacing=\"1\" border=\"1\">\t\t\t\t<tbody>\t\t\t\t\t<tr>\t\t\t\t\t <td>instanceName</td>\t\t\t\t\t <td>String</td>\t\t\t\t\t <td>Name of the instance.</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>instanceType</td>\t\t\t\t\t <td>String</td>\t\t\t\t\t <td>Type of the instance. <b>(e.g. Collaborate/Publisher)</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>instanceBaseURL</td>\t\t\t\t\t <td>String</td>\t\t\t\t\t <td>Base URL of the instance.</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>authors</td>\t\t\t\t\t <td>List</td>\t\t\t\t\t <td>List of author ids of contents to be filter. <b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>siteIds</td>\t\t\t\t\t <td>List</td>\t\t\t\t\t <td>List of site ids of contents to be filter. <b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>clientNumbers</td>\t\t\t\t\t <td>List</td>\t\t\t\t\t <td>List of client numbers passed, only those response will come which belongs to sites in which one of the provided Client Numbers is tagged.</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t <td>matterNumbers</td>\t\t\t\t\t <td>List</td>\t\t\t\t\t <td>If List of matter numbers passed then only those response will come which belongs to sites in which one of the provided Matter Numbers is tagged.</td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td>taxonomyIds</td>\t\t\t\t\t\t<td>List</td>\t\t\t\t\t\t<td>List of taxonomy ids of filtering publisher content.<b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td>channelIds</td>\t\t\t\t\t\t<td>List</td>\t\t\t\t\t\t<td>List of channel ids of filtering publisher content.<b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td>browseChannelIds</td>\t\t\t\t\t\t<td>List</td>\t\t\t\t\t\t<td>List of browseChannel ids of filtering publisher content.<b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td>excludeChannelIds</td>\t\t\t\t\t\t<td>List</td>\t\t\t\t\t\t<td>List of channel ids to be exclude from search result of publisher instance.<b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t<tr>\t\t\t\t\t\t<td>publicChannelIds</td>\t\t\t\t\t\t<td>List</td>\t\t\t\t\t\t<td>List of publicChannel ids to be filter from search result of publisher instance.<b>(e.g. [11,12,13,14,15...])</b></td>\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\t</tbody>\t\t\t </table>\t\t </td>      </tr>\t        <tr>         <td>tags</td>         <td>List</td>         <td>List of tag values. <b> (e.g. [\"tag1\",\"tag2\",\"tag3\"]) </b></td>      </tr>      <tr>         <td>fromDate</td>         <td>String</td>         <td>Start create date range <strong>(e.g. 01 Apr 2012). If Not passed default will be the date before 1 Month.</strong>.</td>      </tr>      <tr>         <td>toDate</td>         <td>String</td>         <td>End create date range <strong>(e.g. 30 Apr 2012)</strong>. If Not Passed default will be today's date.</td>      </tr>      <tr>         <td>startIndex</td>         <td>Integer</td>         <td>Start index of the searched content list (for paging).</td>      </tr>      <tr>         <td>rowCount</td>         <td>Integer</td>         <td>Number of records to be searched(for paging).</td>      </tr>      <tr>         <td>booleanOperation</td>         <td>String</td>         <td>Boolean operation to be applied when more then one word is passed in 'searchTerm' parameter. If not passed default will be Instance specific configuration will be considered.</td>      </tr>      <tr>         <td>returnTotalResult</td>         <td>Boolean</td>         <td>whether to return total result in response <b>(e.g. true/false)</b>.</td>      </tr>      <tr>         <td>timeZone</td>         <td>String</td>         <td>Valid timezone <strong>(e.g. \"Canada/Mountain\")</strong>, in which date required in response.</td>      </tr>      <tr>         <td>dateFormat</td>         <td>String</td>         <td>Valid date format <strong>(e.g. \"dd MMM yyyy hh:mm:ss\")</strong>, in which date required in response.</td>      </tr>   </tbody></table>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnifiedSearchRequestParameterDBO"
            }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Response format could be <strong>vary to metadatatype</strong>. Please try running api using different metadatatypes and see response.",
            "schema": { "$ref": "#/definitions/SearchAPIResponse" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching search result."
          }
        }
      }
    },
    "/{version}/search/metadata/{metadataTypes}": {
      "get": {
        "tags": ["Search API"],
        "summary": "Get Search Metadata. [e.g. fileType, authors, site etc..]",
        "description": "Method to Get Metadata.<br>",
        "operationId": "getMetadata",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "metadataTypes",
            "in": "path",
            "description": "Type of metadata requested.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "startIndex",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "rowCount",
            "in": "query",
            "description": "rowCount",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "searchText",
            "required": false,
            "type": "string"
          },
          {
            "name": "cacheKey",
            "in": "query",
            "description": "Search cache key returned by search api. <br/>",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Search Metadata Received Successfully.",
            "examples": { "": { "result": { "id": "black" } } }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching search metadata."
          }
        }
      }
    },
    "/{version}/search/metadatatype": {
      "get": {
        "tags": ["Search API"],
        "summary": "Get Metadata Types.",
        "description": "Method to obtain Search Metadata types details.<br><br>This method is supported in version 12 of the API and above.<br>You can pass any of these metadatatypes to <strong>search/metadata/{metadatatype}</strong> api with cache key returned by search api.<br><strong>Restricted site data will not included in search results.</strong>",
        "operationId": "getMetaDataTypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "metadata types get successfully.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": {
            "description": "Internal error occurred while fetching search metadata types"
          }
        }
      }
    },
    "/{version}/tags": {
      "get": {
        "tags": ["Tag API"],
        "summary": "Get Tag List",
        "description": "<p>This API can be used to obtain a collection of tag items. The tags will be returned on the basis of search tag text .</p>\r\n",
        "operationId": "getTagList",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "13"
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "Search Tag Text, Searching param will give result only and only using starts with and not the contains word or character",
            "required": false,
            "type": "string"
          },
          {
            "name": "siteids",
            "in": "query",
            "description": "Multiple site id CSV  <br> <b>Note:</b> This will be supported from version 14 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period param is ALL, LAST_WEEK, LAST_MONTH, LAST_YEAR <br> <b>Note:</b> This will be supported from version 14 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "module",
            "in": "query",
            "description": "Module param are Files, Wiki, Blog, Tasks, Events. Multiple module is supported. <br> <b>Note:</b> This will be supported from version 14 and above.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Tags returned successfully",
            "schema": { "$ref": "#/definitions/Tags" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting tag list"
          }
        }
      }
    },
    "/{version}/tasks/templates/items/{templateitemid}": {
      "delete": {
        "tags": ["Task Template API"],
        "summary": "delete task and list from task template",
        "description": "Method to delete task or list from task template<br><br>This method is supported in version 13 of the API and above",
        "operationId": "deleteItemFromTaskTemplate",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "templateitemid",
            "in": "path",
            "description": "template itemid",
            "required": true,
            "type": "string"
          },
          {
            "name": "mattermapitemid",
            "in": "query",
            "description": "matter map itemid",
            "required": false,
            "type": "string"
          },
          {
            "name": "mattermaptemplateid",
            "in": "query",
            "description": "matter map task template id",
            "required": false,
            "type": "string"
          },
          {
            "name": "itemtype",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["task", "list"]
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task/list deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting task/list from task template"
          }
        }
      }
    },
    "/{version}/tasks/templates/{tasktemplateid}": {
      "put": {
        "tags": ["Task Template API"],
        "summary": "update task template",
        "description": "Method to update task template.<br><br>This method is supported in version 13 of the API and above",
        "operationId": "updateTaskTemplate",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "tasktemplateid",
            "in": "path",
            "description": "task template id",
            "required": true,
            "type": "string"
          },
          {
            "name": "mattermaptemplateid",
            "in": "query",
            "description": "matter map template id",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "update task template request parameters \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td> id of tasktemplate</td></tr><tr><td>templatename</td><td>String</td><td> task template name</td></tr><tr><td>description</td><td>String</td><td> description of the tasktemplate i.e. <strong> &lt;![CDATA[ &lt;p&gt; tasktemplate description &lt;/p&gt; ]]> </strong> </td></tr><tr><td>status</td><td>Integer</td><td> status of task template i.e. <br><strong>1</strong> = active<br><strong>0</strong> = draft <br><br><strong>Note : default value for templatestatus is 0</strong></td></tr><tr><td>mattermaptemplateid</td><td>String</td><td> mattermapid of tasktemplate id i.e. <b> IB42C9D9C64CB494B9746E789A1EB6F98</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>contributor</td><td>String</td><td> contributer name (Only applicable to Practical Law integration)</td></tr><tr><td>jurisdictionaame</td><td>String</td><td> jurisdiction name (Only applicable to Practical Law integration)</td></tr><tr><td>jurisdictionalias</td><td>String</td><td> alias of jurisdiction (Only applicable to Practical Law integration)</td></tr><tr><td>practicename</td><td>String</td><td> comma separated practice areas (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;List&gt;</b></td><td></td><td></td></tr><tr><td>id</td><td>Integer</td><td> id of tasklist</td></tr><tr><td>index</td><td>String</td><td> index of tasklist i.e. <b>1.1, 1.2</b></td></tr><tr><td>title</td><td>String</td><td> title of tasklist.</td></tr><tr><td>mattermaplistid</td><td>String</td><td> mattermap id of tasklist i.e. <b> H-Concept_32060b39-2aa1-11b2-8035-907b96c116d8</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>type</td><td>String</td><td> type of tasklist i.e. </br><b>LIST</b></br><b>SUB-LIST</b></td></tr><tr><td>resource</td><td>String</td><td> resource of task (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;Task&gt;</b></td><td></td><td></td></tr><tr><td>index</td><td>String</td><td> index of task i.e. <b>1.1.1, 1.2.1</b></td></tr><tr><td>parenttaskid</td><td>Integer</td><td> parenttaskid of task.</td></tr><tr><td>taskid</td><td>Integer</td><td> id of task.</td></tr><tr><td>title</td><td>String</td><td> title of task.</td></tr><tr><td>description</td><td>String</td><td> description of task.</td></tr><tr><td>duedate</td><td>String</td><td> duedate of task i.e. <b>01 JAN 1900</b> (<i>DD MMM YYYY</i>)</td></tr><tr><td>startdate</td><td>String</td><td> startdate of task i.e. <b>01 JAN 1900</b> (<i>DD MMM YYYY</i>)</td></tr><tr><td>mattermaptaskid</td><td>String</td><td> mattermap id of task i.e. <b> Concept_3205df8d-2aa1-11b2-8035-907b96c116d8</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>type</td><td>String</td><td> type of task i.e. </br><b>TASK</b></br><b>SUB-TASK</b></td></tr><tr><td>dependenton</td><td>String</td><td> dependenton of task i.e. <b>startdate</b></td></tr><tr><td>daysfromdependent</td><td>String</td><td> daysfromdependent of task i.e. <b>2</b></td></tr><tr><td>ignoreweekend</td><td>String</td><td> ignoreweekend of task i.e. </br><b>0</b>=false</br><b>1</b>=true</td></tr><tr><td>duration</td><td>String</td><td> duration of task i.e. <b>2</b></td></tr><tr><td>resource</td><td>String</td><td> resource of task (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;Assignee&gt;</b></td><td></td><td></td></tr><tr><td>assigneeid</td><td>Integer</td><td> id of task assignee.</td></tr><tr><td>assigneename</td><td>String</td><td> name of task assignee.</td></tr><tr><td><b>&lt;Priority&gt;</b></td><td></td><td></td></tr><tr><td>priorityid</td><td>Integer</td><td> priority id of task.</td></tr><tr><td>priorityname</td><td>String</td><td> priority name of task i.e. </br><b>Low</b></br><b>Normal</b></br><b>High</b></td></td></tr><tr><td><b>&lt;Status&gt;</b></td><td></td><td></td></tr><tr><td>statusid</td><td>Integer</td><td> status id of task.</td></tr><tr><td>statusname</td><td>String</td><td> status name of task i.e. </br><b>Not started</b></br><b>In progress</b></br><b>Complete</b></td></tr><tr><td>ishighq</td><td>Integer</td><td> decides to show matter map in HighQ or not i.e. </br><b>0</b>=false</br><b>1</b>=true</td></tr></tbody></table><br>",
            "required": true,
            "schema": { "$ref": "#/definitions/TaskTemplateRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task template updated successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while updating task template"
          }
        }
      },
      "delete": {
        "tags": ["Task Template API"],
        "summary": "delete task template",
        "description": "Method to delete task template.<br><br>This method is supported in version 13 of the API and above",
        "operationId": "deleteTaskTemplate",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "tasktemplateid",
            "in": "path",
            "description": "task template id",
            "required": true,
            "type": "string"
          },
          {
            "name": "mattermaptemplateid",
            "in": "query",
            "description": "matter map template id",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task template deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting task template"
          }
        }
      }
    },
    "/{version}/tasks/templates": {
      "post": {
        "tags": ["Task Template API"],
        "summary": "create task template",
        "description": "Method to create task template.<br><br>This method is supported in version 13 of the API and above",
        "operationId": "createTaskTemplate",
        "consumes": [
          "application/xml",
          "application/json",
          "multipart/form-data"
        ],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "in": "body",
            "name": "body",
            "description": "create task template request parameters \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td> id of tasktemplate</td></tr><tr><td>templatename</td><td>String</td><td> task template name</td></tr><tr><td>description</td><td>String</td><td> description of the tasktemplate i.e. <strong> &lt;![CDATA[ &lt;p&gt; tasktemplate description &lt;/p&gt; ]]> </strong> </td></tr><tr><td>status</td><td>Integer</td><td> status of task template i.e. <br><strong>1</strong> = active<br><strong>0</strong> = draft <br><br><strong>Note : default value for templatestatus is 0</strong></td></tr><tr><td>mattermaptemplateid</td><td>String</td><td> mattermapid of tasktemplate id i.e. <b> IB42C9D9C64CB494B9746E789A1EB6F98</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>contributor</td><td>String</td><td> contributer name (Only applicable to Practical Law integration)</td></tr><tr><td>jurisdictionaame</td><td>String</td><td> jurisdiction name (Only applicable to Practical Law integration)</td></tr><tr><td>jurisdictionalias</td><td>String</td><td> alias of jurisdiction (Only applicable to Practical Law integration)</td></tr><tr><td>practicename</td><td>String</td><td> comma separated practice areas (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;List&gt;</b></td><td></td><td></td></tr><tr><td>id</td><td>Integer</td><td> id of tasklist</td></tr><tr><td>index</td><td>String</td><td> index of tasklist i.e. <b>1.1, 1.2</b></td></tr><tr><td>title</td><td>String</td><td> title of tasklist.</td></tr><tr><td>mattermaplistid</td><td>String</td><td> mattermap id of tasklist i.e. <b> H-Concept_32060b39-2aa1-11b2-8035-907b96c116d8</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>type</td><td>String</td><td> type of tasklist i.e. </br><b>LIST</b></br><b>SUB-LIST</b></td></tr><tr><td>resource</td><td>String</td><td> resource of task (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;Task&gt;</b></td><td></td><td></td></tr><tr><td>index</td><td>String</td><td> index of task i.e. <b>1.1.1, 1.2.1</b></td></tr><tr><td>parenttaskid</td><td>Integer</td><td> parenttaskid of task.</td></tr><tr><td>taskid</td><td>Integer</td><td> id of task.</td></tr><tr><td>title</td><td>String</td><td> title of task.</td></tr><tr><td>description</td><td>String</td><td> description of task.</td></tr><tr><td>duedate</td><td>String</td><td> duedate of task i.e. <b>01 JAN 1900</b> (<i>DD MMM YYYY</i>)</td></tr><tr><td>startdate</td><td>String</td><td> startdate of task i.e. <b>01 JAN 1900</b> (<i>DD MMM YYYY</i>)</td></tr><tr><td>mattermaptaskid</td><td>String</td><td> mattermap id of task i.e. <b> Concept_3205df8d-2aa1-11b2-8035-907b96c116d8</b><br>(Only applicable to Practical Law integration)</td></tr><tr><td>type</td><td>String</td><td> type of task i.e. </br><b>TASK</b></br><b>SUB-TASK</b></td></tr><tr><td>dependenton</td><td>String</td><td> dependenton of task i.e. <b>startdate</b></td></tr><tr><td>daysfromdependent</td><td>String</td><td> daysfromdependent of task i.e. <b>2</b></td></tr><tr><td>ignoreweekend</td><td>String</td><td> ignoreweekend of task i.e. </br><b>0</b>=false</br><b>1</b>=true</td></tr><tr><td>duration</td><td>String</td><td> duration of task i.e. <b>2</b></td></tr><tr><td>resource</td><td>String</td><td> resource of task (Only applicable to Practical Law integration)</td></tr><tr><td><b>&lt;Assignee&gt;</b></td><td></td><td></td></tr><tr><td>assigneeid</td><td>Integer</td><td> id of task assignee.</td></tr><tr><td>assigneename</td><td>String</td><td> name of task assignee.</td></tr><tr><td><b>&lt;Priority&gt;</b></td><td></td><td></td></tr><tr><td>priorityid</td><td>Integer</td><td> priority id of task.</td></tr><tr><td>priorityname</td><td>String</td><td> priority name of task i.e. </br><b>Low</b></br><b>Normal</b></br><b>High</b></td></td></tr><tr><td><b>&lt;Status&gt;</b></td><td></td><td></td></tr><tr><td>statusid</td><td>Integer</td><td> status id of task.</td></tr><tr><td>statusname</td><td>String</td><td> status name of task i.e. </br><b>Not started</b></br><b>In progress</b></br><b>Complete</b></td></tr><tr><td>ishighq</td><td>Integer</td><td> decides to show matter map in HighQ or not i.e. </br><b>0</b>=false</br><b>1</b>=true</td></tr></tbody></table><br>",
            "required": true,
            "schema": { "$ref": "#/definitions/TaskTemplateRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Task template created successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while creating task template"
          }
        }
      }
    },
    "/{version}/admin/users/{userid}/2fa": {
      "post": {
        "tags": ["Two Factor Auth API"],
        "summary": "Reset 2FA",
        "description": "<p>This API call is used to reset user two factor authentication.<br><br><b>Error Codes</b><br><br><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 858px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\"><span style=\"color:#000000;\"><strong>Summary</strong></span></td>\r\n\t\t\t<td style=\"width: 178px;\"><span style=\"color:#000000;\"><strong>API Error code</strong></span></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The 2FA reset request was invalid for the following user(s) :</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">110</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>A user ID is required</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">109</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The user's ID format is incorrect</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">113</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>The user's ID length cannot exceeds 50 characters</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">304</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 675px;\">\r\n\t\t\t<p>None of the selected users are eligible to reset two factor authentication</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">494</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table></p>",
        "operationId": "resetTwoFactorAuth",
        "consumes": ["application/xml", "application/json"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "14"
          },
          {
            "name": "userid",
            "in": "path",
            "description": "ID of user ",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "201": { "description": "2FA reset successfully" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/{version}/wiki/{siteid}/{wikiid}": {
      "get": {
        "tags": ["Wiki API"],
        "summary": "Get wiki details",
        "description": "Method to obtain Get wiki details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getWiki",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "path",
            "description": "wiki id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "wiki details returned successfully",
            "schema": { "$ref": "#/definitions/WikiDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching wiki details"
          }
        }
      },
      "put": {
        "tags": ["Wiki API"],
        "summary": "Update wiki",
        "description": "Method to update wiki page.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "updateWiki",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "path",
            "description": "wiki id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "update wiki request parameter \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>wikititle</td><td>String</td><td> title of the wiki page</td></tr><tr><td>wikicontent</td><td>String</td><td> content of the wiki page i.e. <strong> &lt;![CDATA[ &lt;p&gt; wiki content &lt;/p&gt; ]]> </strong> </td></tr><tr><td>wikidraftid</td><td>Integer</td><td>wiki draft id of draft wiki page</td></tr><tr><td>attachments</td><td>String</td><td> comma saparated attachment id i.e. <b>i.e. 1,2,3</b>  </td></tr><tr><td>tags</td><td>String</td><td> comma saparated tag value i.e. <b> tag1,tag2,tag3</b></td></tr><tr><td>notificationid</td><td>Integer</td><td>user notification preference. <br><strong>1</strong> = respect user email preferences <br> <strong>2</strong> = send immediate email to all users. <br><strong>3</strong> = suppress all email notifications. <br><strong>4</strong> = suppress all notifications and activity <br><br><strong>Note : default value for notification is 1</strong></td></tr><tr><td>publishstatus</td><td>Integer</td><td> status of wiki page. <br><strong>1</strong> = publish<br><strong>0</strong> = draft <br><br><strong>Note : default value for publishstatus is 1</strong></td></td></tr><tr><td>showcomment</td><td>Integer</td><td> comments are allowed for wiki page or not <br><strong>1</strong> = to enable show comments. <br> <strong>0</strong> = to disable show comments. <br><br> If &lt;showcomment&gt; tag contains no values,system will treat it like 0.<br><br><strong>Note : default value for showcomment is 1</strong></td></tr><tr><td>parentwikiid</td><td>Integer</td><td>the value of wiki id under which user wants to publish wiki page. if parentwikiid is not provided or value as null, then it won't change parentwiki. if parentwikiid is provided as zero, then wiki existing page will be moved under <strong>Home Page</strong>. if parentwiki is provided as other positive number, then existing wiki will be moved to given parent wiki. </td></tr><tr><td>inheritparentwiki</td><td>Integer</td><td>wiki page permissions are inherited from parent wiki or not. if the user has provided 1 along with a group or user access then 1 will be considered <br><strong>1</strong> = inherited from parent wiki <br> <strong>0</strong> = provide custom permission for either group wise or user wise<br><br><strong>Note : default value for inheritparentwiki is 1.</strong></td></tr><td>userid</td><td>Integer</td><td> the user id</td></tr><tr><td>groupid</td><td>Integer</td><td>the group id</td></tr><tr><td>viewaccess</td><td>Boolean</td><td>view access is allowed or not for wiki page</td></tr><tr><td>editaccess</td><td>Boolean</td><td>edit access is allowed or not for wiki page</td></tr></tbody></table>",
            "required": true,
            "schema": { "$ref": "#/definitions/WikiRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "wiki updated successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occurred updating wiki page" }
        }
      },
      "delete": {
        "tags": ["Wiki API"],
        "summary": "Move wiki to delete item list",
        "description": "Method to Move wiki in deleted Items.<br>",
        "operationId": "moveWikiPageToDeleteItems",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "Site Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "path",
            "description": "Wiki Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Wiki Deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting wiki"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}": {
      "post": {
        "tags": ["Wiki API"],
        "summary": "Add wiki",
        "description": "Method to add new wiki page.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "insertWiki",
        "consumes": ["application/xml", "application/json", "text/xml"],
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "add wiki request parameter \r\n<br><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" style=\"width: 50%;\">\n<thead><tr><th scope=\"col\">Name</th><th scope=\"col\">Type</th><th scope=\"col\">Description</th></tr></thead><tbody><tr><td>wikititle</td><td>String</td><td> title of the wiki page</td></tr><tr><td>wikicontent</td><td>String</td><td> content of the wiki page i.e. <strong> &lt;![CDATA[ &lt;p&gt; wiki content &lt;/p&gt; ]]> </strong> </td></tr><tr><td>attachments</td><td>String</td><td> comma saparated attachment id i.e. <b>i.e. 1,2,3</b>  </td></tr><tr><td>tags</td><td>String</td><td> comma saparated tag value i.e. <b> tag1,tag2,tag3</b></td></tr><tr><td>notificationid</td><td>Integer</td><td>user notification preference. <br><strong>1</strong> = respect user email preferences <br> <strong>2</strong> = send immediate email to all users. <br><strong>3</strong> = suppress all email notifications. <br><strong>4</strong> = suppress all notifications and activity <br><br><strong>Note : default value for notification is 1</strong></td></tr><tr><td>publishstatus</td><td>Integer</td><td> status of wiki page. <br><strong>1</strong> = publish<br><strong>0</strong> = draft <br><br><strong>Note : default value for publishstatus is 1</strong></td></td></tr><tr><td>showcomment</td><td>Integer</td><td> comments are allowed for wiki page or not <br><strong>1</strong> = to enable show comments. <br> <strong>0</strong> = to disable show comments. <br><br> If &lt;showcomment&gt; tag contains no values,system will treat it like 0.<br><br><strong>Note : default value for showcomment is 1</strong></td></tr><tr><td>parentwikiid</td><td>Integer</td><td>the value of wiki id under which user wants to publish wiki page. if parentwikiid is not provided or parentwikiid is zero, then wiki page will be published under <strong>Home Page </strong> </td></tr><tr><td>inheritparentwiki</td><td>Integer</td><td>wiki page permissions are inherited from parent wiki or not. if the user has provided 1 along with a group or user access then 1 will be considered <br><strong>1</strong> = inherited from parent wiki <br> <strong>0</strong> = provide custom permission for either group wise or user wise<br><br><strong>Note : default value for inheritparentwiki is 1.</strong></td></tr><td>userid</td><td>Integer</td><td> the user id</td></tr><tr><td>groupid</td><td>Integer</td><td>the group id</td></tr><tr><td>viewaccess</td><td>Boolean</td><td>view access is allowed or not for wiki page</td></tr><tr><td>editaccess</td><td>Boolean</td><td>edit access is allowed or not for wiki page</td></tr></tbody></table>",
            "required": true,
            "schema": { "$ref": "#/definitions/WikiRequestDBO" }
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "wiki added successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": { "description": "Internal error occurred adding wiki page" }
        }
      }
    },
    "/{version}/wiki/{siteid}/draft": {
      "delete": {
        "tags": ["Wiki API"],
        "summary": "delete wiki draft",
        "description": "Method is used for delete wiki draft.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "deleteWikiDraft_1",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "the site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "draftid_csv",
            "in": "query",
            "description": "the draft id csv<br><br>comma saparated wiki draft id <b>i.e. 1,2,3</b> to delete multiple drafts.<br> <b>ALL</b> to delete all drafts.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Wiki Draft Deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting wiki"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/draft/{draftid}": {
      "get": {
        "tags": ["Wiki API"],
        "summary": "Get wiki draft details",
        "description": "Method to obtain Get wiki draft details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getWikiDraft",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "draftid",
            "in": "path",
            "description": "draft id of draft wiki page",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "wiki draft details returned successfully",
            "schema": { "$ref": "#/definitions/WikiDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching wiki details"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/drafts": {
      "get": {
        "tags": ["Wiki API"],
        "summary": "Get list of wiki draft page",
        "description": "Method to obtain list of wiki draft details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getWikiDraftList",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting integer value of the item to be fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items return in one request. Default is 100  and and there is no maximum limit <br><br>If a value of 0 provided in the request then 100 items will be returned If a value of -1 provided in the request then All items will be returnedand if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "sort order \r\n0 = Ascending Order, 1 = Desending Order",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "sort Type \r\nTITLE = title, LASTSAVED = last modified date,STATUS = draft type<br>Note: For sortType as blank, sorting will be done based on ParentWikiID in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "wiki draft list is fetched successfully",
            "schema": { "$ref": "#/definitions/WikisDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching wiki draft list"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/{wikiid}/restore": {
      "put": {
        "tags": ["Wiki API"],
        "summary": "Restore wiki",
        "description": "Method to Restore wiki.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "restoreWikiPage",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "path",
            "description": "wiki Id \r\n0 = Restore to root wiki, -1 = Restore to orphan wiki, Specific Wiki ID = Restore to under specific wiki",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deletedwikiids_csv",
            "in": "query",
            "description": "the deleted wiki id csv<br><br>comma saparated wiki deleted wiki id <b>i.e. 1,2,3</b> to restore multiple wikis.<br> <b>ALL</b> to restore all wikis.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Wiki Restore successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while Restoreing wiki"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/{wikiid}/restore/{versionid}": {
      "put": {
        "tags": ["Wiki API"],
        "summary": "Restore wiki version",
        "description": "Method to restore wiki version.<br>",
        "operationId": "restoreWikiVersion",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "path",
            "description": "wiki id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionid",
            "in": "path",
            "description": "wiki version id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Wiki version restored successfully",
            "schema": { "$ref": "#/definitions/WikiDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while restoring wiki version"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/remove": {
      "delete": {
        "tags": ["Wiki API"],
        "summary": "Delete wiki permenently",
        "description": "Method to Delete wiki permenently.<br>",
        "operationId": "deleteWikiPage",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletedwikiids_csv",
            "in": "query",
            "description": "the deleted wiki id csv<br><br>comma saparated wiki deleted wiki id <b>i.e. 1,2,3</b> to delete multiple wikis.<br> <b>ALL</b> to delete all wikis.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": { "description": "Wiki Deleted successfully" },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while deleting wiki"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/tree": {
      "get": {
        "tags": ["Wiki API"],
        "summary": "Get list of wikis tree",
        "description": "Method to get wikis tree.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getWikiTree",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteids",
            "in": "query",
            "description": "multiple site id with comma separated value i.e. 1,2,3 <br> passing <b>ALL</b> as parameter value will consider only sites which user has access.<br><br> <b>Note:</b> When we provide siteidcsv parameter, <b>siteid</b> of path param will not be considered and validated but it should be passed with any value as it is required field in previous api version. This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorid",
            "in": "query",
            "description": "<b>-1</b> for all author or valid author id<br> by default,it will fetch all author wiki page.</br><br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "description": "period <br> possible values are : ALL, LAST_WEEK, LAST_MONTH. <b>ALL</b> will be deafult value for period </br><br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "provide comma separated tag value i.e. tag1,tag2,tag3 </br><br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset<br> Default value is <b>0</b> </br><br> <b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items return in one request. Default is <b>100</b>  and and there is no maximum limit. <br><br>If value <b>0</b> is provided in the request, then <b>100</b> items will be returned if value of <b>-1</b>is provided in the request, then All items will be returned and if a value of greater than 0 is provided then, items equal to  the value will be returned. </br><br><b>Note:</b> This will be supported from version 13 and above.",
            "required": false,
            "type": "string"
          },
          {
            "name": "wikiid",
            "in": "query",
            "description": "wiki id \r\n0 = Root wiki tree(Default), -1 = Orphan wiki tree, Specific Wiki ID = Specific wiki tree",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Get wikis tree successfully",
            "schema": { "$ref": "#/definitions/WikisDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while getting wikis tree"
          }
        }
      }
    },
    "/{version}/wiki/{siteid}/deleteditems": {
      "get": {
        "tags": ["Wiki API"],
        "summary": "Get deleted wiki details",
        "description": "Method to obtain Deleted wiki details.<br><br>This method is supported in version 12 of the API and above",
        "operationId": "getDeletedWikis",
        "produces": ["application/xml", "application/json", "text/xml"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version of api",
            "required": true,
            "type": "string",
            "default": "12"
          },
          {
            "name": "siteid",
            "in": "path",
            "description": "site id",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "the starting integer value of the  deleted item fetched.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of deleted items to return in one request. default is 100  and and there is no maximum limit <br><br>If a value of 0 provided in the request then 100 deleted items will be returned If a value of -1 provided in the request then all deleted items will be returnedand if a value of greater than 0 is provided then items equal to  the value will be returned. <br>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "sort order \r\n0 = Ascending Order, 1 = Desending Order</td>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sorttype",
            "in": "query",
            "description": "sort Type \r\nTITLE = title, LASTUPDATED = last updated Date, DELETEDBY = deleted by<br>Note: For sortType as blank, sorting will be done based on ParentWikiID in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [{ "OAuth": [] }],
        "responses": {
          "200": {
            "description": "Deleted wiki details returned successfully",
            "schema": { "$ref": "#/definitions/WikisDBO" }
          },
          "400": { "description": "Problem with parameters" },
          "401": { "description": "Unauthorised" },
          "403": {
            "description": "Validation failed | Forbidden",
            "schema": { "$ref": "#/definitions/ErrorDBO" }
          },
          "500": {
            "description": "Internal error occurred while fetching deleted wiki details"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth": {
      "type": "oauth2",
      "authorizationUrl": "https://your-highq.example.com/instance/authorize.action",
      "tokenUrl": "https://your-highq.example.com/instance/api/oauth2/token",
      "flow": "accessCode"
    }
  },
  "definitions": {
    "ActivityDBO": {
      "type": "object",
      "properties": {
        "enable": { "type": "string", "xml": { "attribute": true } },
        "microblog": { "type": "string" }
      }
    },
    "BidderSiteDBO": {
      "type": "object",
      "properties": {
        "enable": { "type": "string" },
        "advancedqapermission": { "type": "string" }
      }
    },
    "BlogDBO": {
      "type": "object",
      "properties": {
        "blogTitle": { "type": "string" },
        "blogContent": { "type": "string" },
        "showComment": { "type": "integer", "format": "int32" },
        "tagList": { "type": "array", "items": { "type": "string" } },
        "status": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "author": { "type": "string" },
        "categoryList": { "type": "array", "items": { "type": "string" } },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "message": { "type": "string" },
        "messageCode": { "type": "integer", "format": "int32" },
        "externalID": { "type": "string" },
        "publishDate": { "type": "string" },
        "processtype": { "type": "string" },
        "enable": { "type": "string", "xml": { "attribute": true } }
      }
    },
    "Categories": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": { "$ref": "#/definitions/CategoryDBO" }
        }
      }
    },
    "CategoryDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "id": { "type": "string" },
        "httplink": { "type": "string" }
      },
      "xml": { "name": "category" }
    },
    "ContactUS": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactUSDBO" }
        },
        "type": { "type": "string" }
      },
      "xml": { "name": "contactus" }
    },
    "ContactUSDBO": {
      "type": "object",
      "properties": { "value": { "type": "string" } },
      "xml": { "name": "values" }
    },
    "DMSDocumentDBO": {
      "type": "object",
      "properties": {
        "dmsdocid": { "type": "string" },
        "dmsParentFolderID": { "type": "string" },
        "dmseditdate": { "type": "string" },
        "dmscreateddate": { "type": "string", "format": "date-time" },
        "dmsmodifiedBy": { "type": "string" },
        "dmsdatabasename": { "type": "string" },
        "dmsversion": { "type": "string" }
      },
      "xml": { "name": "dms" }
    },
    "DocumentDBO": {
      "type": "object",
      "properties": {
        "documentname": { "type": "string", "xml": { "name": "filename" } },
        "dmsVersion": { "type": "string" },
        "notification": { "type": "string", "example": "E.g. 1/2/3" },
        "folderID": { "type": "string" },
        "batchID": { "type": "string" },
        "status": { "type": "string" },
        "documentKey": { "type": "string" },
        "enable": { "type": "string", "xml": { "attribute": true } },
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "versionid": { "type": "integer", "format": "int32" },
        "versionnote": { "type": "string" },
        "createddate": { "type": "string" },
        "modifieddate": { "type": "string" },
        "type": { "type": "string" },
        "originaltype": { "type": "string" },
        "icon": { "type": "string" },
        "commentscount": { "type": "integer", "format": "int32" },
        "likescount": { "type": "integer", "format": "int32" },
        "tags": { "$ref": "#/definitions/TagsDBO" },
        "location": { "type": "string" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "siteid": { "type": "integer", "format": "int32" },
        "parentfolderid": { "type": "integer", "format": "int32" },
        "error": { "type": "string" },
        "size": { "type": "integer", "format": "int64" },
        "permission": { "$ref": "#/definitions/PermissionDBO" },
        "contentstatus": { "type": "integer", "format": "int32" },
        "autonumbering": {
          "type": "string",
          "xml": { "name": "auto-numbering" }
        },
        "redactionStatus": {
          "type": "boolean",
          "xml": { "name": "redactionstatus" }
        },
        "loggedinuserlikestatus": { "type": "integer", "format": "int32" },
        "favouritestatus": { "type": "integer", "format": "int32" },
        "sharedstatus": { "type": "integer", "format": "int32" },
        "taskcount": { "type": "integer", "format": "int32" },
        "documentWithUpdatedVersion": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentDBO" }
        },
        "fileid": { "type": "string" },
        "filemetadatasheetid": { "type": "integer", "format": "int32" },
        "itemid": { "type": "integer", "format": "int32" },
        "dms": { "$ref": "#/definitions/DMSDocumentDBO" },
        "emailmetadata": { "$ref": "#/definitions/EmailMetaDataDetailsDBO" },
        "file_relationship": { "type": "string" },
        "documentduplicatelist": {
          "type": "array",
          "items": {
            "xml": { "name": "documentduplicatelist" },
            "$ref": "#/definitions/DocumentDBO"
          }
        },
        "documentsWithUpdatedVersion": {
          "type": "array",
          "items": {
            "xml": { "name": "documentsWithUpdatedVersion" },
            "$ref": "#/definitions/DocumentDBO"
          }
        }
      },
      "xml": { "name": "file" }
    },
    "EmailMetaDataDetailsDBO": {
      "type": "object",
      "properties": {
        "from": { "type": "string" },
        "to": { "type": "string" },
        "cc": { "type": "string" },
        "sent": { "type": "string" },
        "received": { "type": "string" }
      }
    },
    "Emailmetadata": {
      "type": "object",
      "properties": {
        "enable": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailmetadataallfolder": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailfrom": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailto": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailcc": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailsent": { "type": "string", "enum": ["TRUE/FALSE"] },
        "emailreceived": { "type": "string", "enum": ["TRUE/FALSE"] }
      }
    },
    "EventDBO": {
      "type": "object",
      "properties": {
        "eventTitle": { "type": "string" },
        "eventContent": { "type": "string" },
        "showComment": { "type": "integer", "format": "int32" },
        "tagList": { "type": "array", "items": { "type": "string" } },
        "status": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "contact": { "type": "string" },
        "categoryList": { "type": "array", "items": { "type": "string" } },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "message": { "type": "string" },
        "messageCode": { "type": "integer", "format": "int32" },
        "externalID": { "type": "string" },
        "startDate": { "type": "string" },
        "endDate": { "type": "string" },
        "startTime": { "type": "string" },
        "endTime": { "type": "string" },
        "location": { "type": "string" },
        "author": { "type": "string" },
        "processtype": { "type": "string" },
        "enable": { "type": "string", "xml": { "attribute": true } }
      }
    },
    "FileDuplication": {
      "type": "object",
      "properties": {
        "enableDuplicateFileDetection": { "type": "boolean" },
        "duplicateFileDetectionLevel": { "type": "integer", "format": "int32" }
      }
    },
    "FileModule": {
      "type": "object",
      "properties": {
        "permissionlevel": { "type": "string" },
        "approvaldocumentworkflow": { "type": "string" },
        "allowbulkdownload": { "type": "string" },
        "emailnotification": { "type": "string" },
        "showsitemap": { "type": "string" },
        "inbox": { "$ref": "#/definitions/Inbox" },
        "emailmetadata": { "$ref": "#/definitions/Emailmetadata" },
        "fileSharing": { "$ref": "#/definitions/FileSharing" },
        "fileDuplication": { "$ref": "#/definitions/FileDuplication" }
      }
    },
    "FileSharing": {
      "type": "object",
      "properties": {
        "enableFileSharing": { "type": "boolean" },
        "allowViewRightUserToShareFile": { "type": "boolean" }
      }
    },
    "Folder": {
      "type": "object",
      "required": ["foldername"],
      "properties": {
        "id": { "type": "string", "xml": { "attribute": true } },
        "dmsfolderid": { "type": "string", "xml": { "attribute": true } },
        "permission": { "type": "string", "xml": { "attribute": true } },
        "foldername": { "type": "string" },
        "folder": {
          "type": "array",
          "items": {
            "xml": { "name": "folder" },
            "$ref": "#/definitions/Folder"
          }
        },
        "child": { "type": "string", "xml": { "attribute": true } }
      },
      "xml": { "name": "folder" }
    },
    "HomeDBO": {
      "type": "object",
      "properties": {
        "enable": { "type": "string", "xml": { "attribute": true } }
      }
    },
    "ISheetDBO": {
      "type": "object",
      "properties": {
        "enable": { "type": "string", "xml": { "attribute": true } }
      }
    },
    "Inbox": {
      "type": "object",
      "properties": {
        "enable": { "type": "string" },
        "accountname": { "type": "string" }
      }
    },
    "MatterNumber": {
      "type": "object",
      "properties": {
        "value": { "type": "string" },
        "readonly": { "type": "boolean" }
      },
      "xml": { "name": "matterno" }
    },
    "MatterNumbers": {
      "type": "object",
      "properties": {
        "matterno": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterNumber" }
        }
      }
    },
    "ModuleDBO": {
      "type": "object",
      "properties": {
        "home": { "$ref": "#/definitions/HomeDBO" },
        "activity": { "$ref": "#/definitions/ActivityDBO" },
        "document": { "$ref": "#/definitions/DocumentDBO" },
        "blog": { "$ref": "#/definitions/BlogDBO" },
        "wiki": { "$ref": "#/definitions/WikiDBO" },
        "task": { "$ref": "#/definitions/TaskDBO" },
        "event": { "$ref": "#/definitions/EventDBO" },
        "isheet": { "$ref": "#/definitions/ISheetDBO" },
        "qa": { "$ref": "#/definitions/QaDBO" },
        "people": { "$ref": "#/definitions/PeopleDBO" }
      }
    },
    "PeopleDBO": {
      "type": "object",
      "properties": {
        "person": {
          "type": "array",
          "items": { "$ref": "#/definitions/PersonDBO" }
        }
      },
      "xml": { "name": "people" }
    },
    "PermissionDBO": {
      "type": "object",
      "properties": {
        "view": { "type": "integer", "format": "int32" },
        "edit": { "type": "integer", "format": "int32" },
        "delete": { "type": "integer", "format": "int32" },
        "addEditAllFiles": { "type": "integer", "format": "int32" },
        "admin": { "type": "integer", "format": "int32" },
        "viewAllFiles": { "type": "integer", "format": "int32" },
        "disableSave": { "type": "integer", "format": "int32" },
        "uploadFile": { "type": "integer", "format": "int32" },
        "updateFile": { "type": "integer", "format": "int32" },
        "deleteFile": { "type": "integer", "format": "int32" }
      }
    },
    "QaDBO": {
      "type": "object",
      "properties": {
        "enable": { "type": "string", "xml": { "attribute": true } }
      }
    },
    "RawSiteSize": {
      "type": "object",
      "properties": {
        "activedocumentsize": { "type": "integer", "format": "int64" },
        "deleteddocumentsize": { "type": "integer", "format": "int64" },
        "totalsize": { "type": "integer", "format": "int64" }
      }
    },
    "SiteRestrictionType": {
      "type": "object",
      "properties": {
        "passwordprotected": { "type": "integer", "format": "int32" },
        "twoFactorAuthentication": { "type": "integer", "format": "int32" },
        "termsandconditions": { "type": "integer", "format": "int32" },
        "iprestrictedsite": { "type": "integer", "format": "int32" },
        "drm": { "type": "integer", "format": "int32" },
        "checkout": { "type": "integer", "format": "int32" },
        "documentworkflow": { "type": "integer", "format": "int32" },
        "visiableonhighqdrive": { "type": "integer", "format": "int32" }
      }
    },
    "TagsDBO": {
      "type": "object",
      "properties": {
        "tag": { "type": "array", "items": { "type": "string" } }
      }
    },
    "TaskDBO": {
      "type": "object",
      "properties": {
        "index": { "type": "string" },
        "parenttaskid": { "type": "integer", "format": "int32" },
        "taskid": { "type": "integer", "format": "int32" },
        "title": { "type": "string" },
        "description": { "type": "string" },
        "duedate": { "type": "string" },
        "startdate": { "type": "string" },
        "mattermaptaskid": { "type": "string" },
        "type": { "type": "string" },
        "assignees": { "$ref": "#/definitions/TaskAssigneesDBO" },
        "priority": { "$ref": "#/definitions/TaskPriorityDBO" },
        "status": { "$ref": "#/definitions/TaskStatusDBO" },
        "dependenton": { "type": "string" },
        "daysfromdependent": { "type": "string" },
        "ignoreweekend": { "type": "integer", "format": "int32" },
        "duration": { "type": "integer", "format": "int32" },
        "resource": { "type": "string" }
      }
    },
    "UserDBO": {
      "type": "object",
      "properties": {
        "firstname": { "type": "string" },
        "lastname": { "type": "string" },
        "email": { "type": "string" },
        "userid": { "type": "integer", "format": "int32" },
        "fullName": { "type": "string" }
      }
    },
    "WikiDBO": {
      "type": "object",
      "properties": {
        "wikiid": { "type": "integer", "format": "int32" },
        "currentversionid": { "type": "integer", "format": "int32" },
        "parentwikiid": { "type": "integer", "format": "int32" },
        "wikititle": { "type": "string" },
        "wikicontent": { "type": "string" },
        "showcomment": { "type": "integer", "format": "int32" },
        "createdby": { "$ref": "#/definitions/Actor" },
        "modifiedby": { "$ref": "#/definitions/Actor" },
        "createddate": { "type": "string" },
        "modifieddate": { "type": "string" },
        "taglist": { "type": "string" },
        "wikipath": { "type": "string" },
        "attachments": { "$ref": "#/definitions/Attachments" },
        "permission": { "$ref": "#/definitions/WikiPermissionDBO" },
        "wikidraftid": { "type": "integer", "format": "int32" },
        "drafttype": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "wikiversionid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "wiki" }
    },
    "categories": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": { "$ref": "#/definitions/category" }
        }
      },
      "xml": { "name": "categories" }
    },
    "category": {
      "type": "object",
      "properties": {
        "csvCategory": { "type": "string" },
        "siteid": { "type": "string" },
        "sitename": { "type": "string" },
        "categoryname": { "type": "array", "items": { "type": "string" } },
        "blogExternalId": { "type": "string" },
        "eventExternalId": { "type": "string" },
        "processtype": { "type": "string" },
        "siteCategoryName": { "type": "string" },
        "siteCategoryID": { "type": "string" },
        "translations": {
          "xml": { "name": "sitecategorynametranslations" },
          "$ref": "#/definitions/translations"
        }
      },
      "xml": { "name": "category" }
    },
    "site": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "sitename": { "type": "string" },
        "role": { "type": "string" },
        "sitedescription": { "type": "string" },
        "enabledmodules": { "type": "string" },
        "sitefolderID": { "type": "string" },
        "folder": { "$ref": "#/definitions/Folder" },
        "sitefolderpermission": { "type": "string" },
        "module": { "$ref": "#/definitions/ModuleDBO" },
        "adminnote": { "type": "string" },
        "startdate": { "type": "string" },
        "enddate": { "type": "string" },
        "createddate": { "type": "string" },
        "archiveddate": { "type": "string" },
        "clientno": { "type": "string" },
        "matterno": { "type": "string" },
        "landingpage": { "type": "string" },
        "link": { "type": "string" },
        "status": { "type": "string" },
        "statusid": { "type": "integer", "format": "int32" },
        "size": { "type": "string" },
        "rawsitesize": { "$ref": "#/definitions/RawSiteSize" },
        "billingnotes": { "type": "string" },
        "billingnextinvoicedate": { "type": "string" },
        "billinglastinvoicedate": { "type": "string" },
        "filepagecount": { "type": "string" },
        "maxpagecount": { "type": "string" },
        "siteowner": { "$ref": "#/definitions/UserDBO" },
        "sitehttplink": { "type": "string" },
        "isSyncable": { "type": "integer", "format": "int32" },
        "file": { "$ref": "#/definitions/FileModule" },
        "categories": { "$ref": "#/definitions/Categories" },
        "contactus": { "$ref": "#/definitions/ContactUS" },
        "enforceusergroups": { "type": "string" },
        "csvSiteCategory": { "type": "string" },
        "biddersite": { "$ref": "#/definitions/BidderSiteDBO" },
        "sitenametranslations": { "$ref": "#/definitions/translations" },
        "siteNameInDefaultLanguage": { "type": "string" },
        "visible": { "type": "integer", "format": "int32" },
        "siteLogoName": { "type": "string" },
        "siteLogoFileSize": { "type": "integer", "format": "int64" },
        "siteLogoHeight": { "type": "integer", "format": "int32" },
        "siteLogoWidth": { "type": "integer", "format": "int32" },
        "siteStatus": { "type": "integer", "format": "int32" },
        "applySiteTerms": { "type": "integer", "format": "int32" },
        "siteTerm": { "type": "string" },
        "termType": { "type": "integer", "format": "int32" },
        "nextLoginSiteTerms": { "type": "integer", "format": "int32" },
        "defaultSiteTermsEnable": { "type": "integer", "format": "int32" },
        "advancedQAPermission": { "type": "integer", "format": "int32" },
        "isInternal": { "type": "integer", "format": "int32" },
        "psm": { "type": "integer", "format": "int32" },
        "siteLabelDisplay": { "type": "string" },
        "allowSiteAdministration": { "type": "integer", "format": "int32" },
        "siteLevelPasswordEnable": { "type": "integer", "format": "int32" },
        "siteLevelPasscodeEnable": { "type": "integer", "format": "int32" },
        "passcodeUsingAuthApp": { "type": "integer", "format": "int32" },
        "sitePassword": { "type": "string" },
        "ipRestrictionEnable": { "type": "integer", "format": "int32" },
        "availableIP": { "type": "string" },
        "highqDrive": { "type": "integer", "format": "int32" },
        "applySiteHomePage": { "type": "integer", "format": "int32" },
        "siteHomePage": { "type": "string" },
        "siteHomePageType": { "type": "integer", "format": "int32" },
        "nextLoginSiteHomePage": { "type": "integer", "format": "int32" },
        "applyDisplayContent": { "type": "integer", "format": "int32" },
        "displayContent": { "type": "string" },
        "siteCategories": { "$ref": "#/definitions/categories" },
        "rssSecurity": { "type": "integer", "format": "int32" },
        "encryptedPassword": { "type": "integer", "format": "int32" },
        "availableIPRangeCSV": { "type": "string" },
        "siteModuleID": { "type": "integer", "format": "int32" },
        "icalSecurity": { "type": "integer", "format": "int32" },
        "defaultDisplayContent": { "type": "string" },
        "defaultEmailAlert": { "type": "integer", "format": "int32" },
        "excelReportFooter": { "type": "integer", "format": "int32" },
        "excelReportFooterText": { "type": "string" },
        "announcementMLJSON": { "type": "string" },
        "templateType": { "type": "integer", "format": "int32" },
        "templateLicence": { "type": "integer", "format": "int32" },
        "openChannelAppID": { "type": "string" },
        "siteRestrictionType": { "$ref": "#/definitions/SiteRestrictionType" },
        "itemid": { "type": "integer", "format": "int32" },
        "sitemetadatasheetid": { "type": "integer", "format": "int32" },
        "mysite": { "type": "boolean" },
        "matternos": { "$ref": "#/definitions/MatterNumbers" },
        "lastaccesseddate": { "type": "string" },
        "enableDuplicateFileDetection": { "type": "boolean" },
        "duplicateFileDetectionLevel": { "type": "integer", "format": "int32" },
        "deletedItemSize": { "type": "string" },
        "modifiedDateStr": { "type": "string" },
        "noOfUsers": { "type": "string" },
        "enabledocumentredaction": { "type": "boolean" },
        "mentiongroups": { "type": "integer", "format": "int32" }
      }
    },
    "translation": {
      "type": "object",
      "properties": {
        "languageCode": { "type": "string", "xml": { "name": "languagecode" } },
        "value": { "type": "string" }
      },
      "xml": { "name": "translation" }
    },
    "translations": {
      "type": "object",
      "properties": {
        "translation": {
          "type": "array",
          "items": { "$ref": "#/definitions/translation" }
        }
      },
      "xml": { "name": "translations" }
    },
    "sites": {
      "type": "object",
      "properties": {
        "sitecount": { "type": "integer", "format": "int32" },
        "site": { "type": "array", "items": { "$ref": "#/definitions/site" } }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "addressid": { "type": "string" },
        "addressline1": { "type": "string" },
        "addressline2": { "type": "string" },
        "addressline3": { "type": "string" },
        "city": { "type": "string" },
        "state": { "type": "string" },
        "country": { "type": "string" },
        "postCode": { "type": "string" },
        "knownas": { "type": "string" }
      }
    },
    "LocationDBO": {
      "type": "object",
      "properties": {
        "addressline1": { "type": "string" },
        "addressline2": { "type": "string" },
        "addressline3": { "type": "string" },
        "city": { "type": "string" },
        "state": { "type": "string" },
        "country": { "type": "string" },
        "postcode": { "type": "string" }
      }
    },
    "OrganisationDBO": {
      "type": "object",
      "properties": {
        "orgname": { "type": "string" },
        "orgid": { "type": "integer", "format": "int32" },
        "orgaddress": { "type": "string" }
      },
      "xml": { "name": "organisationdbo" }
    },
    "Role": {
      "type": "object",
      "properties": {
        "alias": { "type": "string" },
        "name": { "type": "string" },
        "url": { "type": "string" },
        "roleOptionType": { "type": "string" }
      },
      "xml": { "name": "role" }
    },
    "Roles": {
      "type": "object",
      "properties": {
        "role": { "type": "array", "items": { "$ref": "#/definitions/Role" } }
      },
      "xml": { "name": "roles" }
    },
    "UserLoginDetails": {
      "type": "object",
      "properties": {
        "loginDate": { "type": "string" },
        "loginType": { "type": "string" },
        "proxyBy": { "type": "string" },
        "twoFactor": { "type": "string" },
        "ipAddress": { "type": "string" }
      },
      "xml": { "name": "userLoginDetails" }
    },
    "user": {
      "type": "object",
      "properties": {
        "userid": { "type": "integer", "format": "int32" },
        "following": { "type": "boolean" },
        "email": { "type": "string" },
        "name": { "$ref": "#/definitions/UserName" },
        "userlink": { "type": "string" },
        "httplink": { "type": "string" },
        "httpavatar": { "type": "string" },
        "avatar": { "type": "string" },
        "externalid": { "type": "string" },
        "dateofbirth": { "type": "string" },
        "phone": { "type": "string" },
        "jobtitle": { "type": "string" },
        "mobile": { "type": "string" },
        "department": { "type": "string" },
        "status": { "type": "string" },
        "org": { "type": "string" },
        "location": { "$ref": "#/definitions/LocationDBO" },
        "img": { "type": "string" },
        "experiences": { "$ref": "#/definitions/ExperiencesDBO" },
        "sociallinks": { "$ref": "#/definitions/Link" },
        "customlink": { "$ref": "#/definitions/Link" },
        "messaginglink": { "$ref": "#/definitions/Link" },
        "secretaryname": { "type": "string" },
        "secretarymail": { "type": "string" },
        "bio": { "type": "string" },
        "sourcetype": { "type": "string" },
        "specialities": { "type": "string" },
        "reportsto": { "type": "string" },
        "metadata": { "$ref": "#/definitions/MetadataListDBO" },
        "groups": { "$ref": "#/definitions/GroupsDBO" },
        "suffix": { "type": "string" },
        "atomlink": { "type": "string" },
        "link": { "type": "string" },
        "loggeduserlike": { "type": "integer", "format": "int32" },
        "userName": { "type": "string" }
      }
    },
    "users": {
      "type": "object",
      "properties": {
        "user": { "type": "array", "items": { "$ref": "#/definitions/user" } }
      },
      "xml": { "name": "users" }
    },
    "ErrorDBO": {
      "type": "object",
      "properties": {
        "summary": { "type": "string" },
        "ref": { "type": "string" },
        "link": { "type": "string" }
      },
      "xml": { "name": "error" }
    },
    "MyFilesReportDBO": {
      "type": "object",
      "properties": {
        "userId": { "type": "integer", "format": "int32" },
        "userName": { "type": "string" },
        "userEmail": { "type": "string" },
        "totalItemSize": { "type": "string" },
        "deletedItemSize": { "type": "string" },
        "quotaUsed": { "type": "string" },
        "sharedItemNo": { "type": "integer", "format": "int32" },
        "sharedItemSize": { "type": "string" },
        "receivedItemNo": { "type": "integer", "format": "int32" },
        "receivedItemSize": { "type": "string" },
        "expireSharedItemNo": { "type": "integer", "format": "int32" },
        "searchUserName": { "type": "string" },
        "orgId": { "type": "integer", "format": "int32" },
        "organisation": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "statusDispalyName": { "type": "string" }
      }
    },
    "myFilesReports": {
      "type": "object",
      "properties": {
        "totalcount": { "type": "string" },
        "user": {
          "type": "array",
          "items": {
            "xml": { "name": "user" },
            "$ref": "#/definitions/MyFilesReportDBO"
          }
        }
      },
      "xml": { "name": "myFilesReports" }
    },
    "ImageDBO": {
      "type": "object",
      "properties": {
        "imageId": { "type": "string" },
        "thumbnailId": { "type": "string" },
        "name": { "type": "string" },
        "modifiedDate": { "type": "string" },
        "accessType": { "type": "string" },
        "siteId": { "type": "string" }
      },
      "xml": { "name": "image" }
    },
    "ImageLibraryDBO": {
      "type": "object",
      "properties": {
        "imagecount": { "type": "integer", "format": "int32" },
        "imageLibrary": {
          "type": "array",
          "xml": { "name": "image" },
          "items": {
            "xml": { "name": "image" },
            "$ref": "#/definitions/ImageDBO"
          }
        }
      },
      "xml": { "name": "imageLibrary" }
    },
    "AIHubCallbackRequest": {
      "type": "object",
      "properties": {
        "requestFor": { "type": "string" },
        "id": { "type": "string" },
        "docId": { "type": "string" },
        "internalDocId": { "type": "string" },
        "instanceId": { "type": "string" },
        "reviewId": { "type": "string" },
        "status": { "type": "string" }
      }
    },
    "WebhookDTO": {
      "type": "object",
      "properties": {
        "docId": { "type": "string" },
        "internalDocId": { "type": "string" },
        "instanceId": { "type": "string" },
        "reviewId": { "type": "string" },
        "status": { "type": "string" }
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "activitydesc": { "type": "string" },
        "activitydeschtml": { "type": "string" },
        "timepublished": { "type": "string" },
        "actors": { "$ref": "#/definitions/Actors" },
        "sitename": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "siterole": { "type": "string" },
        "noofcomments": { "type": "integer", "format": "int32" },
        "nooflikes": { "type": "integer", "format": "int32" },
        "contentitem": { "$ref": "#/definitions/Contentitem" },
        "comments": { "$ref": "#/definitions/comments" },
        "images": { "$ref": "#/definitions/Images" },
        "contentspecificdetail": {
          "$ref": "#/definitions/ContentSpecificDetail"
        },
        "attachments": { "$ref": "#/definitions/ActivityAttachmentsDBO" },
        "activitytypealias": { "type": "string" },
        "addcommentaccess": { "type": "integer", "format": "int32" },
        "permissions": { "$ref": "#/definitions/Permissions" },
        "timepublisedutc": { "type": "string" },
        "userLikes": { "$ref": "#/definitions/Likes" }
      },
      "xml": { "name": "activity" }
    },
    "ActivityAttachmentsDBO": {
      "type": "object",
      "properties": {
        "attachment": {
          "type": "array",
          "items": {
            "xml": { "name": "attachment" },
            "$ref": "#/definitions/Attachment"
          }
        }
      },
      "xml": { "name": "attachments" }
    },
    "Actor": {
      "type": "object",
      "properties": {
        "username": { "type": "string" },
        "httpavatar": { "type": "string" },
        "email": { "type": "string" },
        "avatar": { "type": "string" },
        "userlink": { "type": "string" },
        "httplink": { "type": "string" },
        "defaultavatar": { "type": "integer", "format": "int32" }
      }
    },
    "Actors": {
      "type": "object",
      "properties": {
        "actor": { "type": "array", "items": { "$ref": "#/definitions/Actor" } }
      }
    },
    "Assignee": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "link": { "type": "string" },
        "assigneetype": { "type": "integer", "format": "int32" }
      }
    },
    "Assignees": {
      "type": "object",
      "properties": {
        "assignee": {
          "type": "array",
          "items": { "$ref": "#/definitions/Assignee" }
        }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "file": { "type": "string" },
        "name": { "type": "string" },
        "order": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "extension": { "type": "string" },
        "parentfolderid": { "type": "integer", "format": "int32" },
        "filehttplink": { "type": "string" },
        "folderpath": { "type": "string" },
        "folderhttplink": { "type": "string" },
        "filesize": { "type": "integer", "format": "int64" },
        "redactionStatus": {
          "type": "boolean",
          "xml": { "name": "redactionstatus" }
        },
        "siteid": { "type": "integer", "format": "int32" },
        "displayname": { "type": "string" }
      },
      "xml": { "name": "attachment" }
    },
    "AttachmentDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "extension": { "type": "string" },
        "siteid": { "type": "string" },
        "parentfolderid": { "type": "string" },
        "filehttplink": { "type": "string" },
        "folderpath": { "type": "string" },
        "folderhttplink": { "type": "string" },
        "filesize": { "type": "string" },
        "imagetype": { "type": "string" },
        "createddate": { "type": "string" },
        "modifiedby": { "type": "string" },
        "modifieddate": { "type": "string" },
        "displayversion": { "type": "string" },
        "documentcount": { "type": "string" },
        "taskcount": { "type": "string" },
        "commentcount": { "type": "string" }
      },
      "xml": { "name": "attachment" }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "text": { "type": "string" },
        "html": { "type": "string" },
        "author": { "$ref": "#/definitions/Actor" },
        "datepublished": { "type": "string" },
        "nooflikes": { "type": "integer", "format": "int32" },
        "images": { "$ref": "#/definitions/Images" },
        "attachments": { "$ref": "#/definitions/ActivityAttachmentsDBO" },
        "permissions": { "$ref": "#/definitions/Permissions" },
        "timepublisedutc": { "type": "string" },
        "userLikes": { "$ref": "#/definitions/Likes" }
      }
    },
    "ContentSpecificDetail": {
      "type": "object",
      "properties": {
        "categories": { "$ref": "#/definitions/Categories" },
        "fullday": { "type": "integer", "format": "int32" },
        "startdate": { "type": "string" },
        "starttime": { "type": "string" },
        "enddate": { "type": "string" },
        "endtime": { "type": "string" },
        "location": { "type": "string" },
        "timezone": { "type": "string" },
        "assignees": { "$ref": "#/definitions/Assignees" },
        "duedate": { "type": "string" },
        "priority": { "type": "string" },
        "files": { "$ref": "#/definitions/FilesDBO" },
        "fileidcsv": { "type": "string" },
        "parentfolderid": { "type": "integer", "format": "int32" },
        "filelistapilink": { "type": "string" },
        "versionnotes": { "type": "string" },
        "folderid": { "type": "integer", "format": "int32" },
        "folderpath": { "type": "string" },
        "folderhttplink": { "type": "string" },
        "sharewith": { "$ref": "#/definitions/ShareWith" },
        "linkpreview": { "$ref": "#/definitions/LinkPreview" }
      }
    },
    "Contentitem": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "title": { "type": "string" },
        "link": { "type": "string" },
        "apilink": { "type": "string" },
        "type": { "type": "string" },
        "imagetype": { "type": "string" },
        "filetype": { "type": "string" },
        "author": { "$ref": "#/definitions/Actor" },
        "datepublished": { "type": "string" },
        "parentcontent": { "$ref": "#/definitions/Parentcontent" },
        "location": { "type": "string" },
        "filesize": { "type": "integer", "format": "int64" },
        "siterootfolderid": { "type": "integer", "format": "int32" },
        "version": { "type": "integer", "format": "int32" },
        "originaltype": { "type": "string" },
        "favourite": { "type": "string" },
        "likecount": { "type": "string" },
        "commentcount": { "type": "string" },
        "folderType": { "type": "string" },
        "redactionstatus": { "type": "boolean" }
      },
      "xml": { "name": "contentitem" }
    },
    "EmailList": {
      "type": "object",
      "properties": {
        "email": { "type": "array", "items": { "type": "string" } }
      },
      "xml": { "name": "emaillist" }
    },
    "ExperiencesDBO": {
      "type": "object",
      "properties": {
        "experience": { "type": "array", "items": { "type": "string" } }
      }
    },
    "FileDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "extension": { "type": "string" },
        "folderpath": { "type": "string" },
        "filehttplink": { "type": "string" },
        "folderhttplink": { "type": "string" },
        "filesize": { "type": "integer", "format": "int64" }
      }
    },
    "Filepermissions": {
      "type": "object",
      "properties": {
        "view": { "type": "string" },
        "update": { "type": "string" },
        "delete": { "type": "string" },
        "disableprint": { "type": "string" },
        "disablesave": { "type": "string" },
        "watermark": { "type": "string" }
      },
      "xml": { "name": "filepermissions" }
    },
    "FilesDBO": {
      "type": "object",
      "properties": {
        "file": {
          "type": "array",
          "items": { "$ref": "#/definitions/FileDBO" }
        },
        "attachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/AttachmentDBO" }
        }
      }
    },
    "Folderpermissions": {
      "type": "object",
      "properties": {
        "viewfolder": { "type": "string" },
        "viewfiles": { "type": "string" },
        "addfiles": { "type": "string" },
        "uploadfiles": { "type": "string" },
        "updatefiles": { "type": "string" },
        "deletefiles": { "type": "string" },
        "admin": { "type": "string" },
        "disableprint": { "type": "string" },
        "disablesave": { "type": "string" },
        "watermark": { "type": "string" }
      },
      "xml": { "name": "folderpermissions" }
    },
    "Group": {
      "type": "object",
      "properties": {
        "groupId": { "type": "integer", "format": "int32" },
        "groupName": { "type": "string" },
        "groupDescription": { "type": "string" },
        "siteName": { "type": "string" },
        "siteId": { "type": "integer", "format": "int32" },
        "groupType": { "type": "string" },
        "defaultSiteGroup": { "type": "integer", "format": "int32" },
        "associateSystemGroupId": { "type": "integer", "format": "int32" },
        "sourceTypeId": { "type": "integer", "format": "int32" },
        "hyperlink": { "type": "string" }
      }
    },
    "GroupsDBO": {
      "type": "object",
      "properties": {
        "group": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "caption": { "type": "string" },
        "imagelink": { "type": "string" },
        "apilink": { "type": "string" },
        "name": { "type": "string" },
        "extension": { "type": "string" },
        "filesize": { "type": "string" },
        "imagetype": { "type": "string" },
        "createddate": { "type": "string" },
        "displayversion": { "type": "string" },
        "parentfolderid": { "type": "string" },
        "folderpath": { "type": "string" },
        "modifiedby": { "type": "string" },
        "modifieddate": { "type": "string" },
        "taskcount": { "type": "string" },
        "commentcount": { "type": "string" },
        "id": { "type": "string" },
        "siteid": { "type": "string" },
        "height": { "type": "string" },
        "width": { "type": "string" },
        "redactionStatus": {
          "type": "boolean",
          "xml": { "name": "redactionstatus" }
        }
      }
    },
    "Images": {
      "type": "object",
      "properties": {
        "image": { "type": "array", "items": { "$ref": "#/definitions/Image" } }
      }
    },
    "Likes": {
      "type": "object",
      "properties": {
        "loggeduserlike": { "type": "integer", "format": "int32" },
        "user": { "type": "array", "items": { "$ref": "#/definitions/user" } }
      },
      "xml": { "name": "likes" }
    },
    "Link": {
      "type": "object",
      "properties": {
        "link": {
          "type": "array",
          "items": { "$ref": "#/definitions/NameValueLink" }
        }
      }
    },
    "LinkPreview": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "originalurl": { "type": "string" },
        "previewurl": { "type": "string" },
        "description": { "type": "string" },
        "provider": { "type": "string" },
        "providerurl": { "type": "string" },
        "providerDisplay": { "type": "string" },
        "faviconurl": { "type": "string" },
        "dominantcolor": { "type": "string" },
        "imageurl": { "type": "string" },
        "imagewidth": { "type": "string" },
        "imageheight": { "type": "string" },
        "previewtype": { "type": "string" },
        "contenthtml": { "type": "string" }
      },
      "xml": { "name": "linkpreview" }
    },
    "MetadataListDBO": {
      "type": "object",
      "properties": {
        "metadataname": { "type": "array", "items": { "type": "string" } },
        "metadatavalue": { "type": "array", "items": { "type": "string" } }
      }
    },
    "NameValueLink": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "value": { "type": "string" }
      }
    },
    "Parentcontent": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "link": { "type": "string" },
        "apilink": { "type": "string" }
      },
      "xml": { "name": "parentcontent" }
    },
    "Permissions": {
      "type": "object",
      "properties": {
        "inherited": { "type": "string" },
        "usergrouppermissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserGroupPermissions" }
        },
        "add": { "type": "string" },
        "edit": { "type": "string" },
        "delete": { "type": "string" }
      },
      "xml": { "name": "permissions" }
    },
    "ShareWith": {
      "type": "object",
      "properties": {
        "emaillist": { "$ref": "#/definitions/EmailList" },
        "sites": { "$ref": "#/definitions/sites" },
        "groups": { "$ref": "#/definitions/groups" }
      },
      "xml": { "name": "sharewith" }
    },
    "UserGroupPermissions": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "folderpermissions": { "$ref": "#/definitions/Folderpermissions" },
        "filepermissions": { "$ref": "#/definitions/Filepermissions" },
        "usergrouptype": {
          "type": "string",
          "xml": { "attribute": true },
          "enum": ["1/2"]
        }
      },
      "xml": { "name": "usergrouppermissions" }
    },
    "UserName": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "firstname": { "type": "string" },
        "lastname": { "type": "string" },
        "goesby": { "type": "string" }
      },
      "xml": { "name": "username" }
    },
    "comments": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "array",
          "items": { "$ref": "#/definitions/Comment" }
        }
      }
    },
    "groups": {
      "type": "object",
      "properties": {
        "group": { "type": "array", "items": { "$ref": "#/definitions/Group" } }
      },
      "xml": { "name": "groups" }
    },
    "ActivityFilter": {
      "type": "object",
      "properties": {
        "sitefilter": { "$ref": "#/definitions/SiteFilter" },
        "contenttypes": { "$ref": "#/definitions/ContentTypes" },
        "peoplefilter": { "$ref": "#/definitions/PeopleFilter" }
      },
      "xml": { "name": "activityfilter" }
    },
    "ContentTypes": {
      "type": "object",
      "properties": {
        "contenttype": {
          "type": "array",
          "items": { "$ref": "#/definitions/DisplaynameValue" }
        }
      }
    },
    "DisplaynameValue": {
      "type": "object",
      "properties": {
        "displayname": { "type": "string" },
        "value": { "type": "string" }
      }
    },
    "PeopleFilter": {
      "type": "object",
      "properties": {
        "peoples": { "$ref": "#/definitions/Peoples" },
        "myorganisation": { "$ref": "#/definitions/DisplaynameValue" },
        "following": { "$ref": "#/definitions/DisplaynameValue" },
        "followers": { "$ref": "#/definitions/DisplaynameValue" },
        "mentionsme": { "$ref": "#/definitions/DisplaynameValue" }
      }
    },
    "Peoples": {
      "type": "object",
      "properties": {
        "people": { "type": "array", "items": { "$ref": "#/definitions/user" } }
      }
    },
    "SiteFilter": {
      "type": "object",
      "properties": {
        "favourite": { "$ref": "#/definitions/DisplaynameValue" },
        "memberoff": { "$ref": "#/definitions/DisplaynameValue" },
        "sites": { "$ref": "#/definitions/sites" }
      }
    },
    "Activities": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "array",
          "items": { "$ref": "#/definitions/Activity" }
        },
        "lastactivityid": { "type": "integer", "format": "int32" }
      }
    },
    "ColumnErrorDBO": {
      "type": "object",
      "properties": {
        "index": { "type": "integer", "format": "int32" },
        "columnid": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "statuscode": { "type": "string" },
        "message": { "type": "string" }
      },
      "xml": { "name": "column" }
    },
    "ColumnErrorsDBO": {
      "type": "object",
      "properties": {
        "column": {
          "type": "array",
          "items": { "$ref": "#/definitions/ColumnErrorDBO" }
        },
        "failedEntities": { "type": "integer", "format": "int32" },
        "successEntities": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "columns" }
    },
    "ISheetTemplateParameter": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "data": { "type": "string" }
      },
      "xml": { "name": "templateparameter" }
    },
    "ISheetTemplateParameterGroup": {
      "type": "object",
      "properties": {
        "templateruleid": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "templateparameter": {
          "type": "array",
          "items": {
            "xml": { "name": "templateparameter" },
            "$ref": "#/definitions/ISheetTemplateParameter"
          }
        }
      },
      "xml": { "name": "templateparametergroup" }
    },
    "ISheetTemplateParameterGroups": {
      "type": "object",
      "properties": {
        "templateparametergroup": {
          "type": "array",
          "items": {
            "xml": { "name": "templateparametergroup" },
            "$ref": "#/definitions/ISheetTemplateParameterGroup"
          }
        }
      },
      "xml": { "name": "templateparametergroups" }
    },
    "IntegrationResponseDBO": {
      "type": "object",
      "properties": {
        "integrationResponseUsersObject": {
          "$ref": "#/definitions/IntegrationResponseUsersObject"
        },
        "failedEntities": { "type": "integer", "format": "int32" },
        "successEntities": { "type": "integer", "format": "int32" }
      }
    },
    "IntegrationResponseUsersObject": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": { "$ref": "#/definitions/IntegrationUserDBO" }
        }
      },
      "xml": { "name": "users" }
    },
    "IntegrationUserDBO": {
      "type": "object",
      "properties": {
        "index": { "type": "integer", "format": "int32" },
        "userid": { "type": "integer", "format": "int32" },
        "firstname": { "type": "string" },
        "lastname": { "type": "string" },
        "practicegroup": { "type": "string" },
        "langcode": { "type": "string" },
        "localeID": { "type": "string" },
        "publicprofile": { "type": "string" },
        "pwpid": { "type": "string" },
        "usertypeid": { "type": "string" },
        "systemuser": { "type": "string" },
        "email": { "type": "string" },
        "phone": { "type": "string" },
        "mobile": { "type": "string" },
        "department": { "type": "string" },
        "org": { "type": "string" },
        "location": { "$ref": "#/definitions/LocationDBO" },
        "address": { "$ref": "#/definitions/Address" },
        "experiences": { "$ref": "#/definitions/ExperiencesDBO" },
        "sociallinks": { "$ref": "#/definitions/Link" },
        "messaginglink": { "$ref": "#/definitions/Link" },
        "customlink": { "$ref": "#/definitions/Link" },
        "img": { "type": "string" },
        "reportsto": { "type": "string" },
        "metadata": { "$ref": "#/definitions/MetadataListDBO" },
        "groups": { "$ref": "#/definitions/GroupsDBO" },
        "externalid": { "type": "string" },
        "jobtitle": { "type": "string" },
        "secretaryname": { "type": "string" },
        "secretarymail": { "type": "string" },
        "specialities": { "type": "string" },
        "title": { "type": "string" },
        "goesby": { "type": "string" },
        "suffix": { "type": "string" },
        "atomlink": { "type": "string" },
        "bio": { "type": "string" },
        "dateOfBirth": { "type": "string" },
        "link": { "type": "string" },
        "status": { "type": "string" },
        "statuscode": { "type": "string" },
        "message": { "type": "string" },
        "sourcetype": { "type": "string" },
        "orgid": { "type": "string" },
        "ifpartner": { "type": "string" },
        "emaildomain": { "type": "string" },
        "invitationsent": { "type": "string" },
        "createdby": { "type": "string" },
        "createddate": { "type": "string" },
        "modifiedby": { "type": "string" },
        "modifieddate": { "type": "string" },
        "lastlogindate": { "type": "string" },
        "invalidlogins": { "type": "string" },
        "publicwebsiteprofileid": { "type": "string" },
        "resetpassworddate": { "type": "string" },
        "avatar": { "type": "string" },
        "followingcount": { "type": "integer", "format": "int32" },
        "followercount": { "type": "integer", "format": "int32" },
        "following": { "type": "boolean" },
        "sites": { "$ref": "#/definitions/sites" },
        "role": { "type": "string" },
        "isbasicuser": { "type": "string" },
        "encryptedUserId": { "type": "string" },
        "orgName": { "type": "string" }
      },
      "xml": { "name": "user" }
    },
    "ItemErrorDBO": {
      "type": "object",
      "properties": {
        "index": { "type": "integer", "format": "int32" },
        "columns": { "$ref": "#/definitions/ColumnErrorsDBO" },
        "itemid": { "type": "string" },
        "externalid": { "type": "string" },
        "id": { "type": "string" },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "statuscode": { "type": "string" },
        "message": { "type": "string" },
        "successdeletedcount": { "type": "integer", "format": "int32" },
        "failurecount": { "type": "integer", "format": "int32" },
        "failedEntities": { "type": "integer", "format": "int32" },
        "successEntities": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "item" }
    },
    "ItemErrorsDBO": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": { "$ref": "#/definitions/ItemErrorDBO" }
        },
        "failedEntities": { "type": "integer", "format": "int32" },
        "successEntities": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "items" }
    },
    "ProgressiveKeyDBO": {
      "type": "object",
      "properties": {
        "progressivekey": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "progressivekeystatus": { "type": "string" },
        "userid": { "type": "integer", "format": "int32" },
        "responsebody": { "type": "string" },
        "message": { "type": "string" },
        "messagecode": { "type": "string" },
        "integrationResponseDBO": {
          "$ref": "#/definitions/IntegrationResponseDBO"
        },
        "columns": { "$ref": "#/definitions/ColumnErrorsDBO" },
        "items": { "$ref": "#/definitions/ItemErrorsDBO" },
        "importisheettemplate": {
          "$ref": "#/definitions/importISheetTemplateDBO"
        },
        "error": { "$ref": "#/definitions/ErrorDBO" },
        "contentType": { "type": "string" },
        "failedEntities": { "type": "integer", "format": "int32" },
        "downloadlink": { "type": "string" },
        "attachment": { "$ref": "#/definitions/Attachment" },
        "link": { "type": "string" },
        "documentid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "progressivekeyresponse" }
    },
    "importISheetTemplateDBO": {
      "type": "object",
      "properties": {
        "linkedtemplateid": { "type": "integer", "format": "int32" },
        "aliasname": { "type": "string" },
        "linkedisheet": { "type": "string" },
        "importdata": { "type": "string" },
        "appendisheetname": { "type": "string" },
        "templateparametergroups": {
          "$ref": "#/definitions/ISheetTemplateParameterGroups"
        },
        "templateSheetIdMap": {
          "type": "object",
          "additionalProperties": { "type": "integer", "format": "int32" }
        },
        "templateId": { "type": "integer", "format": "int32" },
        "templateTitle": { "type": "string" }
      },
      "xml": { "name": "importisheettemplate" }
    },
    "Attachments": {
      "type": "object",
      "properties": {
        "images": { "$ref": "#/definitions/Images" },
        "files": { "$ref": "#/definitions/FilesDBO" },
        "attachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/AttachmentDBO" }
        }
      },
      "xml": { "name": "attachments" }
    },
    "ResponseDBO": {
      "type": "object",
      "properties": {
        "error": { "type": "string", "xml": { "name": "Error" } },
        "externalIDs": { "type": "string" },
        "status": { "type": "string" },
        "message": { "type": "string" },
        "blogResynchronisationFlag": { "type": "string" },
        "eventResynchronisationFlag": { "type": "string" },
        "response": {
          "type": "array",
          "xml": { "name": "item" },
          "items": {
            "xml": { "name": "item" },
            "$ref": "#/definitions/ResultDBO"
          }
        },
        "blogResponse": {
          "type": "array",
          "xml": { "name": "blogs" },
          "items": {
            "xml": { "name": "blogs" },
            "$ref": "#/definitions/BlogDBO"
          }
        },
        "eventResponse": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventDBO" }
        },
        "categories": { "$ref": "#/definitions/SiteCategoryListDBO" }
      },
      "xml": { "name": "Items" }
    },
    "ResultDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "xml": { "attribute": true } },
        "text": { "type": "string" },
        "errorcolumnname": { "type": "string" }
      }
    },
    "SiteCategoryListDBO": {
      "type": "object",
      "properties": {
        "siteCategory": {
          "type": "array",
          "items": { "$ref": "#/definitions/category" }
        }
      }
    },
    "BlogListDBO": {
      "type": "object",
      "properties": {
        "blogs": {
          "type": "array",
          "xml": { "name": "blog" },
          "items": {
            "xml": { "name": "blog" },
            "$ref": "#/definitions/BlogDBO"
          }
        },
        "blog": {
          "type": "array",
          "items": { "$ref": "#/definitions/BlogDBO" }
        }
      },
      "xml": { "name": "blogs" }
    },
    "CommentDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "html": { "type": "string" },
        "attachments": { "$ref": "#/definitions/Attachments" },
        "folderType": { "type": "string" }
      },
      "xml": { "name": "comment" }
    },
    "CEDocAutoSiteAuditDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "userId": { "type": "integer", "format": "int32" },
        "syncStatus": { "type": "integer", "format": "int32" },
        "reason": { "type": "string" },
        "forceSync": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string" }
      },
      "xml": { "name": "cedocautositesyncstatus" }
    },
    "ContractExpressClientDetails": {
      "type": "object",
      "properties": {
        "clientId": { "type": "string" },
        "clientSecret": { "type": "string" },
        "licenseId": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "client" }
    },
    "ContractExpressServiceClientDetails": {
      "type": "object",
      "properties": {
        "clientId": { "type": "string" },
        "clientSecret": { "type": "string" }
      },
      "xml": { "name": "serviceClient" }
    },
    "ContractExpressDocTemplateDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "createddate": { "type": "string" },
        "modifieddate": { "type": "string" },
        "specifiedisheetattachmentcolumnId": {
          "type": "integer",
          "format": "int32"
        },
        "specifiedisheetcolumn": { "type": "integer", "format": "int32" },
        "viewselectiontype": { "type": "integer", "format": "int32" },
        "version": { "type": "string" },
        "profilereference": { "type": "string" },
        "savedocumenttofolder": { "type": "integer", "format": "int32" },
        "cetemplatereferencename": { "type": "string" },
        "createdby": { "type": "integer", "format": "int32" },
        "displayname": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "sheetid": { "type": "integer", "format": "int32" },
        "modifiedby": { "type": "string" },
        "specifiedfolder": { "type": "integer", "format": "int32" },
        "specifiedfolderId": { "type": "integer", "format": "int32" },
        "status": { "type": "integer", "format": "int32" },
        "viewselectionstr": { "type": "string" },
        "datadescription": { "type": "string" },
        "mappedcolumnstr": { "type": "string" }
      },
      "xml": { "name": "contractexpresstemplate" }
    },
    "ContractExpressDocTemplatesDBO": {
      "type": "object",
      "properties": {
        "contractexpresstemplate": {
          "type": "array",
          "items": {
            "xml": { "name": "contractexpresstemplate" },
            "$ref": "#/definitions/ContractExpressDocTemplateDBO"
          }
        }
      },
      "xml": { "name": "contractexpresstemplates" }
    },
    "DmsDBO": {
      "type": "object",
      "properties": {
        "dmsfolderid": { "type": "string" },
        "dmsParentFolderID": { "type": "string" },
        "dmscreateddate": { "type": "string", "format": "date-time" },
        "dmsmodifiedBy": { "type": "string" },
        "dmsdatabasename": { "type": "string" },
        "dmslink": { "type": "boolean" },
        "dmslinkby": { "type": "string" }
      },
      "xml": { "name": "dms" }
    },
    "FolderDBO": {
      "type": "object",
      "properties": { "folderid": { "type": "string" } },
      "xml": { "name": "folder" }
    },
    "FolderSizeResponseDBO": {
      "type": "object",
      "properties": { "foldersize": { "type": "string" } },
      "xml": { "name": "folder" }
    },
    "DMSDocumentResponseDBO": {
      "type": "object",
      "properties": {
        "documentName": { "type": "string", "xml": { "name": "name" } },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "version": { "type": "integer", "format": "int32" },
        "originalExtension": { "type": "string" },
        "extension": { "type": "string" },
        "location": { "type": "string" },
        "size": { "type": "integer", "format": "int64" },
        "dmsDocID": { "type": "string" },
        "createdDate": { "type": "string" },
        "createdBy": { "$ref": "#/definitions/UserDBO" },
        "modifiedDate": { "type": "string" },
        "modifiedBy": { "$ref": "#/definitions/UserDBO" },
        "id": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "file" }
    },
    "Recipient": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "category": { "type": "string" },
        "categorytext": { "type": "string" },
        "sitename": { "type": "string" },
        "grouptypetext": { "type": "string" },
        "email": { "type": "string" }
      },
      "xml": { "name": "recipient" }
    },
    "Recipients": {
      "type": "object",
      "properties": {
        "internalorganisation": { "type": "string" },
        "sites": { "$ref": "#/definitions/sites" },
        "users": { "$ref": "#/definitions/users" },
        "recipient": {
          "type": "array",
          "items": { "$ref": "#/definitions/Recipient" }
        }
      },
      "xml": { "name": "recipients" }
    },
    "Share": {
      "type": "object",
      "properties": {
        "resourcetype": { "type": "string", "enum": ["folder/file"] },
        "resourceid": { "type": "integer", "format": "int32" },
        "permissions": { "type": "integer", "format": "int32" },
        "shareoption": { "type": "integer", "format": "int32" },
        "sharegroup": { "$ref": "#/definitions/ShareGroup" },
        "microblogmessage": { "type": "string" },
        "expiry": { "type": "string", "example": "Eg. 09 Dec 2014 13:54" },
        "shareid": { "type": "integer", "format": "int32" },
        "microblogid": { "type": "integer", "format": "int32" },
        "resourcename": { "type": "string" },
        "link": { "type": "string" },
        "sharewith": { "$ref": "#/definitions/ShareWith" },
        "privatemessage": { "type": "string" },
        "messageid": { "type": "integer", "format": "int32" },
        "emailsubject": { "type": "string" },
        "emailmessage": { "type": "string" },
        "sharedwithemail": { "type": "string" },
        "password": { "type": "string" },
        "recipients": { "$ref": "#/definitions/Recipients" },
        "approvenewversions": { "type": "integer", "format": "int32" },
        "notification": { "type": "integer", "format": "int32" },
        "applywatermark": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "share" }
    },
    "ShareGroup": {
      "type": "object",
      "properties": {
        "internalorganisation": { "type": "string" },
        "sites": { "$ref": "#/definitions/sites" }
      },
      "xml": { "name": "sharegroup" }
    },
    "Shared": {
      "type": "object",
      "properties": {
        "shareId": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "shareid" }
        },
        "shareName": { "type": "string", "xml": { "name": "sharename" } },
        "shareType": { "type": "string", "xml": { "name": "sharetype" } },
        "shareDate": { "type": "string", "xml": { "name": "sharedate" } },
        "recipients": {
          "xml": { "name": "sharedwith" },
          "$ref": "#/definitions/Recipients"
        },
        "shareStatus": { "type": "string", "xml": { "name": "sharestatus" } },
        "shareExpires": { "type": "string", "xml": { "name": "shareexpires" } }
      },
      "xml": { "name": "share" }
    },
    "SharedContent": {
      "type": "object",
      "properties": {
        "share": {
          "type": "array",
          "items": { "$ref": "#/definitions/Shared" }
        }
      },
      "xml": { "name": "shares" }
    },
    "DMSAddRequestDBO": {
      "type": "object",
      "properties": { "request": { "$ref": "#/definitions/RequestDBO" } },
      "xml": { "name": "addrequest" }
    },
    "RequestDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "xml": { "attribute": true } },
        "type": { "type": "string", "xml": { "attribute": true } },
        "user": { "$ref": "#/definitions/UserDBO" },
        "folder": {
          "type": "array",
          "items": { "$ref": "#/definitions/FolderDBO" }
        },
        "file": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentDBO" }
        }
      },
      "xml": { "name": "request" }
    },
    "DocumentAuditDBO": {
      "type": "object",
      "properties": {
        "actionname": { "type": "string" },
        "actionalias": { "type": "string" },
        "date": { "type": "string" },
        "ipaddress": { "type": "string" },
        "userDBO": { "$ref": "#/definitions/UserDBO" }
      },
      "xml": { "name": "audit" }
    },
    "DocumentAuditsDBO": {
      "type": "object",
      "properties": {
        "audit": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentAuditDBO" }
        }
      },
      "xml": { "name": "audits" }
    },
    "DocumentVersionDBO": {
      "type": "object",
      "properties": {
        "number": { "type": "string" },
        "createddate": { "type": "string" },
        "author": { "$ref": "#/definitions/UserDBO" },
        "notes": { "type": "string" },
        "extension": { "type": "string" },
        "originalextension": { "type": "string" },
        "redactionstatus": { "type": "boolean" }
      },
      "xml": { "name": "version" }
    },
    "Versions": {
      "type": "object",
      "properties": {
        "version": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentVersionDBO" }
        }
      },
      "xml": { "name": "versions" }
    },
    "FileStatusDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "alias": { "type": "string" },
        "id": { "type": "integer", "format": "int32" }
      }
    },
    "FileStatusListDBO": {
      "type": "object",
      "properties": {
        "filestatus": {
          "type": "array",
          "items": { "$ref": "#/definitions/FileStatusDBO" }
        }
      },
      "xml": { "name": "filestatuslist" }
    },
    "FileStatusTypeResponseDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "featurestatus": { "type": "integer", "format": "int32" },
        "filestatuslist": { "$ref": "#/definitions/FileStatusListDBO" },
        "id": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "filestatustype" }
    },
    "FolderDBOV2": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "accessInherited": { "type": "integer", "format": "int32" },
        "batchID": { "type": "string" },
        "dms": { "$ref": "#/definitions/DmsDBO" },
        "id": { "type": "integer", "format": "int32" },
        "link": { "type": "string" },
        "createddate": { "type": "string" },
        "modifieddate": { "type": "string" },
        "child": { "type": "integer", "format": "int32" },
        "filecount": { "type": "integer", "format": "int32" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "folderid": { "type": "integer", "format": "int32" },
        "dmsfolderid": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "location": { "type": "string" },
        "permission": { "$ref": "#/definitions/PermissionDBO" },
        "contentstatus": { "type": "integer", "format": "int32" },
        "autonumbering": {
          "type": "string",
          "xml": { "name": "auto-numbering" }
        },
        "foldersize": { "type": "string" },
        "sharedstatus": { "type": "integer", "format": "int32" },
        "favouritestatus": { "type": "integer", "format": "int32" },
        "foldertype": { "type": "string" },
        "itemId": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "itemid" }
        },
        "folderMetadataSheetId": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "foldermetadatasheetid" }
        }
      },
      "xml": { "name": "folder" }
    },
    "FolderLocationDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "accessInherited": { "type": "integer", "format": "int32" },
        "batchID": { "type": "string" },
        "dms": { "$ref": "#/definitions/DmsDBO" },
        "id": { "type": "integer", "format": "int32" },
        "link": { "type": "string" },
        "createddate": { "type": "string" },
        "createddateUtil": { "type": "string", "format": "date-time" },
        "modifieddate": { "type": "string" },
        "modifieddateUtil": { "type": "string", "format": "date-time" },
        "child": { "type": "integer", "format": "int32" },
        "filecount": { "type": "integer", "format": "int32" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "folderid": { "type": "integer", "format": "int32" },
        "dmsfolderid": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "location": { "type": "string" },
        "permission": { "$ref": "#/definitions/PermissionDBO" },
        "author": { "type": "string" },
        "contentstatus": { "type": "integer", "format": "int32" },
        "autonumbering": {
          "type": "string",
          "xml": { "name": "auto-numbering" }
        },
        "foldersize": { "type": "string" },
        "parentFolder": { "$ref": "#/definitions/ParentFolder" }
      },
      "xml": { "name": "folderlocation" }
    },
    "ParentFolder": {
      "type": "object",
      "properties": {
        "folderId": { "type": "integer", "format": "int32" },
        "folderName": { "type": "string" },
        "noOfFiles": { "type": "integer", "format": "int32" },
        "childFolder": { "$ref": "#/definitions/ParentFolder" }
      },
      "xml": { "name": "folder" }
    },
    "APIEvent": {
      "type": "object",
      "properties": {
        "eventtitle": { "type": "string" },
        "eventcontent": { "type": "string" },
        "showcomment": { "type": "integer", "format": "int32" },
        "tags": { "$ref": "#/definitions/EventTags" },
        "status": { "type": "integer", "format": "int32" },
        "siteid": { "type": "integer", "format": "int32" },
        "categories": { "$ref": "#/definitions/EventCategoriesList" },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "message": { "type": "string" },
        "messageCode": { "type": "integer", "format": "int32" },
        "startdate": { "type": "string" },
        "enddate": { "type": "string" },
        "starttime": { "type": "string" },
        "endtime": { "type": "string" },
        "location": { "type": "string" },
        "createdBy": { "type": "string" },
        "processtype": { "type": "string" },
        "eventID": { "type": "string" },
        "attachments": { "$ref": "#/definitions/EventAttachments" },
        "contacts": { "$ref": "#/definitions/EventContacts" },
        "alldayevent": { "type": "string" },
        "eventcontenthtml": { "type": "string" },
        "modifiedBy": { "type": "string" },
        "reccuring": { "type": "string" },
        "createddate": { "type": "string" },
        "modifieddate": { "type": "string" },
        "repeatdetails": { "$ref": "#/definitions/EventRepeatDetails" },
        "publisheddate": { "type": "string" }
      },
      "xml": { "name": "event" }
    },
    "EventAttachment": {
      "type": "object",
      "properties": {
        "attachmentname": { "type": "string" },
        "attachmenturl": { "type": "string" },
        "fileid": { "type": "string" }
      },
      "xml": { "name": "attachment" }
    },
    "EventAttachments": {
      "type": "object",
      "properties": {
        "attachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventAttachment" }
        }
      },
      "xml": { "name": "attachments" }
    },
    "EventCategoriesList": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventCategory" }
        }
      },
      "xml": { "name": "categories" }
    },
    "EventCategory": {
      "type": "object",
      "properties": {
        "categoryid": { "type": "string" },
        "categoryname": { "type": "string" }
      },
      "xml": { "name": "category" }
    },
    "EventContact": {
      "type": "object",
      "properties": {
        "eventID": { "type": "integer", "format": "int32" },
        "contactID": { "type": "integer", "format": "int32" },
        "contactName": { "type": "string" },
        "contactEmail": { "type": "string" },
        "encryptedContactID": { "type": "string" }
      }
    },
    "EventContacts": {
      "type": "object",
      "properties": {
        "contact": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventContact" }
        }
      },
      "xml": { "name": "contacts" }
    },
    "EventRepeatDetails": {
      "type": "object",
      "properties": {
        "repeat": { "type": "string" },
        "every": { "type": "string" },
        "weeklyrepeat": { "type": "string" },
        "monthlyrepeat": { "type": "string" },
        "endsdate": { "type": "string" },
        "endsafter": { "type": "string" }
      },
      "xml": { "name": "repeatdetails" }
    },
    "EventTag": {
      "type": "object",
      "properties": { "tagname": { "type": "string" } },
      "xml": { "name": "tag" }
    },
    "EventTags": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventTag" }
        }
      },
      "xml": { "name": "tags" }
    },
    "EntityTag": {
      "type": "object",
      "properties": {
        "value": { "type": "string" },
        "weak": { "type": "boolean" }
      }
    },
    "Locale": {
      "type": "object",
      "properties": {
        "language": { "type": "string" },
        "script": { "type": "string" },
        "country": { "type": "string" },
        "variant": { "type": "string" },
        "extensionKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": { "type": "string" }
        },
        "unicodeLocaleAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": { "type": "string" }
        },
        "unicodeLocaleKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": { "type": "string" }
        },
        "iso3Language": { "type": "string" },
        "iso3Country": { "type": "string" },
        "displayLanguage": { "type": "string" },
        "displayScript": { "type": "string" },
        "displayCountry": { "type": "string" },
        "displayVariant": { "type": "string" },
        "displayName": { "type": "string" }
      }
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "subtype": { "type": "string" },
        "parameters": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "wildcardSubtype": { "type": "boolean" },
        "wildcardType": { "type": "boolean" }
      }
    },
    "NewCookie": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "value": { "type": "string" },
        "version": { "type": "integer", "format": "int32" },
        "path": { "type": "string" },
        "domain": { "type": "string" },
        "comment": { "type": "string" },
        "maxAge": { "type": "integer", "format": "int32" },
        "expiry": { "type": "string", "format": "date-time" },
        "secure": { "type": "boolean" },
        "httpOnly": { "type": "boolean" }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "length": { "type": "integer", "format": "int32" },
        "location": { "type": "string", "format": "uri" },
        "language": { "$ref": "#/definitions/Locale" },
        "date": { "type": "string", "format": "date-time" },
        "lastModified": { "type": "string", "format": "date-time" },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "object" }
          }
        },
        "links": {
          "type": "array",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Link" }
        },
        "entity": { "type": "object" },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "object" }
          }
        },
        "mediaType": { "$ref": "#/definitions/MediaType" },
        "cookies": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/NewCookie" }
        },
        "statusInfo": { "$ref": "#/definitions/StatusType" },
        "status": { "type": "integer", "format": "int32" },
        "allowedMethods": {
          "type": "array",
          "uniqueItems": true,
          "items": { "type": "string" }
        },
        "stringHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "entityTag": { "$ref": "#/definitions/EntityTag" }
      }
    },
    "StatusType": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string",
          "enum": [
            "INFORMATIONAL",
            "SUCCESSFUL",
            "REDIRECTION",
            "CLIENT_ERROR",
            "SERVER_ERROR",
            "OTHER"
          ]
        },
        "statusCode": { "type": "integer", "format": "int32" },
        "reasonPhrase": { "type": "string" }
      }
    },
    "UriBuilder": { "type": "object" },
    "EventListDBO": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "xml": { "name": "event" },
          "items": {
            "xml": { "name": "event" },
            "$ref": "#/definitions/EventDBO"
          }
        },
        "event": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventDBO" }
        }
      },
      "xml": { "name": "events" }
    },
    "ISheetViewPermissionDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "view": { "type": "string" },
        "print": { "type": "string" },
        "export": { "type": "string" }
      },
      "xml": { "name": "isheetviewpermission" }
    },
    "iSheetViewPermissionsDBO": {
      "type": "object",
      "properties": {
        "usergrouptype": { "type": "string", "xml": { "attribute": true } },
        "ispermissionenable": { "type": "integer", "format": "int32" },
        "isheetviewpermission": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetViewPermissionDBO" }
        },
        "sourceviewid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "isheetviewpermissions" }
    },
    "ISheetDocTemplateDBO": {
      "type": "object",
      "properties": {
        "isheetdoctemplateid": { "type": "integer", "format": "int32" },
        "templatename": { "type": "string" },
        "templatetype": { "type": "string" },
        "linkedisheet": { "type": "string" },
        "linkedviewtype": { "type": "string" },
        "linkedviewid": { "type": "string" },
        "reportfile": { "type": "string" },
        "generatedocument": { "type": "string" },
        "downloaddocument": { "type": "string" },
        "savetofolder": { "type": "string" },
        "savetospecificfolder": { "type": "string" },
        "savetospecificisheetcolumn": { "type": "string" }
      },
      "xml": { "name": "isheetdoctemplate" }
    },
    "ISheetAccessPermissionDBO": {
      "type": "object",
      "properties": {
        "own": { "type": "string" },
        "thisentity": { "type": "string" },
        "all": { "type": "string" }
      }
    },
    "ISheetPermissionDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "isheetview": { "$ref": "#/definitions/ISheetAccessPermissionDBO" },
        "isheetedit": { "$ref": "#/definitions/ISheetAccessPermissionDBO" },
        "isBusinessUserGroup": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "isheetpermission" }
    },
    "isheetPermissionsDBO": {
      "type": "object",
      "properties": {
        "usergrouptype": { "type": "string", "xml": { "attribute": true } },
        "ispermissionenable": { "type": "integer", "format": "int32" },
        "isheetpermission": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetPermissionDBO" }
        },
        "sourcesheetid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "isheetpermissions" }
    },
    "AttachmentsDBO": {
      "type": "object",
      "properties": {
        "attachment": {
          "type": "array",
          "items": {
            "xml": { "name": "attachment" },
            "$ref": "#/definitions/Attachment"
          }
        }
      },
      "xml": { "name": "attachments" }
    },
    "DocumentsDBO": {
      "type": "object",
      "properties": {
        "document": {
          "type": "array",
          "items": {
            "xml": { "name": "document" },
            "$ref": "#/definitions/DocumentDBO"
          }
        }
      },
      "xml": { "name": "documents" }
    },
    "FilterRow": {
      "type": "object",
      "properties": {
        "rowid": { "type": "integer", "format": "int32" },
        "columnid": { "type": "integer", "format": "int32" },
        "operatorid": { "type": "integer", "format": "int32" },
        "oprand": { "type": "string" },
        "userlookupfilters": { "$ref": "#/definitions/UserLookupFilters" },
        "logicaltype": { "type": "string" },
        "sheetfiltervaluetypeid": { "type": "string" },
        "displaytype": { "type": "string" },
        "scoreConditionTypeid": { "type": "integer", "format": "int32" },
        "sourceColumnId": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "row" }
    },
    "FoldersDBO": {
      "type": "object",
      "properties": {
        "folder": {
          "type": "array",
          "items": {
            "xml": { "name": "folder" },
            "$ref": "#/definitions/FolderDBO"
          }
        }
      },
      "xml": { "name": "folders" }
    },
    "ISheetItemDBO": {
      "type": "object",
      "properties": {
        "recordid": { "type": "string" },
        "linkname": { "type": "string" },
        "apilink": { "type": "string" },
        "httplink": { "type": "string" }
      },
      "xml": { "name": "isheetitem" }
    },
    "ISheetItemsDBO": {
      "type": "object",
      "properties": {
        "isheetitem": {
          "type": "array",
          "items": {
            "xml": { "name": "isheetitem" },
            "$ref": "#/definitions/ISheetItemDBO"
          }
        }
      },
      "xml": { "name": "isheetitems" }
    },
    "JoinConditionDBO": {
      "type": "object",
      "properties": {
        "currentsheetcolumnid": { "type": "integer", "format": "int32" },
        "targetsheetcolumnid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "joincondition" }
    },
    "JoinConditionsDBO": {
      "type": "object",
      "properties": {
        "joincondition": {
          "type": "array",
          "items": { "$ref": "#/definitions/JoinConditionDBO" }
        }
      },
      "xml": { "name": "joinconditions" }
    },
    "LookupDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "email": { "type": "string" },
        "userlookuptype": { "type": "string" }
      },
      "xml": { "name": "lookup" }
    },
    "LookupsDBO": {
      "type": "object",
      "properties": {
        "lookup": {
          "type": "array",
          "items": {
            "xml": { "name": "lookup" },
            "$ref": "#/definitions/LookupDBO"
          }
        }
      },
      "xml": { "name": "lookups" }
    },
    "UserLookupFilter": {
      "type": "object",
      "properties": {
        "oprand": { "type": "string" },
        "userlookuptype": { "type": "string" }
      },
      "xml": { "name": "userlookupfilter" }
    },
    "UserLookupFilters": {
      "type": "object",
      "properties": {
        "userlookupfilter": {
          "type": "array",
          "items": {
            "xml": { "name": "userlookupfilter" },
            "$ref": "#/definitions/UserLookupFilter"
          }
        }
      },
      "xml": { "name": "userlookupfilters" }
    },
    "choice": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "label": { "type": "string" },
        "score": { "type": "string" },
        "color": { "type": "string" },
        "imageid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "choice" }
    },
    "choices": {
      "type": "object",
      "properties": {
        "choice": {
          "type": "array",
          "items": { "$ref": "#/definitions/choice" }
        }
      },
      "xml": { "name": "choices" }
    },
    "columnConditions": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": { "$ref": "#/definitions/FilterRow" }
        }
      },
      "xml": { "name": "columnconditions" }
    },
    "columnDBO": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "columnid": { "type": "integer", "format": "int32" },
        "name": {
          "type": "string",
          "example": "test",
          "description": "any valid name"
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "example": "Type of the column, column types are obtained from a call to the column types API(api/3/isheets/columntypes)",
          "description": "1"
        },
        "status": { "type": "integer", "format": "int32" },
        "systemgeneratedtype": { "type": "string" },
        "section": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "addtodefaultview": { "type": "string" },
        "columnconditionstate": { "type": "string" },
        "columnconditions": { "$ref": "#/definitions/columnConditions" },
        "columnspecificdetail": {
          "$ref": "#/definitions/columnSpecificDetail"
        },
        "sequence": { "type": "string", "xml": { "attribute": true } },
        "attributecolumnid": { "type": "string", "xml": { "attribute": true } },
        "rawdata": { "$ref": "#/definitions/rawData" },
        "colViewPosition": { "type": "integer", "format": "int32" },
        "columntype": { "type": "string" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "injectReferenceColumn": { "type": "integer", "format": "int32" },
        "parentColumnID": { "type": "integer", "format": "int32" },
        "reusecolumnidfromisheet": {
          "type": "integer",
          "format": "int32",
          "example": "{instance}/api/8/isheets/admin/{isheetid}/choicecolumnoptions",
          "description": "The id of the isheet column (Optional). This param is only for add/update isheet column API. A user can set the choice/score column id for which s(he) wants the items to set into the specified iSheet column in the request body. A user can get the id of column using API."
        },
        "choicelistid": {
          "type": "integer",
          "format": "int32",
          "example": "{instance}/api/8/isheets/admin/choicelists?columntype=3 or 17",
          "description": "The id of the choice list (Optional). This param is only for add/update isheet column API. Using the choice list id a user can fetch the choice/score items to save it into the specified iSheet column in the request body. A user can get the id of choice list using API."
        },
        "editpermission": { "type": "integer", "format": "int32" },
        "uploadpermission": { "type": "integer", "format": "int32" },
        "deletepermission": { "type": "integer", "format": "int32" },
        "sourceSheetID": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "column" }
    },
    "columnSpecificDetail": {
      "type": "object",
      "properties": {
        "defaultvalue": { "type": "string" },
        "columnwidth": { "type": "string" },
        "sheetname": { "type": "string" },
        "sitename": { "type": "string" },
        "mandatory": { "type": "string" },
        "allowsearch": { "type": "string" },
        "maxchars": { "type": "integer", "format": "int32" },
        "allowfieldfromanotherisheet": { "type": "string" },
        "allowrichhtmltext": { "type": "string" },
        "numberoflines": { "type": "integer", "format": "int32" },
        "displaymethod": { "type": "string" },
        "includeotheroption": { "type": "string" },
        "singleormultileselectioninsearch": { "type": "string" },
        "choices": { "$ref": "#/definitions/choices" },
        "includeinalertpreferences": { "type": "string" },
        "min": { "type": "string" },
        "max": { "type": "string" },
        "decimalplaces": { "type": "integer", "format": "int32" },
        "showthousandseparators": { "type": "string" },
        "showaspercentage": { "type": "string" },
        "formattype": { "type": "string" },
        "dateformat": { "type": "string" },
        "defaultdateandtime": { "type": "string" },
        "sheetlookup": { "type": "string" },
        "fielddisplay": { "type": "string" },
        "allowmultipleusers": { "type": "string" },
        "methodtype": { "type": "string" },
        "sheetids": { "type": "string" },
        "allowuserstorenamelinks": { "type": "string" },
        "sheetid": { "type": "integer", "format": "int32" },
        "columnids": { "type": "string" },
        "viewid": { "type": "integer", "format": "int32" },
        "allowmultiplevalues": { "type": "string" },
        "restrictdelete": { "type": "string" },
        "displaycolumnnameprefix": { "type": "string" },
        "linkname": { "type": "string" },
        "donotcountweekendsonlycountmontofri": { "type": "string" },
        "joinconditions": { "$ref": "#/definitions/JoinConditionsDBO" },
        "formula": { "type": "string" },
        "startvalue": { "type": "integer", "format": "int32" },
        "prefix": { "type": "string" },
        "postfix": { "type": "string" },
        "minlength": { "type": "integer", "format": "int32" },
        "lookupglossarysheetid": { "type": "integer", "format": "int32" },
        "lookupglossarysheetviewid": { "type": "integer", "format": "int32" },
        "width": { "type": "integer", "format": "int32" },
        "otherscorevalue": { "type": "string" },
        "importdatafromexternalsource": { "type": "string" },
        "analysisengine": { "type": "string" },
        "attachmentcustomfolderid": {
          "type": "integer",
          "format": "int32",
          "description": "This is used only for attachment column with custom configuration  Allowed values 0 or 1"
        },
        "singleLineEmailValidation": { "type": "string" },
        "allowInlineEditing": { "type": "string" }
      },
      "xml": { "name": "columnspecificdetail" }
    },
    "columns": {
      "type": "object",
      "properties": {
        "column": {
          "type": "array",
          "items": { "$ref": "#/definitions/columnDBO" }
        }
      },
      "xml": { "name": "columns" }
    },
    "rawData": {
      "type": "object",
      "properties": {
        "value": { "type": "string" },
        "choices": { "$ref": "#/definitions/choices" },
        "date": { "type": "string" },
        "time": { "type": "string" },
        "linkdisplayname": { "type": "string" },
        "linkdisplayurl": { "type": "string" },
        "lookups": { "$ref": "#/definitions/LookupsDBO" },
        "folders": { "$ref": "#/definitions/FoldersDBO" },
        "documents": { "$ref": "#/definitions/DocumentsDBO" },
        "fromdate": { "type": "string" },
        "todate": { "type": "string" },
        "attachments": { "$ref": "#/definitions/AttachmentsDBO" },
        "isheetitems": { "$ref": "#/definitions/ISheetItemsDBO" }
      },
      "xml": { "name": "rawdata" }
    },
    "ISheetColumnPermissionDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "view": { "type": "string" },
        "edit": { "type": "string" }
      },
      "xml": { "name": "isheetcolumnpermission" }
    },
    "isheetColumnPermissionsDBO": {
      "type": "object",
      "properties": {
        "usergrouptype": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "ispermissionenable": { "type": "integer", "format": "int32" },
        "sourcecolumnid": { "type": "integer", "format": "int32" },
        "isheetcolumnpermission": {
          "type": "array",
          "items": {
            "xml": { "name": "isheetcolumnpermission" },
            "$ref": "#/definitions/ISheetColumnPermissionDBO"
          }
        }
      },
      "xml": { "name": "isheetcolumnpermissions" }
    },
    "ISheetViews": {
      "type": "object",
      "properties": {
        "isheetview": {
          "type": "array",
          "items": { "$ref": "#/definitions/iSheetView" }
        }
      },
      "xml": { "name": "isheetviews" }
    },
    "SortOrder": {
      "type": "object",
      "properties": {
        "columnid": { "type": "string", "xml": { "attribute": true } },
        "ordertype": { "type": "string", "xml": { "attribute": true } },
        "sortposition": { "type": "string", "xml": { "attribute": true } }
      },
      "xml": { "name": "sortorder" }
    },
    "ViewFilter": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": { "$ref": "#/definitions/FilterRow" }
        }
      },
      "xml": { "name": "viewfilter" }
    },
    "ViewSortOrder": {
      "type": "object",
      "properties": {
        "sortorder": {
          "type": "array",
          "items": { "$ref": "#/definitions/SortOrder" }
        }
      },
      "xml": { "name": "viewsortorder" }
    },
    "iSheetView": {
      "type": "object",
      "properties": {
        "viewid": { "type": "integer", "format": "int32" },
        "title": { "type": "string" },
        "markasdefault": { "type": "integer", "format": "int32" },
        "emailview": { "type": "integer", "format": "int32" },
        "columns": { "$ref": "#/definitions/columns" },
        "viewsortorder": { "$ref": "#/definitions/ViewSortOrder" },
        "viewfilter": { "$ref": "#/definitions/ViewFilter" },
        "allowInlineEditing": { "type": "string" },
        "sourceSheetID": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "isheetview" }
    },
    "ChoiceListItem": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "label": { "type": "string" },
        "score": { "type": "number" },
        "color": { "type": "string" },
        "imageid": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "item" }
    },
    "ChoiceListItems": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "xml": { "name": "item" },
            "$ref": "#/definitions/ChoiceListItem"
          }
        }
      },
      "xml": { "name": "items" }
    },
    "choicelist": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "columntype": { "type": "string" },
        "createdby": { "type": "integer", "format": "int32" },
        "createddate": { "type": "string" },
        "items": { "$ref": "#/definitions/ChoiceListItems" }
      },
      "xml": { "name": "choicelist" }
    },
    "choicelists": {
      "type": "object",
      "properties": {
        "totalcount": { "type": "integer", "format": "int32" },
        "totaldisplay": { "type": "integer", "format": "int32" },
        "choicelist": {
          "type": "array",
          "items": {
            "xml": { "name": "choicelist" },
            "$ref": "#/definitions/choicelist"
          }
        }
      },
      "xml": { "name": "choicelists" }
    },
    "isheetSettings": {
      "type": "object",
      "properties": { "landingsheetid": { "type": "string" } },
      "xml": { "name": "isheetsettings" }
    },
    "ImportISheetTemplatesDBO": {
      "type": "object",
      "properties": {
        "importisheettemplate": {
          "type": "array",
          "items": {
            "xml": { "name": "importisheettemplate" },
            "$ref": "#/definitions/importISheetTemplateDBO"
          }
        }
      },
      "xml": { "name": "importisheettemplates" }
    },
    "ISheetDocTemplatesDBO": {
      "type": "object",
      "properties": {
        "isheetdoctemplate": {
          "type": "array",
          "items": {
            "xml": { "name": "isheetdoctemplate" },
            "$ref": "#/definitions/ISheetDocTemplateDBO"
          }
        }
      },
      "xml": { "name": "isheetdoctemplates" }
    },
    "DataDBO": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": { "$ref": "#/definitions/ItemDBO" }
        }
      },
      "xml": { "name": "data" }
    },
    "HeadColumnDBO": {
      "type": "object",
      "properties": {
        "columnValue": { "type": "string" },
        "sequence": { "type": "string", "xml": { "attribute": true } }
      },
      "xml": { "name": "headcolumn" }
    },
    "HeadDBO": {
      "type": "object",
      "properties": {
        "headColumn": {
          "type": "array",
          "items": { "$ref": "#/definitions/HeadColumnDBO" }
        }
      },
      "xml": { "name": "headColumn" }
    },
    "ISheetsDBO": {
      "type": "object",
      "properties": {
        "isheet": {
          "type": "array",
          "items": {
            "xml": { "name": "isheet" },
            "$ref": "#/definitions/sheetDBO"
          }
        }
      },
      "xml": { "name": "isheets" }
    },
    "ItemDBO": {
      "type": "object",
      "properties": {
        "externalID": { "type": "string", "xml": { "attribute": true } },
        "itemID": { "type": "string", "xml": { "attribute": true } },
        "column": {
          "type": "array",
          "items": { "$ref": "#/definitions/column" }
        }
      },
      "xml": { "name": "item" }
    },
    "MetaDataDBO": {
      "type": "object",
      "properties": {
        "siteName": { "type": "string" },
        "sheetName": { "type": "string" },
        "siteid": { "type": "string" },
        "sheetid": { "type": "string" }
      },
      "xml": { "name": "metaData" }
    },
    "isheetDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "title": { "type": "string" },
        "description": { "type": "string" },
        "status": { "type": "string" },
        "accesstype": { "type": "string" },
        "type": { "type": "string" },
        "viewlink": { "type": "string" },
        "allowsections": { "type": "string" },
        "allowlookup": { "type": "string" },
        "displayisheet": { "type": "string" },
        "searchasdefaultview": { "type": "string" },
        "enableversion": { "type": "string" },
        "enablesheetalerter": { "type": "string" },
        "alertercondition": { "type": "string" },
        "overrideitemmodifieddate": { "type": "string" },
        "enablebulkinsertupdate": { "type": "string" },
        "fielddescriptions": { "type": "string" },
        "enablerowlocking": { "type": "string" },
        "setcharlimittruncatemultilinetextenabled": { "type": "string" },
        "setcharlimittruncatemultilinetextval": { "type": "string" },
        "allowchoicelistvaluesforreuse": { "type": "string" },
        "allowscorelistvaluesforreuse": { "type": "string" },
        "allowIsheetComments": { "type": "string" },
        "shareRecordsLimit": { "type": "integer", "format": "int32" },
        "shareRecordsLimitEnabled": { "type": "integer", "format": "int32" },
        "enableIsheetAddRecordFormSharing": { "type": "string" },
        "allowViewBaseRendering": { "type": "string" },
        "columns": { "$ref": "#/definitions/columns" },
        "recordcount": { "type": "string", "xml": { "attribute": true } },
        "metadata": { "$ref": "#/definitions/MetaDataDBO" },
        "head": { "$ref": "#/definitions/HeadDBO" },
        "data": { "$ref": "#/definitions/DataDBO" },
        "sheettypeid": { "type": "integer", "format": "int32" },
        "enableSmartForm": {
          "type": "string",
          "xml": { "name": "enablesmartform" }
        }
      },
      "xml": { "name": "isheet" }
    },
    "ISheetSectionDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "description": { "type": "string" }
      },
      "xml": { "name": "section" }
    },
    "ISheetSectionsDBO": {
      "type": "object",
      "properties": {
        "section": {
          "type": "array",
          "items": {
            "xml": { "name": "section" },
            "$ref": "#/definitions/ISheetSectionDBO"
          }
        }
      },
      "xml": { "name": "sections" }
    },
    "ColumnTypeDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "alias": { "type": "string" }
      },
      "xml": { "name": "type" }
    },
    "ColumnTypesDBO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "array",
          "items": { "$ref": "#/definitions/ColumnTypeDBO" }
        }
      },
      "xml": { "name": "columntypes" }
    },
    "isheetItemSearchDBO": {
      "type": "object",
      "properties": {
        "allofthesewords": { "type": "string" },
        "anyofthesewords": { "type": "string" },
        "excludethesewords": { "type": "string" },
        "data": { "$ref": "#/definitions/DataDBO" },
        "expressionquery": { "type": "string" }
      },
      "xml": { "name": "filterdata" }
    },
    "AuditDBO": {
      "type": "object",
      "properties": {
        "auditid": { "type": "string", "xml": { "attribute": true } },
        "itemid": { "type": "integer", "format": "int32" },
        "actionuser": { "type": "string" },
        "actionname": { "type": "string" },
        "actionalias": { "type": "string" },
        "version": { "type": "integer", "format": "int32" },
        "date": { "type": "string" },
        "ipaddress": { "type": "string" }
      },
      "xml": { "name": "audit" }
    },
    "AuditsDBO": {
      "type": "object",
      "properties": {
        "nextauditid": { "type": "string" },
        "audit": {
          "type": "array",
          "items": { "$ref": "#/definitions/AuditDBO" }
        }
      },
      "xml": { "name": "audits" }
    },
    "downloadAttachmentParamDBO": {
      "type": "object",
      "required": ["viewid"],
      "properties": {
        "viewid": { "type": "string" },
        "itemidcsv": { "type": "string" }
      },
      "xml": { "name": "downloadattachmentparam" }
    },
    "column": {
      "type": "object",
      "properties": {
        "sequence": { "type": "string", "xml": { "attribute": true } },
        "rawData": { "$ref": "#/definitions/rawDataDBO" },
        "title": { "type": "string" },
        "type": { "type": "string" },
        "mendatory": { "type": "boolean" },
        "columnID": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "column" }
    },
    "columnListDBO": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "xml": { "name": "column" },
          "items": {
            "xml": { "name": "column" },
            "$ref": "#/definitions/column"
          }
        }
      },
      "xml": { "name": "columns" }
    },
    "rawDataDBO": {
      "type": "object",
      "properties": {
        "text": { "type": "array", "items": { "type": "string" } },
        "linkDisplayName": { "type": "string" },
        "linkDisplayURL": { "type": "string" }
      },
      "xml": { "name": "rawData" }
    },
    "sheetDBO": {
      "type": "object",
      "properties": {
        "metaData": { "$ref": "#/definitions/MetaDataDBO" },
        "head": { "$ref": "#/definitions/HeadDBO" },
        "data": { "$ref": "#/definitions/DataDBO" },
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "type": { "type": "string" },
        "templateID": { "type": "integer", "format": "int32" },
        "isheetRecordID": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "sheet" }
    },
    "templateDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "template" }
    },
    "templateListDBO": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "xml": { "name": "template" },
          "items": {
            "xml": { "name": "template" },
            "$ref": "#/definitions/templateDBO"
          }
        }
      },
      "xml": { "name": "templates" }
    },
    "templateISheetDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "columnList": {
          "xml": { "name": "columns" },
          "$ref": "#/definitions/columnListDBO"
        }
      },
      "xml": { "name": "templateiSheet" }
    },
    "templateISheetListDBO": {
      "type": "object",
      "properties": {
        "templateISheet": {
          "type": "array",
          "xml": { "name": "templateiSheet" },
          "items": {
            "xml": { "name": "templateiSheet" },
            "$ref": "#/definitions/templateISheetDBO"
          }
        }
      },
      "xml": { "name": "templateiSheets" }
    },
    "deleteItemsDBO": {
      "type": "object",
      "properties": {
        "metaDataDBO": { "$ref": "#/definitions/MetaDataDBO" },
        "items": { "type": "string" }
      },
      "xml": { "name": "delete-items" }
    },
    "ISheetTemplateDBO": {
      "type": "object",
      "properties": {
        "templateid": { "type": "integer", "format": "int32" },
        "title": { "type": "string" },
        "status": { "type": "string" },
        "templateparametergroups": {
          "$ref": "#/definitions/ISheetTemplateParameterGroups"
        }
      },
      "xml": { "name": "template" }
    },
    "ISheetTemplatesDBO": {
      "type": "object",
      "properties": {
        "template": {
          "type": "array",
          "items": {
            "xml": { "name": "template" },
            "$ref": "#/definitions/ISheetTemplateDBO"
          }
        }
      },
      "xml": { "name": "templates" }
    },
    "UserLike": {
      "type": "object",
      "properties": {
        "userid": { "type": "string" },
        "firstname": { "type": "string" },
        "lastname": { "type": "string" },
        "email": { "type": "string" },
        "department": { "type": "string" },
        "org": { "type": "string" },
        "jobtitle": { "type": "string" },
        "title": { "type": "string" },
        "avatarhttplink": { "type": "string" },
        "avatarapilink": { "type": "string" },
        "httplink": { "type": "string" }
      },
      "xml": { "name": "user" }
    },
    "UserLikes": {
      "type": "object",
      "properties": {
        "userID": { "type": "integer", "format": "int32" },
        "fullName": { "type": "string" },
        "follow": { "type": "integer", "format": "int32" },
        "jobTitle": { "type": "string" },
        "contentRefTypeID": { "type": "string" },
        "avatar": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" }
      }
    },
    "Microblog": {
      "type": "object",
      "properties": {
        "description": { "type": "string" },
        "recipients": { "$ref": "#/definitions/Recipients" },
        "images": { "$ref": "#/definitions/Images" },
        "files": { "$ref": "#/definitions/FilesDBO" }
      },
      "xml": { "name": "microblog" }
    },
    "Menu": {
      "type": "object",
      "properties": {
        "menuid": { "type": "integer", "format": "int32" },
        "menutypealias": { "type": "string" },
        "contentid": { "type": "integer", "format": "int32" },
        "contenttypeid": { "type": "integer", "format": "int32" },
        "contenttypealias": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "numberofcolumns": { "type": "integer", "format": "int32" },
        "parentmenuid": { "type": "integer", "format": "int32" },
        "displayorder": { "type": "integer", "format": "int32" },
        "externalurl": { "type": "string" },
        "linktarget": { "type": "string" },
        "mobilemenucssclassname": { "type": "string" },
        "mobilemenucssstyle": { "type": "string" },
        "mobilesubmenucssclassname": { "type": "string" },
        "mobilesubmenucssstyle": { "type": "string" },
        "parentfolderid": { "type": "integer", "format": "int32" },
        "menucssclassname": { "type": "string" },
        "menucssstyle": { "type": "string" },
        "submenucssclassname": { "type": "string" },
        "submenucssstyle": { "type": "string" },
        "submenualign": { "type": "string" },
        "sheetviewid": { "type": "integer", "format": "int32" },
        "sheetitemid": { "type": "integer", "format": "int32" },
        "sheetviewmode": { "type": "integer", "format": "int32" },
        "modulealias": { "type": "string" },
        "menuitemtitles": { "$ref": "#/definitions/MenuItemTitles" },
        "itemid": { "type": "integer", "format": "int32" },
        "disablelink": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "menu" }
    },
    "MenuItemTitle": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "tooltip": { "type": "string" },
        "language": { "type": "string" },
        "newtitle": { "type": "string" }
      }
    },
    "MenuItemTitles": {
      "type": "object",
      "properties": {
        "menuitemtitle": {
          "type": "array",
          "items": { "$ref": "#/definitions/MenuItemTitle" }
        }
      }
    },
    "Menus": {
      "type": "object",
      "properties": {
        "menu": { "type": "array", "items": { "$ref": "#/definitions/Menu" } }
      },
      "xml": { "name": "menus" }
    },
    "SiteNavigationSettingsDBO": {
      "type": "object",
      "properties": {
        "siteNavigationType": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "site" }
    },
    "ContactDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "typeid": { "type": "string" },
        "contacttier": { "type": "string" },
        "orgcontactid": { "type": "string" }
      },
      "xml": { "name": "contact" }
    },
    "Partner": {
      "type": "object",
      "properties": {
        "orgpartnerid": { "type": "string" },
        "userid": { "type": "string" },
        "status": { "type": "string" },
        "orderid": { "type": "string" }
      },
      "xml": { "name": "keycontact" }
    },
    "PartnersDBO": {
      "type": "object",
      "properties": {
        "keycontact": {
          "type": "array",
          "items": { "$ref": "#/definitions/Partner" }
        }
      },
      "xml": { "name": "keycontacts" }
    },
    "organisation": {
      "type": "object",
      "required": ["name", "status"],
      "properties": {
        "name": {
          "type": "string",
          "example": "E.g. HighQ",
          "description": "Any Valid String(MAX 512 Chars)"
        },
        "link": { "type": "string" },
        "orgid": { "type": "string" },
        "companyswitchboard": { "type": "string" },
        "externalid": { "type": "string" },
        "contact": { "$ref": "#/definitions/ContactDBO" },
        "orgindustryid": { "type": "string" },
        "status": {
          "type": "string",
          "description": "Status of organisation",
          "enum": ["Active/Archive/Pending"]
        },
        "onlineserviceslink": { "type": "string" },
        "disableeditprofile": { "type": "string" },
        "internal": { "type": "string" },
        "restrictdirectlogin": { "type": "string" },
        "strategic": { "type": "string" },
        "keycontacts": {
          "description": "upto maximum 10 will be handled",
          "$ref": "#/definitions/PartnersDBO"
        },
        "activateautologin": { "type": "integer", "format": "int32" },
        "category": { "type": "integer", "format": "int32" },
        "guid": { "type": "string" },
        "excludesynchronization": { "type": "integer", "format": "int32" },
        "url": { "type": "string", "description": "Any valid url" },
        "logoid": { "type": "integer", "format": "int32" },
        "logowidth": { "type": "integer", "format": "int32" },
        "logoheight": { "type": "integer", "format": "int32" },
        "homepage": { "type": "integer", "format": "int32" },
        "createddate": { "type": "string" },
        "noofusers": { "type": "string" }
      },
      "xml": { "name": "organisation" }
    },
    "Organisations": {
      "type": "object",
      "properties": {
        "total": { "type": "integer", "format": "int32" },
        "totalCount": { "type": "integer", "format": "int32" },
        "organisation": {
          "type": "array",
          "items": { "$ref": "#/definitions/organisation" }
        }
      }
    },
    "DomainDBO": {
      "type": "object",
      "properties": {
        "domainID": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "link": { "type": "string" },
        "status": { "type": "string" }
      },
      "xml": { "name": "domain" }
    },
    "Domains": {
      "type": "object",
      "properties": {
        "total": { "type": "integer", "format": "int32" },
        "totalCount": { "type": "integer", "format": "int32" },
        "domain": {
          "type": "array",
          "items": { "$ref": "#/definitions/DomainDBO" }
        }
      },
      "xml": { "name": "domains" }
    },
    "domain": {
      "type": "object",
      "required": ["status", "url"],
      "properties": {
        "url": {
          "type": "string",
          "example": "aaa.com",
          "description": "any valid url"
        },
        "status": {
          "type": "string",
          "example": "ACTIVE",
          "description": "status of domain",
          "enum": ["ACTIVE", "PENDING", "ARCHIVE"]
        }
      }
    },
    "department": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "orgid": { "type": "string" },
        "link": {
          "type": "string",
          "example": "http://example.com/context/api/5/organisations/departments/3",
          "description": "used in response"
        }
      }
    },
    "departments": {
      "type": "object",
      "properties": {
        "department": {
          "type": "array",
          "items": { "$ref": "#/definitions/department" }
        }
      },
      "xml": { "name": "departments" }
    },
    "SocialAndMessageLink": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "prefix": { "type": "string" }
      },
      "xml": { "name": "link" }
    },
    "messaginglink": {
      "type": "object",
      "properties": {
        "link": {
          "type": "array",
          "items": { "$ref": "#/definitions/SocialAndMessageLink" }
        }
      },
      "xml": { "name": "messaginglink" }
    },
    "sociallinks": {
      "type": "object",
      "properties": {
        "link": {
          "type": "array",
          "items": { "$ref": "#/definitions/SocialAndMessageLink" }
        }
      },
      "xml": { "name": "sociallinks" }
    },
    "address": {
      "type": "object",
      "properties": {
        "addressid": { "type": "string" },
        "orgid": { "type": "string" },
        "street1": { "type": "string" },
        "additional": { "type": "string" },
        "state": { "type": "string" },
        "postcode": { "type": "string" },
        "countryname": { "type": "string" },
        "city": { "type": "string" },
        "status": { "type": "string" },
        "order": { "type": "string" },
        "defaultaddress": { "type": "string" },
        "externalid": { "type": "string" },
        "phone": { "type": "string" },
        "knownas": { "type": "string" },
        "link": { "type": "string" }
      },
      "xml": { "name": "address" }
    },
    "managetools": {
      "type": "object",
      "properties": {
        "messaginglinks": { "type": "integer", "format": "int32" },
        "sociallinks": { "type": "integer", "format": "int32" },
        "customlinks": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "managetools" }
    },
    "Country": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "regionid": { "type": "string" }
      },
      "xml": { "name": "countries" }
    },
    "countries": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "items": { "$ref": "#/definitions/Country" }
        }
      },
      "xml": { "name": "countries" }
    },
    "ConversationDBO": {
      "type": "object",
      "properties": {
        "conversationid": { "type": "string" },
        "recipients": { "$ref": "#/definitions/Recipients" },
        "messages": { "$ref": "#/definitions/MessagesDBO" }
      },
      "xml": { "name": "conversation" }
    },
    "ConversationsDBO": {
      "type": "object",
      "properties": {
        "conversation": {
          "type": "array",
          "items": { "$ref": "#/definitions/ConversationDBO" }
        }
      },
      "xml": { "name": "conversations" }
    },
    "MessageDBO": {
      "type": "object",
      "properties": {
        "messageid": { "type": "string" },
        "recipients": { "$ref": "#/definitions/Recipients" },
        "text": { "type": "string" },
        "html": { "type": "string" },
        "lastsentdatetime": { "type": "string" },
        "lastsentdatetimeutc": { "type": "string" },
        "images": { "$ref": "#/definitions/Images" },
        "attachments": { "$ref": "#/definitions/Attachments" },
        "readStatus": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "message" }
    },
    "MessagesDBO": {
      "type": "object",
      "properties": {
        "message": {
          "type": "array",
          "items": { "$ref": "#/definitions/MessageDBO" }
        }
      },
      "xml": { "name": "messages" }
    },
    "sitegroup": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "copypermissionsfrom": { "type": "string" },
        "message": { "type": "string" },
        "typeID": { "type": "integer", "format": "int32" },
        "type": { "type": "string" },
        "numberofusers": { "type": "string" },
        "created": { "type": "string" },
        "modified": { "type": "string" },
        "systemGroupID": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "basicusergroup": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "group" }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "transactionid": { "type": "string" },
        "statuscode": { "type": "string" },
        "reason": { "type": "string" },
        "receivertype": { "type": "string" }
      },
      "xml": { "name": "transaction" }
    },
    "transactionstatus": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "array",
          "items": { "$ref": "#/definitions/Transaction" }
        }
      },
      "xml": { "name": "transactionstatus" }
    },
    "TransactionIds": {
      "type": "object",
      "properties": {
        "transactionid": { "type": "array", "items": { "type": "string" } }
      },
      "xml": { "name": "transactionids" }
    },
    "ActivityModulePermission": {
      "type": "object",
      "properties": { "view": { "type": "string" } }
    },
    "BlogModulePermission": {
      "type": "object",
      "properties": {
        "view": { "type": "string" },
        "edit": { "type": "string" }
      }
    },
    "EventsModulePermission": {
      "type": "object",
      "properties": {
        "view": { "type": "string" },
        "edit": { "type": "string" }
      }
    },
    "FilesModulePermission": {
      "type": "object",
      "properties": { "view": { "type": "string" } }
    },
    "HomeModulePermission": {
      "type": "object",
      "properties": { "view": { "type": "string" } }
    },
    "TaskModulePermission": {
      "type": "object",
      "properties": {
        "view": { "type": "string" },
        "edit": { "type": "string" }
      }
    },
    "WikiModulePermission": {
      "type": "object",
      "properties": {
        "view": { "type": "string" },
        "edit": { "type": "string" }
      }
    },
    "modulepermissions": {
      "type": "object",
      "properties": {
        "home": { "$ref": "#/definitions/HomeModulePermission" },
        "activity": { "$ref": "#/definitions/ActivityModulePermission" },
        "files": { "$ref": "#/definitions/FilesModulePermission" },
        "wiki": { "$ref": "#/definitions/WikiModulePermission" },
        "blog": { "$ref": "#/definitions/BlogModulePermission" },
        "tasks": { "$ref": "#/definitions/TaskModulePermission" },
        "events": { "$ref": "#/definitions/EventsModulePermission" }
      },
      "xml": { "name": "modulepermissions" }
    },
    "FileModuleSiteTemplate": {
      "type": "object",
      "properties": {
        "permissionlevel": { "type": "string" },
        "approvaldocumentworkflow": { "type": "string" },
        "allowbulkdownload": { "type": "string" },
        "emailnotification": { "type": "string" },
        "showtemplatemap": { "type": "string" },
        "inbox": { "$ref": "#/definitions/Inbox" },
        "emailmetadata": { "$ref": "#/definitions/Emailmetadata" }
      }
    },
    "SiteTemplate": {
      "type": "object",
      "properties": {
        "templateid": { "type": "integer", "format": "int32" },
        "templatename": { "type": "string" },
        "role": { "type": "string" },
        "templatedescription": { "type": "string" },
        "enabledmodules": { "type": "string" },
        "templatefolderID": { "type": "string" },
        "includeUsers": { "type": "boolean" },
        "includeSiteLogo": { "type": "boolean" },
        "folder": { "$ref": "#/definitions/Folder" },
        "templatefolderpermission": { "type": "string" },
        "adminnote": { "type": "string" },
        "module": { "$ref": "#/definitions/ModuleDBO" },
        "enddate": { "type": "string" },
        "startdate": { "type": "string" },
        "archiveddate": { "type": "string" },
        "createddate": { "type": "string" },
        "landingpage": { "type": "string" },
        "clientno": { "type": "string" },
        "status": { "type": "string" },
        "size": { "type": "string" },
        "matterno": { "type": "string" },
        "billingnotes": { "type": "string" },
        "billingnextinvoicedate": { "type": "string" },
        "billinglastinvoicedate": { "type": "string" },
        "filepagecount": { "type": "string" },
        "link": { "type": "string" },
        "templateowner": { "$ref": "#/definitions/UserDBO" },
        "templatehttplink": { "type": "string" },
        "isSyncable": { "type": "integer", "format": "int32" },
        "file": { "$ref": "#/definitions/FileModuleSiteTemplate" },
        "categories": { "$ref": "#/definitions/Categories" },
        "contactus": { "$ref": "#/definitions/ContactUS" },
        "enforceusergroups": { "type": "string" },
        "maxpagecount": { "type": "string" },
        "templatenametranslations": { "$ref": "#/definitions/translations" },
        "templateNameInDefaultLanguage": { "type": "string" },
        "visible": { "type": "integer", "format": "int32" },
        "csvTemplateCategory": { "type": "string" },
        "templateLogoFileSize": { "type": "integer", "format": "int64" },
        "templateLogoHeight": { "type": "integer", "format": "int32" },
        "templateLogoWidth": { "type": "integer", "format": "int32" },
        "biddertemplate": { "$ref": "#/definitions/BidderSiteDBO" },
        "applyTemplateTerms": { "type": "integer", "format": "int32" },
        "templateTerm": { "type": "string" },
        "termType": { "type": "integer", "format": "int32" },
        "templateLogoName": { "type": "string" },
        "templateStatus": { "type": "integer", "format": "int32" },
        "nextLoginTemplateTerms": { "type": "integer", "format": "int32" },
        "defaultTemplateTermsEnable": { "type": "integer", "format": "int32" },
        "templateSource": { "type": "integer", "format": "int32" },
        "psm": { "type": "integer", "format": "int32" },
        "templateLabelDisplay": { "type": "string" },
        "advancedQAPermission": { "type": "integer", "format": "int32" },
        "templateLevelPasswordEnable": { "type": "integer", "format": "int32" },
        "templateLevelPasscodeEnable": { "type": "integer", "format": "int32" },
        "passcodeUsingAuthApp": { "type": "integer", "format": "int32" },
        "allowTemplateAdministration": { "type": "integer", "format": "int32" },
        "ipRestrictionEnable": { "type": "integer", "format": "int32" },
        "availableIP": { "type": "string" },
        "highqDrive": { "type": "integer", "format": "int32" },
        "templatePassword": { "type": "string" },
        "applyTemplateHomePage": { "type": "integer", "format": "int32" },
        "templateHomePageType": { "type": "integer", "format": "int32" },
        "applyDisplayContent": { "type": "integer", "format": "int32" },
        "nextLoginTemplateHomePage": { "type": "integer", "format": "int32" },
        "displayContent": { "type": "string" },
        "templateHomePage": { "type": "string" },
        "templateCategories": { "$ref": "#/definitions/categories" },
        "rssSecurity": { "type": "integer", "format": "int32" },
        "encryptedPassword": { "type": "integer", "format": "int32" },
        "availableIPRangeCSV": { "type": "string" },
        "templateModuleID": { "type": "integer", "format": "int32" },
        "defaultDisplayContent": { "type": "string" },
        "icalSecurity": { "type": "integer", "format": "int32" },
        "excelReportFooter": { "type": "integer", "format": "int32" },
        "excelReportFooterText": { "type": "string" },
        "defaultEmailAlert": { "type": "integer", "format": "int32" },
        "announcementMLJSON": { "type": "string" },
        "templateRestrictionType": {
          "$ref": "#/definitions/SiteTemplateRestrictionType"
        },
        "matternos": { "$ref": "#/definitions/MatterNumbers" },
        "templateType": { "type": "integer", "format": "int32" },
        "templateLicenceType": { "type": "integer", "format": "int32" },
        "rawsitesize": { "$ref": "#/definitions/RawSiteSize" }
      },
      "xml": { "name": "template" }
    },
    "SiteTemplateRestrictionType": {
      "type": "object",
      "properties": {
        "passwordprotected": { "type": "integer", "format": "int32" },
        "twoFactorAuthentication": { "type": "integer", "format": "int32" },
        "termsandconditions": { "type": "integer", "format": "int32" },
        "iprestrictedtemplate": { "type": "integer", "format": "int32" },
        "drm": { "type": "integer", "format": "int32" },
        "checkout": { "type": "integer", "format": "int32" },
        "documentworkflow": { "type": "integer", "format": "int32" },
        "visiableonhighqdrive": { "type": "integer", "format": "int32" }
      }
    },
    "emailalerts": {
      "type": "object",
      "required": ["daily", "immediate", "weekly"],
      "properties": {
        "immediate": {
          "type": "string",
          "description": "immediate alert",
          "enum": ["0/1"]
        },
        "daily": {
          "type": "string",
          "description": "daily alert",
          "enum": ["0/1"]
        },
        "weekly": {
          "type": "string",
          "description": "weekly alert",
          "enum": ["0/1"]
        }
      },
      "xml": { "name": "emailalerts" }
    },
    "Invitation": {
      "type": "object",
      "properties": {
        "messagebody": { "type": "string" },
        "transactionids": { "$ref": "#/definitions/TransactionIds" }
      },
      "xml": { "name": "invitations" }
    },
    "usergroups": {
      "type": "object",
      "properties": {
        "group": {
          "type": "array",
          "items": { "$ref": "#/definitions/sitegroup" }
        }
      },
      "xml": { "name": "groups" }
    },
    "sitetemplates": {
      "type": "object",
      "properties": {
        "siteTemplate": {
          "type": "array",
          "items": { "$ref": "#/definitions/site" }
        }
      }
    },
    "EmailUserDBO": {
      "type": "object",
      "properties": {
        "emailsubject": { "type": "string" },
        "messagebody": { "type": "string" },
        "transactionids": { "$ref": "#/definitions/TransactionIds" }
      },
      "xml": { "name": "emailusers" }
    },
    "sitegroups": {
      "type": "object",
      "properties": {
        "group": {
          "type": "array",
          "items": { "$ref": "#/definitions/sitegroup" }
        }
      },
      "xml": { "name": "sitegroups" }
    },
    "group": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "description": "name of group" },
        "description": { "type": "string" },
        "guid": { "type": "string" },
        "groupID": { "type": "integer", "format": "int32" },
        "link": { "type": "string" },
        "sourcetype": { "type": "string" },
        "message": { "type": "string" },
        "scope": { "type": "string" },
        "numberofusers": { "type": "string" },
        "id": { "type": "string" },
        "type": { "type": "string" },
        "createddate": { "type": "string" },
        "nooforganisation": { "type": "integer", "format": "int32" },
        "subType": { "type": "string" },
        "basicusergroup": { "type": "string" }
      },
      "xml": { "name": "group" }
    },
    "UserIDListDBO": {
      "type": "object",
      "properties": {
        "userid": { "type": "array", "items": { "type": "string" } }
      },
      "xml": { "name": "user" }
    },
    "IntegrationResponseGroupsObject": {
      "type": "object",
      "properties": {
        "total": { "type": "string" },
        "totalcount": { "type": "string" },
        "group": { "type": "array", "items": { "$ref": "#/definitions/group" } }
      },
      "xml": { "name": "groups" }
    },
    "BasicDetails": {
      "type": "object",
      "properties": {
        "clientname": { "type": "string" },
        "productname": { "type": "string" },
        "clientandproductname": { "type": "string" },
        "clientsupportemail": { "type": "string" },
        "version": { "type": "string" },
        "timezone": { "$ref": "#/definitions/Timezone" },
        "instanceid": { "type": "string" },
        "dateformat": { "type": "string" },
        "timeformat": { "type": "string" }
      },
      "xml": { "name": "basicdetails" }
    },
    "FileType": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "typeicon": { "type": "string" },
        "typedesc": { "type": "string" },
        "onlineviewersupport": { "type": "integer", "format": "int32" },
        "preconvertbeforeviewer": { "type": "integer", "format": "int32" },
        "converttopdf": { "type": "integer", "format": "int32" },
        "ocrsupport": { "type": "integer", "format": "int32" },
        "editwithwebdav": { "type": "integer", "format": "int32" },
        "displayname": { "type": "string" },
        "allowed": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "filetype" }
    },
    "FileTypes": {
      "type": "object",
      "properties": {
        "filetype": {
          "type": "array",
          "items": { "$ref": "#/definitions/FileType" }
        }
      },
      "xml": { "name": "filetypes" }
    },
    "Timezone": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "displayname": { "type": "string" },
        "difference": { "type": "string" }
      },
      "xml": { "name": "timezone" }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "listtype": { "type": "string" },
        "filetypes": { "$ref": "#/definitions/FileTypes" },
        "basicdetails": { "$ref": "#/definitions/BasicDetails" }
      },
      "xml": { "name": "configuration" }
    },
    "ApplicationDetails": {
      "type": "object",
      "properties": {
        "officeplugin": { "type": "string" },
        "docautowordplugin": { "type": "string" },
        "highqdriveformac": { "type": "string" },
        "highqdriveforwindows": { "type": "string" },
        "highqdriveforandroid": { "type": "string" },
        "highqdriveforios": { "type": "string" },
        "highqnowforandroid": { "type": "string" },
        "highqstreamforios": { "type": "string" }
      },
      "xml": { "name": "applicationdetails" }
    },
    "ApplianceConnectorInfoDBO": {
      "type": "object",
      "properties": {
        "connectorid": { "type": "string" },
        "connectorname": { "type": "string" },
        "connectortype": { "type": "string" },
        "connectorlastactivitydate": { "type": "string" },
        "connectorlastactivitycount": { "type": "string" },
        "createddate": { "type": "string" },
        "schedulers": { "$ref": "#/definitions/ApplianceSchedulers" },
        "dueDate": { "type": "boolean" },
        "id": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "connectors" }
    },
    "ApplianceConnectorSchedulerInfoDBO": {
      "type": "object",
      "properties": {
        "schedulerid": { "type": "string" },
        "schedulertype": { "type": "string" },
        "schedulername": { "type": "string" },
        "schedulerfrequency": { "type": "string" },
        "lastrundate": { "type": "string" },
        "entitiesprocessed": { "type": "string" },
        "message": { "type": "string" }
      },
      "xml": { "name": "scheduler" }
    },
    "ApplianceConnectors": {
      "type": "object",
      "properties": {
        "connector": {
          "type": "array",
          "items": { "$ref": "#/definitions/ApplianceConnectorInfoDBO" }
        }
      },
      "xml": { "name": "connectors" }
    },
    "ApplianceInfoDBO": {
      "type": "object",
      "properties": {
        "applianceid": { "type": "string" },
        "appliancename": { "type": "string" },
        "applianceversion": { "type": "string" },
        "applianceurl": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "dueDate": { "type": "boolean" },
        "connectors": { "$ref": "#/definitions/ApplianceConnectors" },
        "id": { "type": "integer", "format": "int32" },
        "lastconnectiontime": { "type": "string" },
        "appliancebuilddetails": { "type": "string" }
      },
      "xml": { "name": "appliance" }
    },
    "ApplianceSchedulers": {
      "type": "object",
      "properties": {
        "scheduler": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplianceConnectorSchedulerInfoDBO"
          }
        }
      },
      "xml": { "name": "schedulers" }
    },
    "Task": {
      "type": "object",
      "properties": {
        "parenttaskid": { "type": "integer", "format": "int32" },
        "taskid": { "type": "string" },
        "siteid": { "type": "string" },
        "title": { "type": "string" },
        "description": { "type": "string" },
        "duedate": { "type": "string" },
        "startdate": { "type": "string" },
        "list": { "$ref": "#/definitions/TaskList" },
        "assignees": { "$ref": "#/definitions/TaskAssignees" },
        "priority": { "$ref": "#/definitions/TaskPriority" },
        "status": { "$ref": "#/definitions/TaskStatus" },
        "tags": { "$ref": "#/definitions/TaskTags" },
        "reminders": { "$ref": "#/definitions/TaskReminders" },
        "attachments": { "$ref": "#/definitions/TaskAttachments" },
        "createddate": { "type": "string" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "modifieddate": { "type": "string" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "commentcount": { "type": "string" },
        "sitename": { "type": "string" },
        "completedsubtaskcount": { "type": "integer", "format": "int64" },
        "subtaskcount": { "type": "integer", "format": "int64" }
      },
      "xml": { "name": "task" }
    },
    "TaskAssignee": {
      "type": "object",
      "properties": {
        "assigneeid": { "type": "string" },
        "assigneetypeid": { "type": "string" },
        "assigneename": { "type": "string" },
        "assigneeimg": { "type": "string" }
      },
      "xml": { "name": "assignee" }
    },
    "TaskAssignees": {
      "type": "object",
      "properties": {
        "assignee": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskAssignee" }
        }
      },
      "xml": { "name": "assignees" }
    },
    "TaskAttachment": {
      "type": "object",
      "properties": {
        "attachmentname": { "type": "string" },
        "attachmenturl": { "type": "string" },
        "fileid": { "type": "string" }
      },
      "xml": { "name": "attachment" }
    },
    "TaskAttachments": {
      "type": "object",
      "properties": {
        "attachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskAttachment" }
        }
      },
      "xml": { "name": "attachments" }
    },
    "TaskList": {
      "type": "object",
      "properties": {
        "listid": { "type": "string" },
        "parentlistid": { "type": "string" },
        "listname": { "type": "string" },
        "listtype": { "type": "string" },
        "viewid": { "type": "string" }
      },
      "xml": { "name": "list" }
    },
    "TaskPriority": {
      "type": "object",
      "properties": {
        "priorityid": { "type": "string" },
        "priorityname": { "type": "string" }
      },
      "xml": { "name": "priority" }
    },
    "TaskReminder": {
      "type": "object",
      "properties": {
        "daysbefore": { "type": "string" },
        "reminderid": { "type": "string" },
        "remindertype": { "type": "string" }
      },
      "xml": { "name": "reminder" }
    },
    "TaskReminders": {
      "type": "object",
      "properties": {
        "reminder": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskReminder" }
        }
      },
      "xml": { "name": "reminders" }
    },
    "TaskStatus": {
      "type": "object",
      "properties": {
        "statusid": { "type": "string" },
        "statusname": { "type": "string" },
        "statuscolour": { "type": "string" },
        "textstatuscolour": { "type": "string" },
        "statustype": { "type": "string" },
        "alias": { "type": "string" }
      },
      "xml": { "name": "status" }
    },
    "TaskTag": {
      "type": "object",
      "properties": { "tagname": { "type": "string" } },
      "xml": { "name": "tag" }
    },
    "TaskTags": {
      "type": "object",
      "properties": {
        "tag": { "type": "array", "items": { "$ref": "#/definitions/TaskTag" } }
      },
      "xml": { "name": "tags" }
    },
    "Tasks": {
      "type": "object",
      "properties": {
        "task": { "type": "array", "items": { "$ref": "#/definitions/Task" } }
      },
      "xml": { "name": "tasks" }
    },
    "TaskLists": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskList" }
        }
      },
      "xml": { "name": "lists" }
    },
    "TaskStatuses": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskStatus" }
        }
      },
      "xml": { "name": "statuses" }
    },
    "experience": {
      "type": "object",
      "properties": {
        "experienceid": { "type": "string" },
        "companyname": { "type": "string" },
        "jobtitle": { "type": "string" },
        "location": { "type": "string" },
        "description": { "type": "string" },
        "companywebsite": { "type": "string" },
        "currentlyworking": { "type": "string" },
        "frommonth": { "type": "string" },
        "fromyear": { "type": "string" },
        "tomonth": { "type": "string" },
        "toyear": { "type": "string" },
        "link": { "type": "string" }
      },
      "xml": { "name": "experience" }
    },
    "experiences": {
      "type": "object",
      "properties": {
        "experience": {
          "type": "array",
          "items": { "$ref": "#/definitions/experience" }
        }
      },
      "xml": { "name": "experiences" }
    },
    "UsersDBO": {
      "type": "object",
      "properties": {
        "user": { "$ref": "#/definitions/UserIDListDBO" },
        "email": { "$ref": "#/definitions/emailDBO" },
        "redirecturl": { "type": "string" }
      },
      "xml": { "name": "users" }
    },
    "emailDBO": {
      "type": "object",
      "properties": {
        "subject": { "type": "string" },
        "body": { "type": "string" }
      },
      "xml": { "name": "email" }
    },
    "ApprovalWorkflowResponseDBO": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "siteid": { "type": "integer", "format": "int32" },
        "version": { "type": "integer", "format": "int32" },
        "createddate": { "type": "string" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "modifieddate": { "type": "string" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "stepcount": { "type": "integer", "format": "int32" },
        "id": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "approvaltemplate" }
    },
    "BlogResponseDBO": {
      "type": "object",
      "properties": {
        "blogid": { "type": "integer", "format": "int32" },
        "blogdraftid": { "type": "integer", "format": "int32" },
        "blogdraftype": { "type": "string" },
        "blogtitle": { "type": "string" },
        "blogsnipate": { "type": "string" },
        "blogcontent": { "type": "string" },
        "tags": { "type": "string" },
        "categories": { "$ref": "#/definitions/GriffinCategories" },
        "showComment": { "type": "integer", "format": "int32" },
        "likecount": { "type": "integer", "format": "int32" },
        "favourite": { "type": "integer", "format": "int32" },
        "headerimage": { "$ref": "#/definitions/Image" },
        "author": { "$ref": "#/definitions/Actor" },
        "authorid": { "type": "integer", "format": "int32" },
        "publishdate": { "type": "string" },
        "attachments": { "$ref": "#/definitions/Attachments" },
        "commentcount": { "type": "integer", "format": "int32" },
        "modifieddate": { "type": "string" },
        "scheduleddate": { "type": "string" }
      },
      "xml": { "name": "blog" }
    },
    "GriffinCategories": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": { "$ref": "#/definitions/GriffinCategory" }
        }
      },
      "xml": { "name": "categories" }
    },
    "GriffinCategory": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "contentRefTypeID": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "categoryName": { "type": "string" },
        "permissionTypeAlias": { "type": "string" },
        "categoryRefCount": { "type": "integer", "format": "int32" },
        "viewAccess": { "type": "boolean" },
        "editAccess": { "type": "boolean" },
        "categoryMonth": { "type": "string" },
        "categoryMonthAndYear": { "type": "integer", "format": "int32" },
        "categoryMonthNo": { "type": "string" },
        "categoryYear": { "type": "integer", "format": "int32" },
        "categoryColorCode": { "type": "string" },
        "categoryTextColorCode": { "type": "string" },
        "permissionTypeID": { "type": "integer", "format": "int32" },
        "status": { "type": "integer", "format": "int32" },
        "isDefaultStatus": { "type": "integer", "format": "int32" },
        "taskCount": { "type": "integer", "format": "int32" },
        "removeCategory": { "type": "boolean" },
        "groupEventAccessList": {
          "type": "array",
          "items": { "$ref": "#/definitions/GroupEventAccess" }
        }
      }
    },
    "BlogRequestDBO": {
      "type": "object",
      "properties": {
        "blogtitle": { "type": "string" },
        "blogcontent": { "type": "string" },
        "tags": { "type": "string" },
        "categories": { "type": "string" },
        "publishstatus": { "type": "integer", "format": "int32" },
        "notificationid": { "type": "integer", "format": "int32" },
        "attachments": { "type": "string" },
        "showComment": { "type": "integer", "format": "int32" },
        "publishedby": { "type": "integer", "format": "int32" },
        "publishdate": { "type": "string" }
      },
      "xml": { "name": "blog" }
    },
    "BlogsResponseDBO": {
      "type": "object",
      "required": ["blog", "totalrecords"],
      "properties": {
        "blog": {
          "type": "array",
          "items": { "$ref": "#/definitions/BlogResponseDBO" }
        },
        "totalrecords": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "blogs" }
    },
    "Events": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": { "$ref": "#/definitions/APIEvent" }
        }
      },
      "xml": { "name": "events" }
    },
    "Addresses": {
      "type": "object",
      "properties": {
        "addressOrder": { "type": "integer", "format": "int32" },
        "city": { "type": "string" },
        "state": { "type": "string" },
        "country": { "type": "string" },
        "street1": { "type": "string" },
        "street2": { "type": "string" },
        "street3": { "type": "string" },
        "postCode": { "type": "string" },
        "cityID": { "type": "integer", "format": "int32" },
        "countryID": { "type": "integer", "format": "int32" },
        "addressId": { "type": "integer", "format": "int32" },
        "isDefault": { "type": "integer", "format": "int32" },
        "externalid": { "type": "string" },
        "knownAs": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "telNo": { "type": "string" }
      }
    },
    "ApprovalStatusAdditionalData": {
      "type": "object",
      "properties": {
        "modifiedDate": { "type": "string", "format": "date-time" },
        "currentStep": { "type": "integer", "format": "int32" },
        "totalSteps": { "type": "integer", "format": "int32" },
        "workFlowStatusID": { "type": "integer", "format": "int32" }
      }
    },
    "ApprovalWorkflowContentApprover": {
      "type": "object",
      "properties": {
        "approvalWorkflowContentID": { "type": "integer", "format": "int32" },
        "stepID": { "type": "integer", "format": "int32" },
        "actorID": { "type": "integer", "format": "int32" },
        "actorName": { "type": "string" },
        "userType": { "type": "integer", "format": "int32" },
        "pickedUpBy": { "type": "integer", "format": "int32" },
        "pickedUpByUserName": { "type": "string" },
        "approvalTaskStatus": { "type": "integer", "format": "int32" },
        "reasonForReallocation": { "type": "string" }
      }
    },
    "ApprovalWorkflowContentDBO": {
      "type": "object",
      "properties": {
        "contentType": { "type": "integer", "format": "int32" },
        "approvalWorkflowVersionID": { "type": "integer", "format": "int32" },
        "approvalWorkflowID": { "type": "integer", "format": "int32" },
        "contentID": { "type": "integer", "format": "int32" },
        "currentState": { "type": "integer", "format": "int32" },
        "currentStepID": { "type": "integer", "format": "int32" },
        "sequenceNo": { "type": "integer", "format": "int32" },
        "totalSteps": { "type": "integer", "format": "int32" },
        "nextStepID": { "type": "integer", "format": "int32" },
        "approvalWorkflowContentID": { "type": "integer", "format": "int32" },
        "approvalWorkflowName": { "type": "string" },
        "requestNotes": { "type": "string" },
        "stepName": { "type": "string" },
        "requestedBy": { "type": "integer", "format": "int32" },
        "requestedDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "contentApprovers": {
          "type": "array",
          "items": { "$ref": "#/definitions/ApprovalWorkflowContentApprover" }
        },
        "stepInstructions": { "type": "string" },
        "numberOfContentsInRequest": { "type": "integer", "format": "int32" },
        "requester": { "$ref": "#/definitions/User" },
        "adhocApproval": { "type": "boolean" }
      }
    },
    "CheckoutStatusAdditionalData": {
      "type": "object",
      "properties": {
        "modifiedDate": { "type": "string", "format": "date-time" },
        "userName": { "type": "string" },
        "userID": { "type": "integer", "format": "int32" },
        "organisationName": { "type": "string" },
        "statusNumber": { "type": "integer", "format": "int32" }
      }
    },
    "ContentImage": {
      "type": "object",
      "properties": {
        "imagelink": { "type": "string" },
        "apilink": { "type": "string" },
        "userimageid": { "type": "integer", "format": "int32" },
        "imagedocversion": { "type": "integer", "format": "int32" },
        "imagedocsiteid": { "type": "integer", "format": "int32" },
        "userimageextension": { "type": "string" }
      },
      "xml": { "name": "contentimage" }
    },
    "ContentImages": {
      "type": "object",
      "properties": {
        "contentimage": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContentImage" }
        }
      },
      "xml": { "name": "contentimages" }
    },
    "DBOComments": {
      "type": "object",
      "properties": {
        "commentID": { "type": "integer", "format": "int32" },
        "contentRefTypeID": { "type": "integer", "format": "int32" },
        "refID": { "type": "integer", "format": "int32" },
        "parentCommentID": { "type": "integer", "format": "int32" },
        "commentText": { "type": "string" },
        "commentStatus": { "type": "integer", "format": "int32" },
        "createdUserID": { "type": "integer", "format": "int32" },
        "createdUserName": { "type": "string" },
        "createdDate": { "type": "string", "format": "date-time" },
        "displayCreatedDate": { "type": "string" },
        "modifiedUserID": { "type": "integer", "format": "int32" },
        "modifiedUserName": { "type": "string" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "siteID": { "type": "integer", "format": "int32" },
        "richText": { "type": "integer", "format": "int32" },
        "refVersionID": { "type": "integer", "format": "int32" },
        "commentTextType": { "type": "string" },
        "commentCreatedUserName": { "type": "string" },
        "commentCreatedUserEmail": { "type": "string" },
        "commentedUserAvatar": { "type": "integer", "format": "int32" },
        "currentDate": { "type": "string", "format": "date-time" },
        "contextID": { "type": "integer", "format": "int32" },
        "userLikesList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLikes" }
        },
        "loggedUserLikesActivity": { "type": "boolean" },
        "lastModifiedTime": { "type": "integer", "format": "int64" },
        "encryptedCreatedUserID": { "type": "string" },
        "snipate": { "type": "string" },
        "serviceUnavailableFailureCount": {
          "type": "integer",
          "format": "int32"
        },
        "userImageList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserImage" }
        },
        "tagList": { "type": "array", "items": { "type": "string" } },
        "tags": { "type": "string" },
        "attachmentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "contentRefTypeAlias": { "type": "string" },
        "allUserLikesList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLikes" }
        },
        "siteObj": { "$ref": "#/definitions/Site" },
        "createdUserOrganisationName": { "type": "string" }
      }
    },
    "DocumentAccess": {
      "type": "object",
      "properties": {
        "viewDocument": { "type": "boolean" },
        "updateDocument": { "type": "boolean" },
        "deleteDocument": { "type": "boolean" },
        "disableSave": { "type": "boolean" },
        "applyWatermark": { "type": "boolean" },
        "disablePrintOrCopy": { "type": "boolean" },
        "folderViewDocument": { "type": "boolean" },
        "folderUpdateDocument": { "type": "boolean" },
        "folderDeleteDocument": { "type": "boolean" },
        "folderAdminFolder": { "type": "boolean" },
        "folderDisableSave": { "type": "boolean" },
        "folderApplyWatermark": { "type": "boolean" },
        "folderDisablePrintOrCopy": { "type": "boolean" },
        "userID": { "type": "integer", "format": "int32" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "fullName": { "type": "string" },
        "email": { "type": "string" },
        "organisationID": { "type": "integer", "format": "int32" },
        "organisationName": { "type": "string" },
        "orgStatusID": { "type": "integer", "format": "int32" },
        "hasAccess": { "type": "boolean" },
        "hasDocumentAccess": { "type": "boolean" },
        "siteAdmin": { "type": "boolean" },
        "contentAdmin": { "type": "boolean" },
        "alertFrequencyID": { "type": "integer", "format": "int32" },
        "documentStatus": { "type": "integer", "format": "int32" },
        "folderStatus": { "type": "integer", "format": "int32" },
        "immediate": { "type": "integer", "format": "int32" },
        "daily": { "type": "integer", "format": "int32" },
        "weekly": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "docName": { "type": "string" },
        "currentVersion": { "type": "integer", "format": "int32" },
        "docPages": { "type": "integer", "format": "int64" },
        "extension": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "convertToPDFdocPages": { "type": "integer", "format": "int64" },
        "markupExtension": { "type": "string" },
        "workFlowStatusID": { "type": "integer", "format": "int32" },
        "documentSize": { "type": "integer", "format": "int64" },
        "markUpDocSize": { "type": "integer", "format": "int64" },
        "status": { "type": "integer", "format": "int32" },
        "version": { "type": "integer", "format": "int32" },
        "originalExtension": { "type": "string" },
        "searchResult": { "type": "boolean" },
        "docFolderID": { "type": "integer", "format": "int32" },
        "itemID": { "type": "integer", "format": "int32" },
        "docOwnerUserID": { "type": "integer", "format": "int32" },
        "docID": { "type": "integer", "format": "int32" },
        "docLinkID": { "type": "integer", "format": "int32" },
        "baseContentRefTypeID": { "type": "integer", "format": "int32" },
        "baseRefID": { "type": "integer", "format": "int32" },
        "contentRefTypeID": { "type": "integer", "format": "int32" },
        "refID": { "type": "integer", "format": "int32" },
        "docTypeID": { "type": "integer", "format": "int32" },
        "fileSize": { "type": "integer", "format": "int64" },
        "docLinkTypeID": { "type": "integer", "format": "int32" },
        "versionOwnerID": { "type": "integer", "format": "int32" },
        "docIcon": { "type": "string" },
        "viewerSupprt": { "type": "integer", "format": "int32" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "docComment": { "type": "string" },
        "applyTermsAndCondition": { "type": "integer", "format": "int32" },
        "docIndex": { "type": "integer", "format": "int32" },
        "attachmentID": { "type": "integer", "format": "int32" },
        "attachmentName": { "type": "string" },
        "documentIndex": { "type": "string" },
        "modifiedDate": { "type": "string" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "batchActivityID": { "type": "integer", "format": "int32" },
        "ceDocument": { "type": "boolean" },
        "checkoutStatus": { "type": "integer", "format": "int32" },
        "totalCount": { "type": "integer", "format": "int32" },
        "folderId": { "type": "integer", "format": "int32" },
        "originalSharedDocumentId": { "type": "integer", "format": "int32" },
        "folderName": { "type": "string" },
        "convertToPdf": { "type": "integer", "format": "int32" },
        "viewerSupport": { "type": "integer", "format": "int32" },
        "businessUser": { "type": "boolean" },
        "markupConvertToPdf": { "type": "integer", "format": "int32" },
        "convertToPDFBeforeSend": { "type": "integer", "format": "int32" },
        "convertToPDFWithExtension": { "type": "integer", "format": "int32" },
        "markupConvertToPDFBeforeSend": {
          "type": "integer",
          "format": "int32"
        },
        "ocrViewerSupport": { "type": "integer", "format": "int32" }
      }
    },
    "DocumentForm": {
      "type": "object",
      "properties": {
        "viewDocument": { "type": "boolean" },
        "updateDocument": { "type": "boolean" },
        "deleteDocument": { "type": "boolean" },
        "disableSave": { "type": "boolean" },
        "applyWatermark": { "type": "boolean" },
        "disablePrintOrCopy": { "type": "boolean" },
        "folderViewDocument": { "type": "boolean" },
        "folderUpdateDocument": { "type": "boolean" },
        "folderDeleteDocument": { "type": "boolean" },
        "folderAdminFolder": { "type": "boolean" },
        "folderDisableSave": { "type": "boolean" },
        "folderApplyWatermark": { "type": "boolean" },
        "folderDisablePrintOrCopy": { "type": "boolean" },
        "documentUpload": { "$ref": "#/definitions/FileUpload" },
        "userID": { "type": "integer", "format": "int32" },
        "documentName": { "type": "string" },
        "encodeDocumentName": { "type": "string" },
        "documentComments": { "type": "string" },
        "folderID": { "type": "integer", "format": "int32" },
        "folderName": { "type": "string" },
        "ownerID": { "type": "integer", "format": "int32" },
        "documentID": { "type": "integer", "format": "int32" },
        "refDocumentID": { "type": "integer", "format": "int32" },
        "dmsDocumentID": { "type": "string" },
        "dmsDocumentVersion": { "type": "string" },
        "dmsDataBase": { "type": "string" },
        "documentSize": { "type": "integer", "format": "int64" },
        "version": { "type": "integer", "format": "int32" },
        "versionId": { "type": "integer", "format": "int32" },
        "documentCount": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string" },
        "modifiedDate": { "type": "string" },
        "lastModifiedDate": { "type": "string", "format": "date-time" },
        "modifiedDateObj": { "type": "string", "format": "date-time" },
        "modifiedDateUtc": { "type": "string", "format": "date-time" },
        "lastVersionAddedDate": { "type": "string" },
        "lastVersionDate": { "type": "string", "format": "date-time" },
        "lastVersionDateUTC": { "type": "string", "format": "date-time" },
        "icon": { "type": "string" },
        "userName": { "type": "string" },
        "userEmail": { "type": "string" },
        "organisationName": { "type": "string" },
        "orgStatusID": { "type": "integer", "format": "int32" },
        "extension": { "type": "string" },
        "originalExtension": { "type": "string" },
        "docIndex": { "type": "string" },
        "reviewCount": { "type": "integer", "format": "int32" },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "markUpFileTypeId": { "type": "integer", "format": "int32" },
        "docTypeId": { "type": "integer", "format": "int32" },
        "docFolder": { "type": "string" },
        "loginUserDocumentAccess": { "$ref": "#/definitions/DocumentAccess" },
        "documentAccess": { "$ref": "#/definitions/DocumentAccess" },
        "documentAccessTime": { "type": "string" },
        "last": { "type": "boolean" },
        "status": { "type": "integer", "format": "int32" },
        "compatibilityStatus": { "type": "integer", "format": "int32" },
        "modifiedUserName": { "type": "string" },
        "modifiedOrganisationName": { "type": "string" },
        "docVersionCreatedUserName": { "type": "string" },
        "fileName": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "siteName": { "type": "string" },
        "remainingEngines": { "type": "string" },
        "processingEngines": { "type": "string" },
        "qaDocumentReferenceTypeid": { "type": "integer", "format": "int32" },
        "docFolderIndex": { "type": "string" },
        "itemID": { "type": "integer", "format": "int32" },
        "pdfConversionStatus": { "type": "integer", "format": "int32" },
        "docVersion": { "type": "integer", "format": "int32" },
        "documentURL": { "type": "string" },
        "displayDocumentSize": { "type": "string" },
        "bgColorForRowInMail": { "type": "string" },
        "favourite": { "type": "integer", "format": "int32" },
        "snipate": { "type": "string" },
        "placeholder": { "type": "integer", "format": "int32" },
        "tags": { "type": "string" },
        "tagXML": { "type": "string" },
        "tagList": { "type": "array", "items": { "type": "string" } },
        "parentFolderStatus": { "type": "integer", "format": "int32" },
        "documentLink": { "type": "string" },
        "applyTermsAndCondition": { "type": "integer", "format": "int32" },
        "termsAndConditionContent": { "type": "string" },
        "docPages": { "type": "integer", "format": "int64" },
        "docFolderStatus": { "type": "integer", "format": "int32" },
        "groupDocumentAccessMap": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/DocumentAccess" }
        },
        "currentVersion": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDateObj": { "type": "string", "format": "date-time" },
        "createdDateUTC": { "type": "string", "format": "date-time" },
        "checkoutStatus": { "type": "integer", "format": "int32" },
        "checkoutUserID": { "type": "integer", "format": "int32" },
        "checkoutUserName": { "type": "string" },
        "checkoutDateObj": { "type": "string", "format": "date-time" },
        "showVersionType": { "type": "string" },
        "commentCount": { "type": "integer", "format": "int32" },
        "documentIDcsv": { "type": "string" },
        "originalDocumentAccess": { "type": "boolean" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "sortID": { "type": "integer", "format": "int32" },
        "displayVersion": { "type": "integer", "format": "int32" },
        "tagJson": { "type": "string" },
        "verifyActiveSite": { "type": "boolean" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "doNotOcr": { "type": "integer", "format": "int32" },
        "recentActivity": { "$ref": "#/definitions/recentActivity" },
        "documentAllocatedTaskID": { "type": "integer", "format": "int32" },
        "documentAllocatedTaskStatus": { "type": "string" },
        "documentAllocatedTaskStatusName": { "type": "string" },
        "serviceUnavailableFailureCount": {
          "type": "integer",
          "format": "int32"
        },
        "sharedContentID": { "type": "integer", "format": "int32" },
        "everShared": { "type": "integer", "format": "int32" },
        "documentFolderPath": { "type": "string" },
        "createdUserFirstName": { "type": "string" },
        "createdUserLastName": { "type": "string" },
        "createdUserEmail": { "type": "string" },
        "modifiedUserFirstName": { "type": "string" },
        "modifiedUserLastName": { "type": "string" },
        "modifiedUserEmail": { "type": "string" },
        "documentLikeUserList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLikes" }
        },
        "indexingErrorMessage": { "type": "string" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "checkoutMode": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "encryptedFileSize": { "type": "integer", "format": "int64" },
        "convertedPdfCacheFileSize": { "type": "integer", "format": "int64" },
        "convertedMarkUpPdfCacheFileSize": {
          "type": "integer",
          "format": "int64"
        },
        "convertedOcrCacheFileSize": { "type": "integer", "format": "int64" },
        "documentFolderLink": { "type": "string" },
        "organisationID": { "type": "integer", "format": "int32" },
        "currentVersionCreatedBySelfRegistered": {
          "type": "integer",
          "format": "int32"
        },
        "dmsSyncedStatus": { "type": "integer", "format": "int32" },
        "taskCount": { "type": "integer", "format": "int32" },
        "checkoutorganisationName": { "type": "string" },
        "docDescription": { "type": "string" },
        "imageType": { "type": "integer", "format": "int32" },
        "haaMarkUp": { "type": "integer", "format": "int32" },
        "markupExtension": { "type": "string" },
        "documentApproved": { "type": "boolean" },
        "compareStatus": { "type": "string" },
        "workFlowStatusID": { "type": "integer", "format": "int32" },
        "width": { "type": "integer", "format": "int32" },
        "height": { "type": "integer", "format": "int32" },
        "docPosition": { "type": "integer", "format": "int32" },
        "docAccessList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentAccess" }
        },
        "batchActivityID": { "type": "integer", "format": "int32" },
        "senderName": { "type": "string" },
        "recipientName": { "type": "string" },
        "esignCreatedDate": { "type": "string", "format": "date-time" },
        "esignCreatedBy": { "type": "integer", "format": "int32" },
        "isEsignSender": { "type": "integer", "format": "int32" },
        "esignUpdateAccess": { "type": "boolean" },
        "docAnnotationCount": { "type": "integer", "format": "int32" },
        "flagMyDraft": { "type": "string" },
        "isEditingViaWebDev": { "type": "integer", "format": "int32" },
        "isOpenInOfficeOnlineCount": { "type": "integer", "format": "int32" },
        "isOpenInGSuiteCount": { "type": "integer", "format": "int32" },
        "userList": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "geteSignStatus": { "type": "integer", "format": "int32" },
        "thirdPartyStatusName": { "type": "string" },
        "enableDRM": { "type": "boolean" },
        "naturalSortOrderName": { "type": "string" },
        "emailFrom": { "type": "string" },
        "thirdPartyStatusCount": { "type": "integer", "format": "int32" },
        "emailTo": { "type": "string" },
        "emailCC": { "type": "string" },
        "emailSent": { "type": "string", "format": "date-time" },
        "emailReceived": { "type": "string", "format": "date-time" },
        "emailMetadataID": { "type": "integer", "format": "int32" },
        "emailToList": { "type": "array", "items": { "type": "string" } },
        "emailCCList": { "type": "array", "items": { "type": "string" } },
        "emailSentNull": { "type": "boolean" },
        "emailReceivedNull": { "type": "boolean" },
        "engineProjectName": { "type": "string" },
        "redactionStatus": { "type": "boolean" },
        "convertedRedactedCacheFileSize": {
          "type": "integer",
          "format": "int64"
        },
        "documentLikeLoggedInUser": { "type": "integer", "format": "int32" },
        "ceDocument": { "type": "boolean" },
        "trCaProcessed": { "type": "boolean" },
        "engineAssigned": { "type": "boolean" },
        "ceStatusID": { "type": "integer", "format": "int32" },
        "ceStatusName": { "type": "string" },
        "sheetID": { "type": "integer", "format": "int32" },
        "ceParentDocument": { "type": "boolean" },
        "relationship": { "type": "integer", "format": "int32" },
        "documentStatus": { "type": "string" },
        "documentStatusList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentStatus" }
        },
        "profileReference": { "type": "string" },
        "indexingStatusCode": { "type": "integer", "format": "int32" },
        "newVersion": { "type": "boolean" },
        "duplicates": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "geteSignServiceID": { "type": "integer", "format": "int32" },
        "geteSignServiceIdForInfo": { "type": "integer", "format": "int32" },
        "approvalWorkflowContentsState": {
          "type": "integer",
          "format": "int32"
        },
        "currentlyLoadedAnnotationName": { "type": "string" },
        "showDocAssemble": { "type": "boolean" },
        "ceGuestDocument": { "type": "boolean" },
        "ceDocumentIntValue": { "type": "integer", "format": "int32" },
        "approvalWorkflowContentDBO": {
          "$ref": "#/definitions/ApprovalWorkflowContentDBO"
        },
        "convertedToPdfForViewer": { "type": "boolean" },
        "needsPreviewAttempt": { "type": "boolean" },
        "useCEServiceUserToken": { "type": "boolean" },
        "caStatusCode": { "type": "integer", "format": "int32" },
        "geteSignStatusName": { "type": "string" },
        "esignLocked": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "pdfDocIcon": { "type": "string" },
        "viewerSupport": { "type": "integer", "format": "int32" },
        "addVersionAccess": { "type": "boolean" },
        "cloneOfSharedDocument": { "type": "boolean" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "convertToPDF": { "type": "integer", "format": "int32" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "openInGSuite": { "type": "integer", "format": "int32" },
        "treePdfDocIcon": { "type": "string" },
        "largePdfDocIcon": { "type": "string" },
        "onlineEditingViaWebDAV": { "type": "integer", "format": "int32" },
        "documentTypeIcon": { "$ref": "#/definitions/DocumentTypeIcon" },
        "showDownloadOption": { "type": "boolean" },
        "hasDownloadAccess": { "type": "boolean" },
        "notificationTypeList": {
          "type": "array",
          "items": { "$ref": "#/definitions/PropertyTypeCommonObject" }
        },
        "convertToPDFBeforeSend": { "type": "integer", "format": "int32" },
        "enableFileComparison": { "type": "integer", "format": "int32" },
        "largeIcon": { "type": "string" },
        "displayDocumentComments": { "type": "string" },
        "updateAndDownloadAccess": { "type": "boolean" },
        "checkOutCheckInAccess": { "type": "boolean" },
        "documentConvertToPDF": { "type": "boolean" },
        "markupConvertToPDF": { "type": "integer", "format": "int32" },
        "markupViewerSupport": { "type": "integer", "format": "int32" },
        "ocrViewerSupport": { "type": "integer", "format": "int32" },
        "openInOfficeOnline": { "type": "integer", "format": "int32" },
        "treeIcon": { "type": "string" },
        "fileIconClass": { "type": "string" },
        "iconValue": { "type": "string" }
      }
    },
    "DocumentStatus": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "alias": { "type": "string" },
        "name": { "type": "string" },
        "statusType": { "type": "integer", "format": "int32" },
        "statusConfig": { "type": "integer", "format": "int32" },
        "checkoutStatusAdditionalData": {
          "$ref": "#/definitions/CheckoutStatusAdditionalData"
        },
        "approvalStatusAdditionalData": {
          "$ref": "#/definitions/ApprovalStatusAdditionalData"
        },
        "esignStatusAdditionalData": {
          "$ref": "#/definitions/EsignStatusAdditionalData"
        }
      }
    },
    "DocumentTypeIcon": {
      "type": "object",
      "properties": {
        "contentType": { "type": "string" },
        "pdfConversionExtension": { "type": "string" },
        "origionalExtension": { "type": "string" },
        "largePDFConversionIconLocation": { "type": "string" },
        "origionalIcon": { "type": "string" },
        "origionalIconLocation": { "type": "string" },
        "largePDFConversionIconLocationFixedPngFormat": { "type": "string" },
        "folderIconLocation": { "type": "string" },
        "pngPdfConversionIconLocation": { "type": "string" },
        "largeFolderIconLocation": { "type": "string" },
        "pngOrigionalIcon": { "type": "string" },
        "pdfConversionIconLocation": { "type": "string" },
        "largeOrigionalIconLocation": { "type": "string" }
      }
    },
    "EngineDetailDBO": {
      "type": "object",
      "properties": {
        "engine": { "type": "string" },
        "engineDescription": { "type": "string" },
        "engineLogo": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "status": { "type": "integer", "format": "int32" },
        "configurationNeeded": { "type": "integer", "format": "int32" },
        "configurationFlag": { "type": "integer", "format": "int32" },
        "configurationParameterID": { "type": "integer", "format": "int32" },
        "configurationId": { "type": "string" },
        "configurationValue": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "systemDefaultStatus": { "type": "integer", "format": "int32" },
        "selectedMicrosoftAppName": { "type": "string" },
        "configuredMicrosoftTag": { "type": "string" },
        "selectedMicrosoftAppID": { "type": "string" },
        "secondaryConfigurationID": { "type": "string" },
        "secondaryConfigurationValue": { "type": "string" },
        "collectionId": { "type": "string" },
        "replicateKiraFolder": { "type": "integer", "format": "int32" },
        "kiraFolderName": { "type": "string" },
        "engineDisplayName": { "type": "string" }
      }
    },
    "Enumeration": { "type": "object" },
    "EnumerationString": { "type": "object" },
    "EsignStatusAdditionalData": {
      "type": "object",
      "properties": {
        "modifiedDate": { "type": "string", "format": "date-time" },
        "esignLocked": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "esignServiceID": { "type": "integer", "format": "int32" }
      }
    },
    "EventViews": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "alias": { "type": "string" }
      }
    },
    "FavoriteContent": {
      "type": "object",
      "properties": {
        "contentid": { "type": "string" },
        "contenttitle": { "type": "string" },
        "extension": { "type": "string" },
        "contenttype": { "type": "string" },
        "httplink": { "type": "string" },
        "contentupdateddate": { "type": "string" },
        "contentsize": { "type": "string" },
        "postedby": { "type": "string" },
        "contentsnipate": { "type": "string" },
        "contentimages": { "$ref": "#/definitions/ContentImages" },
        "sharewith": { "$ref": "#/definitions/ShareWith" },
        "redactionstatus": { "type": "string" },
        "commentcount": { "type": "string" },
        "likecount": { "type": "string" },
        "taskcount": { "type": "string" },
        "loggedinuserliked": { "type": "string" },
        "location": { "type": "string" },
        "siteid": { "type": "string" },
        "modifiedby": { "$ref": "#/definitions/UserDBO" },
        "createdby": { "$ref": "#/definitions/UserDBO" },
        "sitefolderid": { "type": "string" },
        "parentid": { "type": "string" },
        "version": { "type": "string" },
        "filtertaskid": { "type": "integer", "format": "int32" },
        "filtergroup": { "type": "string" },
        "filterassigneeid": { "type": "string" },
        "filtertasklistid": { "type": "integer", "format": "int32" },
        "filterprioritytypeid": { "type": "integer", "format": "int32" },
        "filtertaskstatustypeid": { "type": "string" },
        "filtershowalltaskgroupname": { "type": "string" },
        "microblogaccesslist": {
          "type": "array",
          "items": { "$ref": "#/definitions/MicroblogAccess" }
        },
        "homepageid": { "type": "integer", "format": "int32" },
        "ocrconversionstatus": { "type": "integer", "format": "int32" },
        "lastrowid": { "type": "integer", "format": "int32" },
        "activityperformdate": { "type": "string", "format": "date-time" },
        "folderType": { "type": "string" },
        "contextConvertToPDF": { "type": "integer", "format": "int32" },
        "contextCurrentDataTypeLargeIcon": { "type": "string" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "documentTypeIcon": { "$ref": "#/definitions/DocumentTypeIcon" }
      },
      "xml": { "name": "favoritecontent" }
    },
    "FavoriteContents": {
      "type": "object",
      "properties": {
        "favoritecontent": {
          "type": "array",
          "items": { "$ref": "#/definitions/FavoriteContent" }
        }
      },
      "xml": { "name": "favoritecontents" }
    },
    "FileUpload": {
      "type": "object",
      "properties": {
        "metaData": { "$ref": "#/definitions/MetaData" },
        "userAgent": { "$ref": "#/definitions/UserAgent" },
        "rememberMeEnabled": { "type": "boolean" },
        "highqHubEnabled": { "type": "boolean" },
        "browserCanOpenPDFDoc": { "type": "boolean" },
        "allowLtGt": { "type": "boolean" },
        "pid": { "type": "integer", "format": "int32" },
        "jumpto": { "type": "string" },
        "upload": { "type": "string" },
        "caption": { "type": "string" },
        "attachmentID": { "type": "integer", "format": "int32" },
        "extension": { "type": "string" },
        "bytes": {
          "type": "array",
          "items": { "type": "string", "format": "byte" }
        },
        "ckUploadFile": { "type": "string" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "resizeImageWidthSizes": { "type": "string" },
        "uploadFileName": { "type": "string" },
        "uploadContentType": { "type": "string" },
        "icon": { "type": "string" },
        "baseURL": { "type": "string" },
        "systemProperty": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/SystemProperty" }
        },
        "appName": { "type": "string" },
        "hiddenSiteID": { "type": "integer", "format": "int32" },
        "passcodeRememberMeEnable": { "type": "boolean" },
        "mobileDeviceORTabletDevice": { "type": "boolean" },
        "unKnownCKEditorDevice": { "type": "boolean" },
        "hiddenSiteFolderID": { "type": "integer", "format": "int32" },
        "applicationBuildTime": { "type": "string" },
        "nonEncodedCsrfTokenName": { "type": "string" },
        "nonEncodedCsrfTokenValue": { "type": "string" },
        "userLastModifiedTime": { "type": "string" },
        "iphoneDevice": { "type": "boolean" },
        "tabletDevice": { "type": "boolean" },
        "userSecureKey": { "type": "string" },
        "vocabulary": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/Vocabulary" }
        },
        "mobileDevice": { "type": "boolean" },
        "ipadiOS8": { "type": "boolean" },
        "blackBerry": { "type": "boolean" },
        "repositoryType": { "type": "string" },
        "refreshCacheKey": { "type": "string" },
        "csrfTokenValue": { "type": "string" },
        "metaVersion": { "type": "string" },
        "ie8": { "type": "boolean" },
        "metaBuildInfo": { "type": "string" },
        "builTime": { "type": "string" },
        "mySite": { "type": "boolean" },
        "androidDevice": { "type": "boolean" },
        "windowsDevice": { "type": "boolean" },
        "smartPhone": { "type": "boolean" },
        "macPC": { "type": "boolean" },
        "csrfTokenName": { "type": "string" },
        "desktop": { "type": "boolean" },
        "sessionTimeOut": { "type": "integer", "format": "int32" },
        "loginUserLocale": { "type": "string" },
        "windowsDesktop": { "type": "boolean" },
        "smallDevice": { "type": "boolean" },
        "verifyActiveSite": { "type": "boolean" },
        "hiddenSiteForUser": { "$ref": "#/definitions/Site" },
        "locale": { "$ref": "#/definitions/Locale" },
        "actionMessages": { "type": "array", "items": { "type": "string" } },
        "actionErrors": { "type": "array", "items": { "type": "string" } },
        "fieldErrors": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "texts": { "$ref": "#/definitions/ResourceBundle" }
      }
    },
    "GriffinEvent": {
      "type": "object",
      "properties": {
        "eventID": { "type": "integer", "format": "int32" },
        "eventCategoryID": { "type": "integer", "format": "int32" },
        "eventTitle": { "type": "string" },
        "encodedEventTitle": { "type": "string" },
        "eventContent": { "type": "string" },
        "eventDraftID": { "type": "integer", "format": "int32" },
        "inheritance": { "type": "integer", "format": "int32" },
        "snipate": { "type": "string" },
        "showComment": { "type": "integer", "format": "int32" },
        "currentVersion": { "type": "integer", "format": "int32" },
        "tags": { "type": "string" },
        "createdUserFullName": { "type": "string" },
        "modifiedUserFullName": { "type": "string" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "createdUserID": { "type": "integer", "format": "int32" },
        "modifiedUserID": { "type": "integer", "format": "int32" },
        "tagsXML": { "type": "string" },
        "tagList": { "type": "array", "items": { "type": "string" } },
        "docAttachmentXML": { "type": "string" },
        "docAttachment": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "status": { "type": "integer", "format": "int32" },
        "favourite": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "createdUserOrganisationName": { "type": "string" },
        "workFlowActionID": { "type": "integer", "format": "int32" },
        "workFlowStatusID": { "type": "integer", "format": "int32" },
        "noOfComment": { "type": "integer", "format": "int32" },
        "createdUserAvatar": { "type": "integer", "format": "int32" },
        "modifiedUserAvatar": { "type": "integer", "format": "int32" },
        "publisdhedBy": { "type": "integer", "format": "int32" },
        "publishedDate": { "type": "string", "format": "date-time" },
        "location": { "type": "string" },
        "contact": { "type": "string" },
        "eventShedulerStartDate": { "type": "string", "format": "date-time" },
        "eventStartDate": { "type": "string", "format": "date-time" },
        "eventTimezoneConvertedStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "eventShedulerEndDate": { "type": "string", "format": "date-time" },
        "eventEndDate": { "type": "string", "format": "date-time" },
        "eventTimezoneConvertedEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "publishedSequence": { "type": "integer", "format": "int32" },
        "allDayEvent": { "type": "integer", "format": "int32" },
        "startDate": { "type": "string" },
        "endDate": { "type": "string" },
        "startDateHours": { "type": "string" },
        "startDateMins": { "type": "string" },
        "endDateHours": { "type": "string" },
        "endDateMins": { "type": "string" },
        "filterDate": { "type": "string" },
        "filterMonth": { "type": "string" },
        "publishedCount": { "type": "integer", "format": "int32" },
        "rejectedDate": { "type": "string", "format": "date-time" },
        "rejectedReason": { "type": "string" },
        "rejectedBy": { "type": "integer", "format": "int32" },
        "rejectedByUserFullName": { "type": "string" },
        "categoryList": {
          "type": "array",
          "items": { "$ref": "#/definitions/GriffinCategory" }
        },
        "categoryXML": { "type": "string" },
        "contactID": { "type": "integer", "format": "int32" },
        "contactFullName": { "type": "string" },
        "createdUserEmail": { "type": "string" },
        "uid": { "type": "string" },
        "feedID": { "type": "integer", "format": "int32" },
        "macroXML": { "type": "string" },
        "calenderName": { "type": "string" },
        "feedModifiedDate": { "type": "string", "format": "date-time" },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "tagJson": { "type": "string" },
        "taskTotalRecord": { "type": "integer", "format": "int32" },
        "eventTotalRecord": { "type": "integer", "format": "int32" },
        "eventYearID": { "type": "string" },
        "moreArchiveChecked": { "type": "boolean" },
        "recentActivity": { "$ref": "#/definitions/recentActivity" },
        "eventContactList": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventContact" }
        },
        "eventContactXML": { "type": "string" },
        "eventContactTagJson": { "type": "string" },
        "eventEditAccess": { "type": "integer", "format": "int32" },
        "exteranlID": { "type": "string" },
        "isCreatedByAPIUser": { "type": "integer", "format": "int32" },
        "serviceUnavailableFailureCount": {
          "type": "integer",
          "format": "int32"
        },
        "shareLinkXML": { "type": "string" },
        "eventLikeCount": { "type": "integer", "format": "int32" },
        "likedByLoggedInUser": { "type": "boolean" },
        "eventCommentCount": { "type": "integer", "format": "int32" },
        "eventAttachmentCount": { "type": "integer", "format": "int32" },
        "taskViewAccess": { "type": "boolean" },
        "taskEditAccess": { "type": "boolean" },
        "taskDeleteAccess": { "type": "boolean" },
        "taskListID": { "type": "integer", "format": "int32" },
        "currentDate": { "type": "string" },
        "hasLoadMoreData": { "type": "boolean" },
        "tagListEscapeEcmaScript": {
          "type": "array",
          "items": { "type": "string" }
        },
        "eventRowID": { "type": "integer", "format": "int32" },
        "taskRowID": { "type": "integer", "format": "int32" },
        "eventStartPosition": { "type": "integer", "format": "int32" },
        "taskStartPosition": { "type": "integer", "format": "int32" },
        "totalPages": { "type": "integer", "format": "int32" },
        "taskAssigneeUserAndGroupList": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskAssigneeUserAndGroupList" }
        },
        "dependedTaskStatus": { "type": "integer", "format": "int32" },
        "recurrenceTemplateId": { "type": "integer", "format": "int32" },
        "recurrenceDetails": { "$ref": "#/definitions/RecurrenceDetails" },
        "startDatesCSV": { "type": "string" },
        "endDatesCSV": { "type": "string" },
        "parentEventID": { "type": "integer", "format": "int32" },
        "eventDetailID": { "type": "integer", "format": "int32" },
        "checksum": { "type": "string" },
        "eventIdForXml": { "type": "string" },
        "taskAttachmentCount": { "type": "integer", "format": "int32" },
        "categotyType": { "type": "string" },
        "recurrent": { "type": "boolean" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "archiveEvents": { "type": "boolean" },
        "notificationTypeList": {
          "type": "array",
          "items": { "$ref": "#/definitions/PropertyTypeCommonObject" }
        },
        "eventCategoryNameCSV": { "type": "string" },
        "eventCategoryIDCSV": { "type": "string" },
        "eventEndDateWithOneDayAdded": {
          "type": "string",
          "format": "date-time"
        },
        "eventEndDateWithOneMinuteAdded": {
          "type": "string",
          "format": "date-time"
        },
        "workFlowActionList": {
          "type": "array",
          "items": { "$ref": "#/definitions/PropertyTypeCommonObject" }
        },
        "eventShedulerEndDateWithOneDayAdded": {
          "type": "string",
          "format": "date-time"
        },
        "eventShedulerEndDateWithOneMinuteAdded": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GriffinSiteGroup": {
      "type": "object",
      "properties": {
        "siteID": { "type": "integer", "format": "int32" },
        "groupID": { "type": "integer", "format": "int32" },
        "userID": { "type": "integer", "format": "int32" },
        "groupName": { "type": "string" },
        "description": { "type": "string" },
        "bidderGroup": { "type": "boolean" },
        "createdBy": { "type": "integer", "format": "int32" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "createdDateObj": { "type": "string", "format": "date-time" },
        "modifiedDateObj": { "type": "string", "format": "date-time" },
        "status": { "type": "integer", "format": "int32" },
        "usersCount": { "type": "integer", "format": "int32" },
        "associateSystemGroupID": { "type": "integer", "format": "int32" },
        "groupSourceType": { "type": "integer", "format": "int32" },
        "participants": {
          "type": "array",
          "items": { "$ref": "#/definitions/Participant" }
        },
        "fromAction": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "groupStatusID": { "type": "integer", "format": "int32" },
        "internalOrgID": { "type": "integer", "format": "int32" },
        "groupSourceTypeName": { "type": "string" },
        "sortOrder": { "type": "integer", "format": "int32" },
        "sortOrderBy": { "type": "string" },
        "businessUserGroup": { "type": "boolean" },
        "groupDisplayNameWithType": { "type": "string" },
        "blurClassForSelect": { "type": "string" },
        "businessUserGroupDisplayNameWithType": { "type": "string" }
      }
    },
    "GroupEventAccess": {
      "type": "object",
      "properties": {
        "groupID": { "type": "integer", "format": "int32" },
        "groupName": { "type": "string" },
        "viewAccess": { "type": "boolean" },
        "editAccess": { "type": "boolean" },
        "sourceTypeID": { "type": "integer", "format": "int32" },
        "groupDisplayNameWithType": { "type": "string" },
        "orgID": { "type": "integer", "format": "int32" },
        "viewEventPermission": { "type": "boolean" },
        "editEventPermission": { "type": "boolean" },
        "businessUserSiteGroup": { "type": "boolean" }
      }
    },
    "ISheetColumnProperty": {
      "type": "object",
      "properties": {
        "columnPropertyID": { "type": "integer", "format": "int32" },
        "columnID": { "type": "integer", "format": "int32" },
        "propertyTypeID": { "type": "integer", "format": "int32" },
        "propertyTypeAlias": { "type": "string" },
        "propertyValue": { "type": "string" },
        "propertyStyle": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "imageItemID": { "type": "integer", "format": "int32" },
        "score": { "type": "number" },
        "imageData": { "type": "string" },
        "position": { "type": "integer", "format": "int32" },
        "propertyStyleColor": { "type": "string" },
        "finalValue": { "type": "string" }
      }
    },
    "ISheetInjectColumn": {
      "type": "object",
      "properties": {
        "siteID": { "type": "integer", "format": "int32" },
        "sheetID": { "type": "integer", "format": "int32" },
        "itemID": { "type": "integer", "format": "int32" },
        "injectColumnLink": { "type": "string" },
        "allowDefineLink": { "type": "integer", "format": "int32" },
        "columnStringValue": { "type": "string" },
        "columnDisplayState": { "type": "integer", "format": "int32" },
        "isDateOnly": { "type": "string" },
        "isUTC": { "type": "string" },
        "stringColumnDateValue": { "type": "string" },
        "columnNumericValue": { "type": "number", "format": "double" },
        "systemGenerated": { "type": "integer", "format": "int32" },
        "choices": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetColumnProperty" }
        },
        "stringDateFormat": { "type": "string" }
      }
    },
    "ISheetItemData": {
      "type": "object",
      "properties": {
        "itemDataID": { "type": "integer", "format": "int32" },
        "docID": { "type": "integer", "format": "int32" },
        "columnDisplayName": { "type": "string" },
        "columnUrl": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "sheetID": { "type": "integer", "format": "int32" },
        "itemID": { "type": "integer", "format": "int32" },
        "columnID": { "type": "integer", "format": "int32" },
        "columnTypeID": { "type": "integer", "format": "int32" },
        "columnValueTypeID": { "type": "integer", "format": "int32" },
        "columnStringValue": { "type": "string" },
        "columnNumericValue": { "type": "number", "format": "double" },
        "columnPosition": { "type": "integer", "format": "int32" },
        "columnTypeAlias": { "type": "string" },
        "columnDateValue": { "type": "string", "format": "date-time" },
        "stringColumnDateValue": { "type": "string" },
        "columnValueTypeAlias": { "type": "string" },
        "columnDisplayState": { "type": "integer", "format": "int32" },
        "columnSnippetValue": { "type": "string" },
        "columnKeyValueForDocReport": { "type": "string" },
        "columnMultipleValueCSV": { "type": "string" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "displayModifiedDateAsDate": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "draftType": { "type": "integer", "format": "int32" },
        "autoNumberDraft": { "type": "integer", "format": "int32" },
        "dateTimeFormat": { "type": "integer", "format": "int32" },
        "status": { "type": "integer", "format": "int32" },
        "systemGenerated": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "urlLink": { "type": "string" },
        "isDateOnly": { "type": "string" },
        "isUTC": { "type": "string" },
        "injectColumnList": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetInjectColumn" }
        },
        "injectColumnListApi": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetInjectColumn" }
        },
        "isheetFolderLinkList": {
          "type": "array",
          "items": { "$ref": "#/definitions/IsheetFolderLink" }
        },
        "getiSheetDocumentLinkItemDataList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "listUserLookup": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLookUp" }
        },
        "attachmentID": { "type": "integer", "format": "int32" },
        "attachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/ItemAttachment" }
        },
        "score": { "type": "number", "format": "double" },
        "docExtension": { "type": "string" },
        "docIcon": { "type": "string" },
        "currentVersion": { "type": "integer", "format": "int32" },
        "taskChoiceAlias": { "type": "string" },
        "columnDateValueForDateCalc": {
          "type": "string",
          "format": "date-time"
        },
        "userLookupType": { "type": "integer", "format": "int32" },
        "choices": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetColumnProperty" }
        },
        "choiceLookupAndIsheetMap": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "intColumnNumericValue": { "type": "integer", "format": "int32" },
        "stringDateFormat": { "type": "string" }
      }
    },
    "IndustryTab": {
      "type": "object",
      "properties": {
        "industryID": { "type": "integer", "format": "int32" },
        "industryName": { "type": "string" }
      }
    },
    "IsheetFolderLink": {
      "type": "object",
      "properties": {
        "folderId": { "type": "integer", "format": "int32" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "folderName": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "displayOrder": { "type": "integer", "format": "int32" },
        "docSort": { "type": "integer", "format": "int32" },
        "accessInherited": { "type": "integer", "format": "int32" },
        "folderIndex": { "type": "string" },
        "comments": { "type": "string" }
      }
    },
    "ItemAttachment": {
      "type": "object",
      "properties": {
        "itemID": { "type": "integer", "format": "int32" },
        "columnID": { "type": "integer", "format": "int32" },
        "attachmentID": { "type": "integer", "format": "int32" },
        "attachmentName": { "type": "string" },
        "extension": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "documentSize": { "type": "integer", "format": "int64" },
        "extensionForReport": { "type": "string" },
        "sheetType": { "type": "integer", "format": "int32" },
        "contextUploadDate": { "type": "string" },
        "contextSize": { "type": "integer", "format": "int64" },
        "folderID": { "type": "integer", "format": "int32" },
        "docIcon": { "type": "string" },
        "columnName": { "type": "string" },
        "attachmentStatus": { "type": "integer", "format": "int32" },
        "itemIDKey": { "type": "integer", "format": "int32" },
        "docID": { "type": "integer", "format": "int32" },
        "currentVersion": { "type": "integer", "format": "int32" },
        "docTypeID": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "isPDFRequired": { "type": "integer", "format": "int32" },
        "folderStatus": { "type": "integer", "format": "int32" },
        "sheetID": { "type": "integer", "format": "int32" },
        "columnTypeID": { "type": "integer", "format": "int32" },
        "docVersion": { "type": "integer", "format": "int32" },
        "documentAccess": { "$ref": "#/definitions/DocumentAccess" },
        "pdfDocIcon": { "type": "string" },
        "viewerSupport": { "type": "integer", "format": "int32" },
        "icon": { "type": "string" },
        "convertToPDF": { "type": "integer", "format": "int32" },
        "largePdfDocIcon": { "type": "string" },
        "largeIcon": { "type": "string" }
      }
    },
    "MessagingTool": {
      "type": "object",
      "properties": {
        "messageToolID": { "type": "integer", "format": "int32" },
        "messageToolName": { "type": "string" },
        "messageToolPrefix": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "status": { "type": "integer", "format": "int32" }
      }
    },
    "MetaData": {
      "type": "object",
      "properties": {
        "jurisdictionName": { "type": "string" },
        "targetGroupID": { "type": "integer", "format": "int32" },
        "targetGroupIDCSV": { "type": "string" },
        "targetUserID": { "type": "integer", "format": "int32" },
        "apiVersion": { "type": "string" },
        "encryptTargetUserID": { "type": "string" },
        "jrdnId": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "revisedSiteID": { "type": "integer", "format": "int32" },
        "targetSiteID": { "type": "integer", "format": "int32" },
        "folderID": { "type": "integer", "format": "int32" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "documentID": { "type": "integer", "format": "int32" },
        "docVersion": { "type": "integer", "format": "int32" },
        "docVersionIDCSV": { "type": "string" },
        "cloneDocumentID": { "type": "integer", "format": "int32" },
        "externalAccess": { "type": "string" },
        "jumpTo": { "type": "string" },
        "startDate": { "type": "string" },
        "endDate": { "type": "string" },
        "issueId": { "type": "integer", "format": "int32" },
        "markup": { "type": "integer", "format": "int32" },
        "issueName": { "type": "string" },
        "txtSearch": { "type": "string" },
        "hidden": { "type": "string" },
        "channelName": { "type": "string" },
        "sendToApprove": { "type": "string" },
        "viewMode": { "type": "string" },
        "issueIdList": { "type": "string" },
        "jrdnIdList": { "type": "string" },
        "index": { "type": "string" },
        "message": { "type": "integer", "format": "int32" },
        "nothinToApprove": { "type": "string" },
        "selectAllJurisdication": { "type": "string" },
        "selectAllIssue": { "type": "string" },
        "backflag": { "type": "integer", "format": "int32" },
        "fromCompTblflag": { "type": "integer", "format": "int32" },
        "filterFlag": { "type": "integer", "format": "int32" },
        "nodataFlag": { "type": "integer", "format": "int32" },
        "questionId": { "type": "integer", "format": "int32" },
        "questionText": { "type": "string" },
        "answer": { "type": "string" },
        "linkIssue": { "type": "integer", "format": "int32" },
        "parentTaskID": { "type": "integer", "format": "int32" },
        "parentTaskListID": { "type": "integer", "format": "int32" },
        "rootTaskListID": { "type": "integer", "format": "int32" },
        "activateUserProcess": { "type": "boolean" },
        "updateUserProfileProcess": { "type": "boolean" },
        "flag": { "type": "integer", "format": "int32" },
        "flagedit": { "type": "integer", "format": "int32" },
        "search": { "type": "string" },
        "progressBarKey": { "type": "string" },
        "sourceContentStatus": { "type": "integer", "format": "int32" },
        "loadAllTreeNodes": { "type": "boolean" },
        "targetContentStatus": { "type": "integer", "format": "int32" },
        "targetParentFolderID": { "type": "integer", "format": "int32" },
        "targetFolderID": { "type": "integer", "format": "int32" },
        "cmpTblIsId": { "type": "string" },
        "cmpTblJrId": { "type": "string" },
        "lastAction": { "type": "string" },
        "fromAction": { "type": "string" },
        "moduleType": { "type": "string" },
        "moduleView": { "type": "string" },
        "modulePage": { "type": "string" },
        "documentIDCSV": { "type": "string" },
        "folderIDCSV": { "type": "string" },
        "paginationNo": { "type": "integer", "format": "int32" },
        "loadMoreNo": { "type": "integer", "format": "int32" },
        "loadMore": { "type": "boolean" },
        "sheetId": { "type": "integer", "format": "int32" },
        "columnID": { "type": "integer", "format": "int32" },
        "sheetViewID": { "type": "integer", "format": "int32" },
        "itemId": { "type": "integer", "format": "int32" },
        "qaQuestionID": { "type": "integer", "format": "int32" },
        "qaAnswerID": { "type": "integer", "format": "int32" },
        "helpID": { "type": "integer", "format": "int32" },
        "wikiID": { "type": "integer", "format": "int32" },
        "parentWikiID": { "type": "integer", "format": "int32" },
        "wikiDraftID": { "type": "integer", "format": "int32" },
        "taskListID": { "type": "integer", "format": "int32" },
        "taskID": { "type": "integer", "format": "int32" },
        "blogID": { "type": "integer", "format": "int32" },
        "blogCategoryID": { "type": "integer", "format": "int32" },
        "blogDraftID": { "type": "integer", "format": "int32" },
        "eventID": { "type": "integer", "format": "int32" },
        "eventCategoryID": { "type": "integer", "format": "int32" },
        "eventDraftID": { "type": "integer", "format": "int32" },
        "commentTypeAlias": { "type": "string" },
        "commentID": { "type": "integer", "format": "int32" },
        "versionNo": { "type": "integer", "format": "int32" },
        "commentRefID": { "type": "integer", "format": "int32" },
        "macroID": { "type": "integer", "format": "int32" },
        "securityKey": { "type": "string" },
        "tokenAtPageLoad": { "type": "integer", "format": "int32" },
        "wikiTokenAtPageLoad": { "type": "integer", "format": "int32" },
        "tokenAtBlogPageLoad": { "type": "integer", "format": "int32" },
        "tokenAtTaskPageLoad": { "type": "integer", "format": "int32" },
        "tokenAtEventPageLoad": { "type": "integer", "format": "int32" },
        "isheetExportType": { "type": "string" },
        "taskCounter": { "type": "integer", "format": "int32" },
        "microBlogID": { "type": "integer", "format": "int32" },
        "whoCanAccess": { "type": "string" },
        "original": { "type": "boolean" },
        "templateID": { "type": "integer", "format": "int32" },
        "templateLinkID": { "type": "integer", "format": "int32" },
        "linkingType": { "type": "integer", "format": "int32" },
        "rootMessageID": { "type": "integer", "format": "int32" },
        "qaShowAllQuestion": { "type": "integer", "format": "int32" },
        "userImageID": { "type": "integer", "format": "int32" },
        "shareLinkID": { "type": "integer", "format": "int32" },
        "sourceClientForAPI": { "type": "string" },
        "screenWidth": { "type": "integer", "format": "int32" },
        "eventIDCSV": { "type": "string" },
        "contentDetailsJSONString": { "type": "string" },
        "draftIDCSV": { "type": "string" },
        "attributeMap": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "documentAccess": { "$ref": "#/definitions/DocumentAccess" },
        "accessQuestion": { "$ref": "#/definitions/QAQuestion" },
        "contentRefTypeAlias": { "type": "integer", "format": "int32" },
        "customStatusId": { "type": "integer", "format": "int32" },
        "sheetAuditModal": { "type": "boolean" },
        "wikiWorkFlowID": { "type": "integer", "format": "int32" },
        "choiceIDCsv": { "type": "string" },
        "folderType": { "type": "string" },
        "downloadZipID": { "type": "integer", "format": "int32" },
        "siteMetaDataSheetID": { "type": "integer", "format": "int32" },
        "lastModifiedContentDate": { "type": "string" },
        "ipaddress": { "type": "string" },
        "revisedDocumentID": { "type": "integer", "format": "int32" },
        "revisedDocVersion": { "type": "integer", "format": "int32" },
        "zipID": { "type": "integer", "format": "int32" },
        "homePageID": { "type": "integer", "format": "int32" },
        "systemPageID": { "type": "integer", "format": "int32" },
        "docMediaSegmentName": { "type": "string" },
        "docMediaSegmentExtension": { "type": "string" },
        "singleSegment": { "type": "integer", "format": "int32" },
        "offset": { "type": "integer", "format": "int32" },
        "limit": { "type": "integer", "format": "int32" },
        "getAllRecordCount": { "type": "boolean" },
        "itemIdCSV": { "type": "string" },
        "sourceContentType": { "type": "integer", "format": "int32" },
        "contentType": { "type": "string" },
        "wikiContentData": { "type": "string" },
        "smartFolder": { "type": "boolean" },
        "annotationId": { "type": "string" },
        "blogContentData": { "type": "string" },
        "externalId": { "type": "string" },
        "siteIDCSV": { "type": "string" },
        "sheetItemMap": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/SheetItem" }
        }
      }
    },
    "MicroblogAccess": {
      "type": "object",
      "properties": {
        "userID": { "type": "integer", "format": "int32" },
        "microBlogID": { "type": "integer", "format": "int32" },
        "sharedContextID": { "type": "integer", "format": "int32" },
        "sharedContextTitle": { "type": "string" },
        "sharedContextType": { "type": "string" },
        "viewAccess": { "type": "boolean" },
        "editAccess": { "type": "boolean" },
        "microblogFavorite": { "type": "boolean" },
        "siteID": { "type": "integer", "format": "int32" },
        "status": { "type": "integer", "format": "int32" },
        "orgID": { "type": "integer", "format": "int32" },
        "groupID": { "type": "integer", "format": "int32" },
        "createdBy": { "type": "integer", "format": "int32" },
        "isSystemGroup": { "type": "integer", "format": "int32" },
        "groupHyperlink": { "type": "string" },
        "siteObj": { "$ref": "#/definitions/Site" }
      }
    },
    "Participant": {
      "type": "object",
      "properties": {
        "siteID": { "type": "integer", "format": "int32" },
        "userID": { "type": "integer", "format": "int32" },
        "askQuestion": { "type": "integer", "format": "int32" },
        "submitQuestion": { "type": "integer", "format": "int32" },
        "bidderAdmin": { "type": "integer", "format": "int32" },
        "sellerAdmin": { "type": "integer", "format": "int32" },
        "approveReplies": { "type": "integer", "format": "int32" },
        "replyToQuestion": { "type": "integer", "format": "int32" },
        "viewAllQuestion": { "type": "integer", "format": "int32" },
        "qaEmail": { "type": "integer", "format": "int32" },
        "orgAskQuestion": { "type": "integer", "format": "int32" },
        "orgSubmitQuestion": { "type": "integer", "format": "int32" },
        "orgBidderAdmin": { "type": "integer", "format": "int32" },
        "orgSellerAdmin": { "type": "integer", "format": "int32" },
        "orgApproveReplies": { "type": "integer", "format": "int32" },
        "orgReplyToQuestion": { "type": "integer", "format": "int32" },
        "orgViewAllQuestion": { "type": "integer", "format": "int32" },
        "orgQAEmail": { "type": "integer", "format": "int32" },
        "groupAskQuestion": { "type": "integer", "format": "int32" },
        "groupSubmitQuestion": { "type": "integer", "format": "int32" },
        "groupBidderAdmin": { "type": "integer", "format": "int32" },
        "groupSellerAdmin": { "type": "integer", "format": "int32" },
        "groupApproveReplies": { "type": "integer", "format": "int32" },
        "groupReplyToQuestion": { "type": "integer", "format": "int32" },
        "groupViewAllQuestion": { "type": "integer", "format": "int32" },
        "groupQAEmail": { "type": "integer", "format": "int32" },
        "orgGroupID": { "type": "integer", "format": "int32" },
        "orgID": { "type": "integer", "format": "int32" },
        "termsAccepted": { "type": "integer", "format": "int32" },
        "alertFrequencyID": { "type": "integer", "format": "int32" },
        "accountID": { "type": "integer", "format": "int32" },
        "filterUserID": { "type": "integer", "format": "int32" },
        "filterUserIdCSV": { "type": "string" },
        "siteParticipantsStatusCSV": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "fullName": { "type": "string" },
        "organisation": { "type": "string" },
        "orgStatusID": { "type": "integer", "format": "int32" },
        "adminCount": { "type": "integer", "format": "int32" },
        "siteAdmins": { "type": "integer", "format": "int32" },
        "invitationStatus": { "type": "integer", "format": "int32" },
        "email": { "type": "string" },
        "unsentInvitation": { "type": "string" },
        "unallocatedUsers": { "type": "string" },
        "adminRoleTypes": { "type": "string" },
        "notLoggedIn": { "type": "integer", "format": "int32" },
        "suspendedUsers": { "type": "integer", "format": "int32" },
        "invitationDate": { "type": "string" },
        "siteName": { "type": "string" },
        "firstNameList": { "type": "array", "items": { "type": "object" } },
        "lastNameList": { "type": "array", "items": { "type": "object" } },
        "orgNameList": { "type": "array", "items": { "type": "object" } },
        "status": { "type": "integer", "format": "int32" },
        "roleName": { "type": "string" },
        "keyvalue": { "type": "string" },
        "organisationAddress": { "type": "string" },
        "title": { "type": "string" },
        "department": { "type": "string" },
        "modulePermissions": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "bidderOrg": { "type": "boolean" },
        "siteParticipantId": { "type": "integer", "format": "int32" },
        "groupList": { "type": "string" },
        "telephone": { "type": "string" },
        "mobilePhone": { "type": "string" },
        "lastLoginDate": { "type": "string" },
        "lastSystemLoginDate": { "type": "string" },
        "discloseToAll": { "type": "integer", "format": "int32" },
        "siteHomePageAccepted": { "type": "integer", "format": "int32" },
        "bidderTeam": { "type": "integer", "format": "int32" },
        "userBio": { "type": "string" },
        "isAllSitePartiesRequired": { "type": "integer", "format": "int32" },
        "userNameWithOrganisationName": { "type": "string" },
        "secretaryName": { "type": "string" },
        "secretaryEmail": { "type": "string" },
        "secretaryProfileLink": { "type": "string" },
        "userAvatar": { "type": "integer", "format": "int32" },
        "userAvatarTypeID": { "type": "integer", "format": "int32" },
        "userAvatarType": { "type": "string" },
        "siteAdminAccess": { "type": "boolean" },
        "contentAdminAccess": { "type": "boolean" },
        "contentAdminAccessFlag": { "type": "boolean" },
        "memberAdminAccessFlag": { "type": "boolean" },
        "reportingAdminAccessFlag": { "type": "boolean" },
        "qaAdminAccessFlag": { "type": "boolean" },
        "immediate": { "type": "integer", "format": "int32" },
        "daily": { "type": "integer", "format": "int32" },
        "weekly": { "type": "integer", "format": "int32" },
        "wikiApprovalAlert": { "type": "integer", "format": "int32" },
        "blogApprovalAlert": { "type": "integer", "format": "int32" },
        "eventApprovalAlert": { "type": "integer", "format": "int32" },
        "documentApprovalAlert": { "type": "integer", "format": "int32" },
        "lastModifiedTime": { "type": "integer", "format": "int64" },
        "departmentID": { "type": "integer", "format": "int32" },
        "city": { "type": "string" },
        "orgFilterForSiteLevel": { "type": "integer", "format": "int32" },
        "orgEnableForPeopleModule": { "type": "boolean" },
        "orgGroupType": { "type": "integer", "format": "int32" },
        "orgGroupName": { "type": "string" },
        "orderBy": { "type": "string" },
        "bidderUser": { "type": "integer", "format": "int32" },
        "contactUsLinkAlert": { "type": "integer", "format": "int32" },
        "orgStatus": { "type": "integer", "format": "int32" },
        "commentOnMyContent_byEmail": { "type": "integer", "format": "int32" },
        "commentOnICommented_byEmail": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthored_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEdited_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssigned_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssigned_byEmail": { "type": "integer", "format": "int32" },
        "mentionsOn_byEmail": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthored_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLiked_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "startFollowingMe_byEmail": { "type": "integer", "format": "int32" },
        "sendPrivateMessage_byEmail": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavourited_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "commentOnMyContent_byBadge": { "type": "integer", "format": "int32" },
        "commentOnICommented_byBadge": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthored_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEdited_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssigned_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssigned_byBadge": { "type": "integer", "format": "int32" },
        "mentionsOn_byBadge": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthored_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLiked_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "startFollowingMe_byBadge": { "type": "integer", "format": "int32" },
        "sendPrivateMessage_byBadge": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavourited_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "activityNotificationTypeAlias": { "type": "string" },
        "searchUserName": { "type": "string" },
        "noOfParticipants": { "type": "integer", "format": "int32" },
        "grpORGStatusID": { "type": "integer", "format": "int32" },
        "systemGroupParticipant": { "type": "integer", "format": "int32" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "userStatus": { "type": "integer", "format": "int32" },
        "isSystemUser": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "startPosition": { "type": "integer", "format": "int32" },
        "order": { "type": "integer", "format": "int32" },
        "grpDetailsList": {
          "type": "array",
          "items": { "$ref": "#/definitions/GriffinSiteGroup" }
        },
        "activeUsers": { "type": "integer", "format": "int32" },
        "encryptedUserId": { "type": "string" },
        "isInternal": { "type": "integer", "format": "int32" },
        "commentOnMyContentByPush": { "type": "integer", "format": "int32" },
        "commentOnICommentedByPush": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthoredByPush": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEditedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssignedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssignedByPush": { "type": "integer", "format": "int32" },
        "mentionsOnByPush": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthoredByPush": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLikedByPush": { "type": "integer", "format": "int32" },
        "startFollowingMeByPush": { "type": "integer", "format": "int32" },
        "sendPrivateMessageByPush": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavouritedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByPush": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByBadge": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByEmail": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByEmail": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByBadge": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByPush": {
          "type": "integer",
          "format": "int32"
        },
        "contentApprovalsByEmail": { "type": "integer", "format": "int32" },
        "contentApprovalsByBadge": { "type": "integer", "format": "int32" },
        "contentApprovalsByPush": { "type": "integer", "format": "int32" },
        "businessUser": { "type": "boolean" },
        "loginUserID": { "type": "integer", "format": "int32" },
        "sitegrpid": { "type": "integer", "format": "int32" },
        "sitegrplist": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "siteIdCSV": { "type": "string" },
        "encryptUserID": { "type": "string" },
        "group": { "type": "string" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "fromAPI": { "type": "boolean" },
        "qaAdminAccess": { "type": "boolean" },
        "internalAdminAccess": { "type": "boolean" },
        "reportingAdminAccess": { "type": "boolean" },
        "memberAdminAccess": { "type": "boolean" },
        "escappedJSFullName": { "type": "string" },
        "anySystemGroupParticipantUser": { "type": "boolean" },
        "orgCountry": { "type": "string" },
        "anyAdminAccess": { "type": "boolean" },
        "following": { "type": "integer", "format": "int32" },
        "orgCity": { "type": "string" },
        "createSiteAccess": { "type": "boolean" },
        "qaAccess": { "type": "boolean" }
      }
    },
    "ParticipantContactAdmin": {
      "type": "object",
      "properties": {
        "siteID": { "type": "integer", "format": "int32" },
        "userID": { "type": "integer", "format": "int32" },
        "askQuestion": { "type": "integer", "format": "int32" },
        "submitQuestion": { "type": "integer", "format": "int32" },
        "bidderAdmin": { "type": "integer", "format": "int32" },
        "sellerAdmin": { "type": "integer", "format": "int32" },
        "approveReplies": { "type": "integer", "format": "int32" },
        "replyToQuestion": { "type": "integer", "format": "int32" },
        "viewAllQuestion": { "type": "integer", "format": "int32" },
        "qaEmail": { "type": "integer", "format": "int32" },
        "orgAskQuestion": { "type": "integer", "format": "int32" },
        "orgSubmitQuestion": { "type": "integer", "format": "int32" },
        "orgBidderAdmin": { "type": "integer", "format": "int32" },
        "orgSellerAdmin": { "type": "integer", "format": "int32" },
        "orgApproveReplies": { "type": "integer", "format": "int32" },
        "orgReplyToQuestion": { "type": "integer", "format": "int32" },
        "orgViewAllQuestion": { "type": "integer", "format": "int32" },
        "orgQAEmail": { "type": "integer", "format": "int32" },
        "groupAskQuestion": { "type": "integer", "format": "int32" },
        "groupSubmitQuestion": { "type": "integer", "format": "int32" },
        "groupBidderAdmin": { "type": "integer", "format": "int32" },
        "groupSellerAdmin": { "type": "integer", "format": "int32" },
        "groupApproveReplies": { "type": "integer", "format": "int32" },
        "groupReplyToQuestion": { "type": "integer", "format": "int32" },
        "groupViewAllQuestion": { "type": "integer", "format": "int32" },
        "groupQAEmail": { "type": "integer", "format": "int32" },
        "orgGroupID": { "type": "integer", "format": "int32" },
        "orgID": { "type": "integer", "format": "int32" },
        "termsAccepted": { "type": "integer", "format": "int32" },
        "alertFrequencyID": { "type": "integer", "format": "int32" },
        "accountID": { "type": "integer", "format": "int32" },
        "filterUserID": { "type": "integer", "format": "int32" },
        "filterUserIdCSV": { "type": "string" },
        "siteParticipantsStatusCSV": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "fullName": { "type": "string" },
        "organisation": { "type": "string" },
        "orgStatusID": { "type": "integer", "format": "int32" },
        "adminCount": { "type": "integer", "format": "int32" },
        "siteAdmins": { "type": "integer", "format": "int32" },
        "invitationStatus": { "type": "integer", "format": "int32" },
        "email": { "type": "string" },
        "unsentInvitation": { "type": "string" },
        "unallocatedUsers": { "type": "string" },
        "adminRoleTypes": { "type": "string" },
        "notLoggedIn": { "type": "integer", "format": "int32" },
        "suspendedUsers": { "type": "integer", "format": "int32" },
        "invitationDate": { "type": "string" },
        "siteName": { "type": "string" },
        "firstNameList": { "type": "array", "items": { "type": "object" } },
        "lastNameList": { "type": "array", "items": { "type": "object" } },
        "orgNameList": { "type": "array", "items": { "type": "object" } },
        "status": { "type": "integer", "format": "int32" },
        "roleName": { "type": "string" },
        "keyvalue": { "type": "string" },
        "organisationAddress": { "type": "string" },
        "title": { "type": "string" },
        "department": { "type": "string" },
        "modulePermissions": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "bidderOrg": { "type": "boolean" },
        "siteParticipantId": { "type": "integer", "format": "int32" },
        "groupList": { "type": "string" },
        "telephone": { "type": "string" },
        "mobilePhone": { "type": "string" },
        "lastLoginDate": { "type": "string" },
        "lastSystemLoginDate": { "type": "string" },
        "discloseToAll": { "type": "integer", "format": "int32" },
        "siteHomePageAccepted": { "type": "integer", "format": "int32" },
        "bidderTeam": { "type": "integer", "format": "int32" },
        "userBio": { "type": "string" },
        "isAllSitePartiesRequired": { "type": "integer", "format": "int32" },
        "userNameWithOrganisationName": { "type": "string" },
        "secretaryName": { "type": "string" },
        "secretaryEmail": { "type": "string" },
        "secretaryProfileLink": { "type": "string" },
        "userAvatar": { "type": "integer", "format": "int32" },
        "userAvatarTypeID": { "type": "integer", "format": "int32" },
        "userAvatarType": { "type": "string" },
        "siteAdminAccess": { "type": "boolean" },
        "contentAdminAccess": { "type": "boolean" },
        "contentAdminAccessFlag": { "type": "boolean" },
        "memberAdminAccessFlag": { "type": "boolean" },
        "reportingAdminAccessFlag": { "type": "boolean" },
        "qaAdminAccessFlag": { "type": "boolean" },
        "immediate": { "type": "integer", "format": "int32" },
        "daily": { "type": "integer", "format": "int32" },
        "weekly": { "type": "integer", "format": "int32" },
        "wikiApprovalAlert": { "type": "integer", "format": "int32" },
        "blogApprovalAlert": { "type": "integer", "format": "int32" },
        "eventApprovalAlert": { "type": "integer", "format": "int32" },
        "documentApprovalAlert": { "type": "integer", "format": "int32" },
        "lastModifiedTime": { "type": "integer", "format": "int64" },
        "departmentID": { "type": "integer", "format": "int32" },
        "city": { "type": "string" },
        "orgFilterForSiteLevel": { "type": "integer", "format": "int32" },
        "orgEnableForPeopleModule": { "type": "boolean" },
        "orgGroupType": { "type": "integer", "format": "int32" },
        "orgGroupName": { "type": "string" },
        "orderBy": { "type": "string" },
        "bidderUser": { "type": "integer", "format": "int32" },
        "contactUsLinkAlert": { "type": "integer", "format": "int32" },
        "orgStatus": { "type": "integer", "format": "int32" },
        "commentOnMyContent_byEmail": { "type": "integer", "format": "int32" },
        "commentOnICommented_byEmail": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthored_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEdited_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssigned_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssigned_byEmail": { "type": "integer", "format": "int32" },
        "mentionsOn_byEmail": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthored_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLiked_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "startFollowingMe_byEmail": { "type": "integer", "format": "int32" },
        "sendPrivateMessage_byEmail": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavourited_byEmail": {
          "type": "integer",
          "format": "int32"
        },
        "commentOnMyContent_byBadge": { "type": "integer", "format": "int32" },
        "commentOnICommented_byBadge": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthored_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEdited_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssigned_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssigned_byBadge": { "type": "integer", "format": "int32" },
        "mentionsOn_byBadge": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthored_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLiked_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "startFollowingMe_byBadge": { "type": "integer", "format": "int32" },
        "sendPrivateMessage_byBadge": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavourited_byBadge": {
          "type": "integer",
          "format": "int32"
        },
        "activityNotificationTypeAlias": { "type": "string" },
        "searchUserName": { "type": "string" },
        "noOfParticipants": { "type": "integer", "format": "int32" },
        "grpORGStatusID": { "type": "integer", "format": "int32" },
        "systemGroupParticipant": { "type": "integer", "format": "int32" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "userStatus": { "type": "integer", "format": "int32" },
        "isSystemUser": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "startPosition": { "type": "integer", "format": "int32" },
        "order": { "type": "integer", "format": "int32" },
        "grpDetailsList": {
          "type": "array",
          "items": { "$ref": "#/definitions/GriffinSiteGroup" }
        },
        "activeUsers": { "type": "integer", "format": "int32" },
        "encryptedUserId": { "type": "string" },
        "isInternal": { "type": "integer", "format": "int32" },
        "commentOnMyContentByPush": { "type": "integer", "format": "int32" },
        "commentOnICommentedByPush": { "type": "integer", "format": "int32" },
        "editContentIHaveAuthoredByPush": {
          "type": "integer",
          "format": "int32"
        },
        "editContentIHaveEditedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "editOrCommentTaskIHaveAssignedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "newTaskAssignedByPush": { "type": "integer", "format": "int32" },
        "mentionsOnByPush": { "type": "integer", "format": "int32" },
        "likeContentIHaveAuthoredByPush": {
          "type": "integer",
          "format": "int32"
        },
        "likeContentIHaveLikedByPush": { "type": "integer", "format": "int32" },
        "startFollowingMeByPush": { "type": "integer", "format": "int32" },
        "sendPrivateMessageByPush": { "type": "integer", "format": "int32" },
        "editOrCommentContentIHavefavouritedByPush": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByPush": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByBadge": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnMyContentByEmail": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByEmail": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByBadge": {
          "type": "integer",
          "format": "int32"
        },
        "isheetCommentOnICommentedOnByPush": {
          "type": "integer",
          "format": "int32"
        },
        "contentApprovalsByEmail": { "type": "integer", "format": "int32" },
        "contentApprovalsByBadge": { "type": "integer", "format": "int32" },
        "contentApprovalsByPush": { "type": "integer", "format": "int32" },
        "businessUser": { "type": "boolean" },
        "loginUserID": { "type": "integer", "format": "int32" },
        "sitegrpid": { "type": "integer", "format": "int32" },
        "sitegrplist": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "siteIdCSV": { "type": "string" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "encryptUserID": { "type": "string" },
        "group": { "type": "string" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "fromAPI": { "type": "boolean" },
        "qaAdminAccess": { "type": "boolean" },
        "internalAdminAccess": { "type": "boolean" },
        "reportingAdminAccess": { "type": "boolean" },
        "memberAdminAccess": { "type": "boolean" },
        "escappedJSFullName": { "type": "string" },
        "anySystemGroupParticipantUser": { "type": "boolean" },
        "orgCountry": { "type": "string" },
        "anyAdminAccess": { "type": "boolean" },
        "following": { "type": "integer", "format": "int32" },
        "orgCity": { "type": "string" },
        "createSiteAccess": { "type": "boolean" },
        "qaAccess": { "type": "boolean" }
      }
    },
    "PropertyTypeCommonObject": {
      "type": "object",
      "properties": {
        "typeID": { "type": "integer", "format": "int32" },
        "propertyTypePropertyKey": { "type": "string" },
        "displayNameValueID": { "type": "integer", "format": "int32" },
        "resourceBundleWithLocale": { "type": "integer", "format": "int32" },
        "alias": { "type": "string" },
        "propertyKey": { "type": "string" },
        "secondaryPropertyTypePropertyKey": { "type": "string" },
        "isGeneric": { "type": "boolean" },
        "inlineEdit": { "type": "boolean" },
        "camden": { "type": "boolean" },
        "camdenTopic": { "type": "string" },
        "kiraWorksheet": { "type": "string" },
        "displayName": { "type": "string" }
      }
    },
    "QAAnswer": {
      "type": "object",
      "properties": {
        "answerID": { "type": "integer", "format": "int32" },
        "answerText": { "type": "string" },
        "answeredDate": { "type": "string" },
        "noOfattachments": { "type": "integer", "format": "int32" },
        "noOfLinks": { "type": "integer", "format": "int32" },
        "answeredByID": { "type": "integer", "format": "int32" },
        "answeredUserName": { "type": "string" },
        "answeredUserOrganizationName": { "type": "string" },
        "activityTypeID": { "type": "integer", "format": "int32" },
        "questionID": { "type": "integer", "format": "int32" },
        "parentQuestionID": { "type": "integer", "format": "int32" },
        "rowID": { "type": "integer", "format": "int32" },
        "arrAnswerDocumentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "arrAnswerAttachmentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/QaAttachment" }
        },
        "groupListAnswer": { "type": "string" },
        "isSiteParticipantForAnswer": { "type": "integer", "format": "int32" },
        "qaStatusID": { "type": "integer", "format": "int32" },
        "ansUserModifiedTime": { "type": "integer", "format": "int64" },
        "answerDate": { "type": "string", "format": "date-time" },
        "currentDate": { "type": "string", "format": "date-time" },
        "answeredUserOrganizationID": { "type": "integer", "format": "int32" },
        "arrDocCSV": { "type": "string" },
        "arrAttachmentCSV": { "type": "string" }
      }
    },
    "QAQuestion": {
      "type": "object",
      "properties": {
        "questionID": { "type": "integer", "format": "int32" },
        "parentQuestionID": { "type": "integer", "format": "int32" },
        "referenceTypeID": { "type": "integer", "format": "int32" },
        "topicID": { "type": "integer", "format": "int32" },
        "priorityID": { "type": "integer", "format": "int32" },
        "activityTypeID": { "type": "integer", "format": "int32" },
        "referredID": { "type": "integer", "format": "int32" },
        "statusID": { "type": "integer", "format": "int32" },
        "disCloseToAll": { "type": "integer", "format": "int32" },
        "questionText": { "type": "string" },
        "submittedBy": { "type": "integer", "format": "int32" },
        "approvedBy": { "type": "integer", "format": "int32" },
        "approvedDate": { "type": "string", "format": "date-time" },
        "activityFromDate": { "type": "string", "format": "date-time" },
        "activityToDate": { "type": "string", "format": "date-time" },
        "questionOwnerID": { "type": "integer", "format": "int32" },
        "referenceDisplayName": { "type": "string" },
        "referredName": { "type": "string" },
        "statusDisplayName": { "type": "string" },
        "statusAliasName": { "type": "string" },
        "statusDisplayPrefix": { "type": "string" },
        "topicName": { "type": "string" },
        "priorityDisplayName": { "type": "string" },
        "priorityAliasName": { "type": "string" },
        "disclosedToAll": { "type": "integer", "format": "int32" },
        "questionCreatedDate": { "type": "string" },
        "questionSubmittedDate": { "type": "string" },
        "isAnswered": { "type": "integer", "format": "int32" },
        "lastReviewDate": { "type": "string" },
        "lastActivityDate": { "type": "string" },
        "questionOwnerName": { "type": "string" },
        "questionOwnerEmail": { "type": "string" },
        "questionOwnerOrganizationName": { "type": "string" },
        "questionStatusID": { "type": "integer", "format": "int32" },
        "questionCount": { "type": "integer", "format": "int32" },
        "questionActivityFromDate": { "type": "string" },
        "questionActivityToDate": { "type": "string" },
        "siteName": { "type": "string" },
        "docID": { "type": "integer", "format": "int32" },
        "docName": { "type": "string" },
        "docFolderID": { "type": "integer", "format": "int32" },
        "folderName": { "type": "string" },
        "disclosedOrganisationCount": { "type": "integer", "format": "int32" },
        "leafQuestionID": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "userID": { "type": "integer", "format": "int32" },
        "discloseToOrgList": { "type": "string" },
        "isSiteParticipant": { "type": "integer", "format": "int32" },
        "groupList": { "type": "string" },
        "extension": { "type": "string" },
        "version": { "type": "integer", "format": "int32" },
        "lastReviewDateObj": { "type": "string", "format": "date-time" },
        "lastActivityDateObj": { "type": "string", "format": "date-time" },
        "qaAttachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/FileUpload" }
        },
        "arrQuestionDocList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "qaReferenceDoc": { "$ref": "#/definitions/DocumentForm" },
        "arrQuestionAttList": {
          "type": "array",
          "items": { "$ref": "#/definitions/QaAttachment" }
        },
        "answerList": {
          "type": "array",
          "items": { "$ref": "#/definitions/QAAnswer" }
        },
        "leafAnswerID": { "type": "integer", "format": "int32" },
        "leafAnswerStatusID": { "type": "integer", "format": "int32" },
        "firstAnswerUserOrgName": { "type": "string" },
        "firstAnswerDate": { "type": "string" },
        "applyTermsAndCondition": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "qaSortByOption": { "type": "string" },
        "qaSortOrderOption": { "type": "integer", "format": "int32" },
        "quesUserlastModifiedTime": { "type": "integer", "format": "int64" },
        "questionDate": { "type": "string", "format": "date-time" },
        "currentDate": { "type": "string", "format": "date-time" },
        "orgGroupID": { "type": "integer", "format": "int32" },
        "orgID": { "type": "integer", "format": "int32" },
        "groupID": { "type": "integer", "format": "int32" },
        "questionSequenceNo": { "type": "integer", "format": "int32" },
        "questionDisclosed": { "type": "integer", "format": "int32" },
        "qaFilterQuestionID": { "type": "string" },
        "groupIdList": { "type": "string" },
        "includeDiscloseQuestion": { "type": "boolean" },
        "questionOwnerOrganizationID": { "type": "integer", "format": "int32" },
        "startPosition": { "type": "integer", "format": "int32" },
        "limit": { "type": "integer", "format": "int32" },
        "topicExpert": { "type": "integer", "format": "int32" },
        "commentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/QAQuestion" }
        },
        "askQuestion": { "type": "integer", "format": "int32" },
        "viewAllQuestion": { "type": "integer", "format": "int32" },
        "smartFolder": { "type": "boolean" },
        "viewerSupport": { "type": "integer", "format": "int32" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "convertToPDF": { "type": "integer", "format": "int32" },
        "arrQuestionDocCSV": { "type": "string" },
        "arrQuestionAttachmentCSV": { "type": "string" },
        "leafAnswerStatusDisplayName": { "type": "string" },
        "queAttachment": {
          "type": "array",
          "items": { "$ref": "#/definitions/FileUpload" }
        },
        "ocrViewerSupport": { "type": "integer", "format": "int32" }
      }
    },
    "QaAttachment": {
      "type": "object",
      "properties": {
        "attachmentID": { "type": "integer", "format": "int32" },
        "attachmentName": { "type": "string" },
        "extension": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "siteID": { "type": "integer", "format": "int32" },
        "applyTermsAndCondition": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "documentSize": { "type": "integer", "format": "int64" },
        "extensionForReport": { "type": "string" },
        "contextUploadDate": { "type": "string" },
        "pdfDocIcon": { "type": "string" },
        "viewerSupport": { "type": "integer", "format": "int32" },
        "icon": { "type": "string" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "convertToPDF": { "type": "integer", "format": "int32" },
        "largePdfDocIcon": { "type": "string" },
        "largeIcon": { "type": "string" },
        "ocrViewerSupport": { "type": "integer", "format": "int32" }
      }
    },
    "RecurrenceDetails": {
      "type": "object",
      "properties": {
        "repeatInterval": { "type": "string" },
        "occurrencesNumber": { "type": "string" },
        "repeatEndDate": { "type": "string" },
        "repeatEndDateTime": { "type": "string", "format": "date-time" },
        "templateName": { "type": "string" },
        "templateDescription": { "type": "string" },
        "recurrenceType": {
          "type": "string",
          "enum": ["NONE", "DAILY", "WEEKLY", "MONTHLY", "ANNUAL"]
        },
        "repeatWeekDay": { "type": "string" },
        "repeatWeekDayFullValue": { "type": "string" },
        "repeatMonthDay": { "type": "string" },
        "repeatMonth": { "type": "string" },
        "repeatMonthDayFullValue": { "type": "string" },
        "intervalEndingType": { "type": "string" },
        "repeatStartDateTime": { "type": "string", "format": "date-time" },
        "repeatStartDate": { "type": "string" },
        "eventDuration": { "type": "integer", "format": "int64" },
        "eventID": { "type": "integer", "format": "int32" },
        "id": { "type": "integer", "format": "int32" }
      }
    },
    "ResourceBundle": {
      "type": "object",
      "properties": {
        "locale": { "$ref": "#/definitions/Locale" },
        "keys": { "$ref": "#/definitions/EnumerationString" },
        "baseBundleName": { "type": "string" }
      }
    },
    "SheetItem": {
      "type": "object",
      "properties": {
        "createdBy": { "type": "string" },
        "createdDate": { "type": "string" },
        "modifiedBy": { "type": "string" },
        "modifiedDate": { "type": "string" },
        "modifiedUserName": { "type": "string" },
        "siteID": { "type": "integer", "format": "int32" },
        "sheetID": { "type": "integer", "format": "int32" },
        "siteName": { "type": "string" },
        "sheetName": { "type": "string" },
        "itemID": { "type": "integer", "format": "int32" },
        "draftID": { "type": "integer", "format": "int32" },
        "activityTypeAlias": { "type": "string" },
        "displayModifiedDateType": { "type": "string" },
        "displayModifiedDateAsDate": {
          "type": "string",
          "format": "date-time"
        },
        "publishedDate": { "type": "string", "format": "date-time" },
        "weekly": { "type": "integer", "format": "int32" },
        "daily": { "type": "integer", "format": "int32" },
        "createdDateAsDate": { "type": "string", "format": "date-time" },
        "modifiedDateAsDate": { "type": "string", "format": "date-time" },
        "createdByEmail": { "type": "string" },
        "createdByOrgName": { "type": "string" },
        "modifiedByEmail": { "type": "string" },
        "modifiedByOrgName": { "type": "string" },
        "createdByID": { "type": "integer", "format": "int32" },
        "modifiedByID": { "type": "integer", "format": "int32" },
        "versionID": { "type": "integer", "format": "int32" },
        "createDateFormat": { "type": "string" },
        "modifiedDateFormat": { "type": "string" },
        "itemDataList": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetItemData" }
        },
        "modifiedDateOriginal": { "type": "string", "format": "date-time" },
        "editPermission": { "type": "integer", "format": "int32" }
      }
    },
    "ShowVersionType": {
      "type": "object",
      "properties": {
        "typeID": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "alias": { "type": "string" }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "siteId": { "type": "integer", "format": "int32" },
        "siteName": { "type": "string" },
        "instanceName": { "type": "string" },
        "matterNumber": { "type": "string" },
        "clientNumber": { "type": "string" }
      }
    },
    "SiteCategory": {
      "type": "object",
      "properties": {
        "categoryID": { "type": "integer", "format": "int32" },
        "categoryName": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "defaultCategory": { "type": "integer", "format": "int32" },
        "siteCategoryDefaultName": { "type": "string" },
        "defaultLanguageCategoryName": { "type": "string" }
      }
    },
    "SiteModulePermission": {
      "type": "object",
      "properties": {
        "homeModuleAccess": { "type": "boolean" },
        "activityModuleAccess": { "type": "boolean" },
        "documentModuleAccess": { "type": "boolean" },
        "wikiModuleAccess": { "type": "boolean" },
        "blogModuleAccess": { "type": "boolean" },
        "taskModuleAccess": { "type": "boolean" },
        "eventModuleAccess": { "type": "boolean" },
        "qaModuleAccess": { "type": "boolean" },
        "isheetModuleAccess": { "type": "boolean" },
        "peopleModuleAccess": { "type": "boolean" },
        "adminModuleAccess": { "type": "boolean" },
        "siteAdminAccess": { "type": "boolean" },
        "memberAdminAccess": { "type": "boolean" },
        "contentAdminAccess": { "type": "boolean" },
        "reportAdminAccess": { "type": "boolean" },
        "qaAdminAccess": { "type": "boolean" },
        "allowSiteAdministration": { "type": "boolean" },
        "memberAdminEnforceGroup": { "type": "boolean" },
        "bidderSite": { "type": "boolean" },
        "accept": { "type": "string" },
        "homepage": { "type": "string" },
        "siteModifiedDate": { "type": "string", "format": "date-time" },
        "refreshCacheKey": { "type": "string" }
      }
    },
    "SiteModules": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "configureDisplayName": { "type": "string" },
        "alias": { "type": "string" },
        "allowAsHomePage": { "type": "integer", "format": "int32" },
        "propertyName": { "type": "string" },
        "allowAsModule": { "type": "integer", "format": "int32" },
        "sortOrder": { "type": "integer", "format": "int32" },
        "defaultDisplayName": { "type": "string" },
        "encodedDisplayName": { "type": "string" }
      }
    },
    "SiteStatus": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "siteStatusPropertyKey": { "type": "string" },
        "statusAlias": { "type": "string" },
        "defaultStatusName": { "type": "string" },
        "statusDisplayName": { "type": "string" }
      }
    },
    "SystemProperty": {
      "type": "object",
      "properties": {
        "propertyID": { "type": "integer", "format": "int32" },
        "typeAlias": { "type": "string" },
        "defaultValue": { "type": "string" },
        "mandatory": { "type": "integer", "format": "int32" },
        "propertyCategory": { "type": "string" },
        "description": { "type": "string" },
        "propertyDisplayName": { "type": "string" },
        "propertyValue": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "defaultProperty": { "type": "boolean" },
        "cronJobClassName": { "type": "string" },
        "escappedJSPropertyValue": { "type": "string" },
        "encodePropertyValue": { "type": "string" }
      }
    },
    "TaskAssigneeUserAndGroupList": {
      "type": "object",
      "properties": {
        "value": { "type": "string" },
        "category": { "type": "string" },
        "name": { "type": "string" },
        "taskAssigneeID": { "type": "integer", "format": "int32" },
        "taskAssigneeTypeID": { "type": "integer", "format": "int32" },
        "assigneePosition": { "type": "integer", "format": "int32" },
        "assigneeAvatar": { "type": "integer", "format": "int32" },
        "taskAssigneeName": { "type": "string" },
        "taskAssigneeEmail": { "type": "string" },
        "taskAssigneeJobTitle": { "type": "string" },
        "taskAssigneeFollow": { "type": "integer", "format": "int32" },
        "taskTitle": { "type": "string" },
        "taskGroupCount": { "type": "string" },
        "taskAssigneeOrganisation": { "type": "string" },
        "taskAssigneeCity": { "type": "string" },
        "taskAssigneeCountry": { "type": "string" },
        "groupSourceTypeID": { "type": "integer", "format": "int32" },
        "taskID": { "type": "integer", "format": "int32" },
        "escappedJSTaskAssigneeName": { "type": "string" },
        "groupDisplayNameWithType": { "type": "string" }
      }
    },
    "TaskGroupByOption": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "displayName": { "type": "string" },
        "alias": { "type": "string" }
      }
    },
    "TaskSortOrderByOption": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "propertyKey": { "type": "string" },
        "alias": { "type": "string" }
      }
    },
    "TaskViewByOption": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "propertyKey": { "type": "string" },
        "alias": { "type": "string" }
      }
    },
    "UsefulUrlLink": {
      "type": "object",
      "properties": {
        "urlId": { "type": "integer", "format": "int32" },
        "url": { "type": "string" },
        "displayName": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "linkToolID": { "type": "integer", "format": "int32" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "instanceName": { "type": "string" }
      }
    },
    "UserAgent": {
      "type": "object",
      "properties": {
        "geckoNavigator": { "type": "boolean" },
        "mozillaNavigator": { "type": "boolean" },
        "macOSChromeNavigator": { "type": "boolean" },
        "macOSNavigator": { "type": "boolean" },
        "mobileNavigator": { "type": "boolean" },
        "chromeNavigator": { "type": "boolean" },
        "ie": { "type": "boolean" },
        "userAgent": { "type": "string" },
        "ip": { "type": "string" }
      }
    },
    "UserExperience": {
      "type": "object",
      "properties": {
        "companyName": { "type": "string" },
        "industryID": { "type": "integer", "format": "int32" },
        "jobTitle": { "type": "string" },
        "location": { "type": "string" },
        "currentlyworking": { "type": "boolean" },
        "description": { "type": "string" },
        "industryName": { "type": "string" },
        "experienceFromDate": { "type": "string", "format": "date-time" },
        "experienceToDate": { "type": "string", "format": "date-time" },
        "fromMonth": { "type": "integer", "format": "int32" },
        "toMonth": { "type": "integer", "format": "int32" },
        "fromYear": { "type": "integer", "format": "int32" },
        "toYear": { "type": "integer", "format": "int32" },
        "totalMonth": { "type": "integer", "format": "int32" },
        "totalYear": { "type": "integer", "format": "int32" },
        "experienceID": { "type": "integer", "format": "int32" },
        "actionType": { "type": "string" },
        "companywebsite": { "type": "string" }
      }
    },
    "UserImage": {
      "type": "object",
      "properties": {
        "userImageID": { "type": "integer", "format": "int32" },
        "userImageExtension": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string" },
        "userImagePath": { "type": "string" },
        "microBlogID": { "type": "integer", "format": "int32" },
        "height": { "type": "integer", "format": "int32" },
        "width": { "type": "integer", "format": "int32" },
        "imageDocVersion": { "type": "integer", "format": "int32" },
        "imageDocSiteID": { "type": "integer", "format": "int32" },
        "privateMessageID": { "type": "integer", "format": "int32" },
        "rootMessageID": { "type": "integer", "format": "int32" },
        "commentID": { "type": "integer", "format": "int32" },
        "contentRefType": { "type": "string" },
        "commentRefID": { "type": "integer", "format": "int32" },
        "encryptedUserImageID": { "type": "string" },
        "encryptionFlag": { "type": "integer", "format": "int32" },
        "applianceDetailID": { "type": "integer", "format": "int32" },
        "imageType": { "type": "integer", "format": "int32" },
        "parentFolderID": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "contextViewerSupport": { "type": "integer", "format": "int32" },
        "contextSize": { "type": "integer", "format": "int64" },
        "contextName": { "type": "string" },
        "folderPath": { "type": "string" },
        "contextURL": { "type": "string" },
        "displayContextDataSize": { "type": "string" },
        "displayCreatedDateInConfiguredTimezone": { "type": "string" },
        "emailDocumentURL": { "type": "string" },
        "redactionStatus": { "type": "boolean" },
        "contextConvertToPDF": { "type": "integer", "format": "int32" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "documentTypeIcon": { "$ref": "#/definitions/DocumentTypeIcon" },
        "hasDownloadAccess": { "type": "boolean" }
      }
    },
    "UserLinkTool": {
      "type": "object",
      "properties": {
        "linkToolID": { "type": "integer", "format": "int32" },
        "linkToolName": { "type": "string" },
        "createdBy": { "type": "integer", "format": "int32" },
        "createdDate": { "type": "string", "format": "date-time" },
        "modifiedBy": { "type": "integer", "format": "int32" },
        "modifiedDate": { "type": "string", "format": "date-time" },
        "status": { "type": "integer", "format": "int32" }
      }
    },
    "UserLookUp": {
      "type": "object",
      "properties": {
        "userID": { "type": "integer", "format": "int32" },
        "userName": { "type": "string" },
        "userOrganization": { "type": "string" },
        "userEmailAddr": { "type": "string" },
        "userLookupPropertyValue": { "type": "string" },
        "encryptedUserID": { "type": "string" },
        "originalUserName": { "type": "string" },
        "groupId": { "type": "integer", "format": "int32" },
        "groupName": { "type": "string" },
        "groupDisplayNameWithType": { "type": "string" },
        "userLookupType": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "groupType": { "type": "string" },
        "userLookupDisplayValue": { "type": "string" },
        "userLoopuoDisplayId": { "type": "string" },
        "selfRegUser": { "type": "integer", "format": "int32" },
        "userOrganizationEmail": { "type": "string" }
      }
    },
    "UserMessaging": {
      "type": "object",
      "properties": {
        "userMessagingID": { "type": "integer", "format": "int32" },
        "messagingToolsID": { "type": "integer", "format": "int32" },
        "userMessagingName": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "messagingTools": { "$ref": "#/definitions/MessagingTool" }
      }
    },
    "Vocabulary": {
      "type": "object",
      "properties": {
        "typeID": { "type": "integer", "format": "int32" },
        "alias": { "type": "string" },
        "displayName": { "type": "string" },
        "defaultName": { "type": "string" },
        "propertyKey": { "type": "string" },
        "encodedDisplayName": { "type": "string" },
        "escappedJSDisplayName": { "type": "string" }
      }
    },
    "recentActivity": {
      "type": "object",
      "properties": {
        "userID": { "type": "integer", "format": "int32" },
        "userName": { "type": "string" },
        "userEmailAddress": { "type": "string" },
        "contextType": { "type": "string" },
        "contextID": { "type": "integer", "format": "int32" },
        "contextVersionID": { "type": "integer", "format": "int32" },
        "contextWorkflowStatusID": { "type": "integer", "format": "int32" },
        "contextRefVersionID": { "type": "integer", "format": "int32" },
        "contextCurrentVersionID": { "type": "integer", "format": "int32" },
        "contextName": { "type": "string" },
        "escappedJSContextName": { "type": "string" },
        "contextIndex": { "type": "string" },
        "contextParentIndex": { "type": "string" },
        "contextDataType": { "type": "string" },
        "contextCurrentDataType": { "type": "string" },
        "contextCurrentDataTypeIcon": { "type": "string" },
        "contextSiteID": { "type": "integer", "format": "int32" },
        "activityPerformDate": { "type": "string", "format": "date-time" },
        "contextExtension": { "type": "string" },
        "contextViewerSupport": { "type": "integer", "format": "int32" },
        "contextHtmlText": { "type": "string" },
        "contextSnipate": { "type": "string" },
        "contextParentID": { "type": "integer", "format": "int32" },
        "toDate": { "type": "string" },
        "fromDate": { "type": "string" },
        "dateSelected": { "type": "integer", "format": "int32" },
        "unreadDocument": { "type": "integer", "format": "int32" },
        "sinceLastlogin": { "type": "integer", "format": "int32" },
        "activityFillter": { "type": "string" },
        "userAvatar": { "type": "integer", "format": "int32" },
        "userAvatarType": { "type": "string" },
        "batchActivityID": { "type": "integer", "format": "int32" },
        "batchActivityCount": { "type": "integer", "format": "int32" },
        "searchResultAbstractSummary": { "type": "string" },
        "searchResultTitle": { "type": "string" },
        "docFolderName": { "type": "string" },
        "contentTypeAlias": { "type": "string" },
        "contextRefID": { "type": "integer", "format": "int32" },
        "contextRefParentID": { "type": "integer", "format": "int32" },
        "taskAssigneeName": { "type": "string" },
        "taskDueDate": { "type": "string", "format": "date-time" },
        "contextURL": { "type": "string" },
        "contextDataSize": { "type": "integer", "format": "int64" },
        "displayContextDataSize": { "type": "string" },
        "activityTypeAlias": { "type": "string" },
        "documentPlaceHolder": { "type": "integer", "format": "int32" },
        "lastModifiedTime": { "type": "integer", "format": "int64" },
        "lastModifiedDate": { "type": "string", "format": "date-time" },
        "contextCreatedUserID": { "type": "integer", "format": "int32" },
        "contextCreatedUserName": { "type": "string" },
        "contextRefCreatedUserID": { "type": "integer", "format": "int32" },
        "contextRefCreatedUserName": { "type": "string" },
        "notificationTypeID": { "type": "integer", "format": "int32" },
        "contextLink": { "type": "string" },
        "documentComment": { "type": "string" },
        "applyTermsAndCondition": { "type": "integer", "format": "int32" },
        "filterGroup": { "type": "string" },
        "filterAssigneeID": { "type": "string" },
        "filterTaskListID": { "type": "integer", "format": "int32" },
        "filterPriorityTypeID": { "type": "integer", "format": "int32" },
        "filterTaskStatusTypeID": { "type": "string" },
        "filterShowAllTaskGroupName": { "type": "string" },
        "filterTaskID": { "type": "integer", "format": "int32" },
        "ocrConversionStatus": { "type": "integer", "format": "int32" },
        "currentDate": { "type": "string", "format": "date-time" },
        "siteID": { "type": "integer", "format": "int32" },
        "contextSiteName": { "type": "string" },
        "jobTitle": { "type": "string" },
        "userLikesList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLikes" }
        },
        "loggedUserLikesActivity": { "type": "boolean" },
        "contentRefTypeID": { "type": "integer", "format": "int32" },
        "contentTypeID": { "type": "integer", "format": "int32" },
        "contentRefTypeAlias": { "type": "string" },
        "commentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DBOComments" }
        },
        "commentActivityContextIcon": { "type": "string" },
        "contextRefCurrentVersionID": { "type": "integer", "format": "int32" },
        "activityTypeID": { "type": "integer", "format": "int32" },
        "noOfComments": { "type": "integer", "format": "int32" },
        "newCommentBoxOpen": { "type": "boolean" },
        "enableComment": { "type": "integer", "format": "int32" },
        "peopleFilter": { "type": "string" },
        "microblogAccessList": {
          "type": "array",
          "items": { "$ref": "#/definitions/MicroblogAccess" }
        },
        "userImageList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserImage" }
        },
        "userAttachmentList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "userGroupList": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "contextUserCreatedBy": { "type": "integer", "format": "int32" },
        "contextSize": { "type": "integer", "format": "int64" },
        "contextCreatedDate": { "type": "string", "format": "date-time" },
        "contextModifiedDate": { "type": "string", "format": "date-time" },
        "contextCreatedUserAvatar": { "type": "integer", "format": "int32" },
        "contextCreatedUserEmailAddress": { "type": "string" },
        "contextCreatedUserLastModifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "follow": { "type": "integer", "format": "int32" },
        "contextEditAccess": { "type": "integer", "format": "int32" },
        "orgName": { "type": "string" },
        "userLikesID": { "type": "integer", "format": "int32" },
        "favouriteSiteFillter": { "type": "string" },
        "richText": { "type": "integer", "format": "int32" },
        "folderPath": { "type": "string" },
        "blogCategoryList": {
          "type": "array",
          "items": { "$ref": "#/definitions/GriffinCategory" }
        },
        "eventDetail": { "$ref": "#/definitions/GriffinEvent" },
        "taskAssigneeList": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskAssigneeUserAndGroupList" }
        },
        "taskPriorityAlias": { "type": "string" },
        "microblogFavorite": { "type": "boolean" },
        "embedlyURL": { "type": "string" },
        "bulkDocumentMetaDataList": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentForm" }
        },
        "siteCategoryID": { "type": "integer", "format": "int32" },
        "favourite": { "type": "integer", "format": "int32" },
        "currentDocPosition": { "type": "integer", "format": "int32" },
        "userIDCSV": { "type": "string" },
        "rowNumCount": { "type": "integer", "format": "int32" },
        "mentionMe": { "type": "integer", "format": "int32" },
        "city": { "type": "string" },
        "userBio": { "type": "string" },
        "displayActivityPerformDate": { "type": "string" },
        "displayActivityPerformTime": { "type": "string" },
        "displayTitle": { "type": "string" },
        "location": { "type": "string" },
        "siteRootFolderID": { "type": "integer", "format": "int32" },
        "hasShareAccess": { "type": "boolean" },
        "searchContentID": { "type": "string" },
        "highlightApplied": { "type": "boolean" },
        "rowID": { "type": "integer", "format": "int32" },
        "internalAdmin": { "type": "boolean" },
        "bulkUploadDocumentIdCSV": { "type": "string" },
        "allUserLikesList": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserLikes" }
        },
        "contentCreatedUserID": { "type": "integer", "format": "int32" },
        "taskStatusTypeID": { "type": "integer", "format": "int32" },
        "taskPriorityTypeID": { "type": "integer", "format": "int32" },
        "oldValueMap": {
          "type": "object",
          "additionalProperties": { "type": "integer", "format": "int32" }
        },
        "documentSiteID": { "type": "integer", "format": "int32" },
        "taskDetailMap": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "dependedTaskActivityFlag": { "type": "integer", "format": "int32" },
        "siteObj": { "$ref": "#/definitions/Site" },
        "redactionStatus": { "type": "boolean" },
        "contextGroupId": { "type": "integer", "format": "int32" },
        "folderType": { "type": "string" },
        "homePageID": { "type": "integer", "format": "int32" },
        "eventRecurrenceTemplateID": { "type": "integer", "format": "int32" },
        "parentTaskID": { "type": "integer", "format": "int32" },
        "docFolderStatus": { "type": "integer", "format": "int32" },
        "likeCount": { "type": "string" },
        "commentCount": { "type": "string" },
        "siteCategoryName": { "type": "string" },
        "encryptUserID": { "type": "string" },
        "contextCreatedUserLastName": { "type": "string" },
        "contextConvertToPDF": { "type": "integer", "format": "int32" },
        "contextDataTypeLargeZipDocIcon": { "type": "string" },
        "contextDataTypeLargePdfDocIcon": { "type": "string" },
        "contextCreatedUserFirstName": { "type": "string" },
        "contextCreatedUserFullName": { "type": "string" },
        "contextDataTypeIcon": { "type": "string" },
        "contextDataTypeLargeIcon": { "type": "string" },
        "contextDataTypePdfDocIcon": { "type": "string" },
        "onlyTaskStatusChanged": { "type": "boolean" },
        "currentContextDataTypeLargeIcon": { "type": "string" },
        "contextCurrentDataTypeLargeIcon": { "type": "string" },
        "commentEditAccess": { "type": "boolean" },
        "displayTaskDueDate": { "type": "string" },
        "ocrSupport": { "type": "integer", "format": "int32" },
        "verifyActiveSite": { "type": "boolean" },
        "documentTypeIcon": { "$ref": "#/definitions/DocumentTypeIcon" },
        "hasDownloadAccess": { "type": "boolean" },
        "currentUserObj": { "$ref": "#/definitions/User" },
        "contextCurrentDataTypeConvertToPDF": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CETemplateDBO": {
      "type": "object",
      "properties": {
        "displayName": { "type": "string" },
        "ceTemplateReferenceName": { "type": "string" },
        "profileReference": { "type": "string" }
      },
      "xml": { "name": "cetemplate" }
    },
    "CETemplateListDBO": {
      "type": "object",
      "properties": {
        "cetemplate": {
          "type": "array",
          "items": {
            "xml": { "name": "cetemplate" },
            "$ref": "#/definitions/CETemplateDBO"
          }
        }
      },
      "xml": { "name": "cetemplates" }
    },
    "CeBulkDocGenerationRequestDBO": {
      "type": "object",
      "required": ["cetemplates", "isheetitems", "viewId"],
      "properties": {
        "viewId": { "type": "integer", "format": "int32" },
        "allItemsSelected": { "type": "boolean" },
        "isheetitems": { "$ref": "#/definitions/ISheetItemsDBO" },
        "cetemplates": { "$ref": "#/definitions/CETemplateListDBO" }
      },
      "xml": { "name": "cebulkdocsrequest" }
    },
    "SharedDBO": {
      "type": "object",
      "properties": {
        "entities": { "$ref": "#/definitions/SharedEntitiesDBO" }
      },
      "xml": { "name": "share" }
    },
    "SharedEntitiesDBO": {
      "type": "object",
      "properties": {
        "sharedEntityList": {
          "type": "array",
          "xml": { "name": "entity" },
          "items": {
            "xml": { "name": "entity" },
            "$ref": "#/definitions/SharedEntityDBO"
          }
        }
      },
      "xml": { "name": "entities" }
    },
    "SharedEntityDBO": {
      "type": "object",
      "properties": {
        "contentType": { "type": "string", "xml": { "name": "contenttype" } },
        "name": { "type": "string" },
        "location": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "icon": { "type": "string" },
        "size": { "type": "integer", "format": "int64" },
        "commentscount": { "type": "integer", "format": "int32" },
        "likescount": { "type": "integer", "format": "int32" },
        "taskscount": { "type": "integer", "format": "int32" },
        "createdBy": {
          "xml": { "name": "owner" },
          "$ref": "#/definitions/UserDBO"
        },
        "modifiedBy": { "$ref": "#/definitions/UserDBO" },
        "modifiedDate": { "type": "string", "xml": { "name": "modifieddate" } },
        "status": { "type": "string" },
        "documentExtension": { "type": "string", "xml": { "name": "type" } },
        "createdDate": { "type": "string", "xml": { "name": "sharedate" } }
      },
      "xml": { "name": "entity" }
    },
    "ReceivedDBO": {
      "type": "object",
      "properties": {
        "entities": { "$ref": "#/definitions/ReceivedEntitiesDBO" }
      },
      "xml": { "name": "receive" }
    },
    "ReceivedEntitiesDBO": {
      "type": "object",
      "properties": {
        "receivedEntityList": {
          "type": "array",
          "xml": { "name": "entity" },
          "items": {
            "xml": { "name": "entity" },
            "$ref": "#/definitions/ReceivedEntityDBO"
          }
        }
      },
      "xml": { "name": "entities" }
    },
    "ReceivedEntityDBO": {
      "type": "object",
      "properties": {
        "contentType": { "type": "string", "xml": { "name": "contenttype" } },
        "name": { "type": "string" },
        "id": { "type": "integer", "format": "int32" },
        "icon": { "type": "string" },
        "size": { "type": "integer", "format": "int64" },
        "createdBy": {
          "xml": { "name": "owner" },
          "$ref": "#/definitions/UserDBO"
        },
        "modifiedBy": { "$ref": "#/definitions/UserDBO" },
        "modifiedDate": { "type": "string", "xml": { "name": "modifieddate" } },
        "expires": { "type": "string" },
        "status": { "type": "string" },
        "documentExtension": { "type": "string", "xml": { "name": "type" } },
        "createdDate": { "type": "string", "xml": { "name": "receivedate" } },
        "location": { "type": "string" }
      },
      "xml": { "name": "entity" }
    },
    "ISheetStatus": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "propertyKey": { "type": "string" }
      },
      "xml": { "name": "status" }
    },
    "ISheetStatusListDBO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": { "$ref": "#/definitions/ISheetStatus" }
        }
      },
      "xml": { "name": "statuslist" }
    },
    "ISheetTypeDBO": {
      "type": "object",
      "properties": {
        "normal": { "type": "integer", "format": "int32" },
        "foldermetadata": { "type": "integer", "format": "int32" },
        "taskmetadata": { "type": "integer", "format": "int32" },
        "documentmetadata": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "type" }
    },
    "isheetItemDBO": {
      "type": "object",
      "properties": {
        "itemId": { "type": "integer", "format": "int32" },
        "externalId": { "type": "string" }
      },
      "xml": { "name": "item" }
    },
    "isheetItemsDBO": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "xml": { "name": "item" },
            "$ref": "#/definitions/isheetItemDBO"
          }
        },
        "nextStartPos": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "nextstartpos" }
        }
      },
      "xml": { "name": "items" }
    },
    "isheetItemCountDBO": {
      "type": "object",
      "properties": {
        "isheetID": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "isheetid" }
        },
        "totalRecordCount": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "totalrecordcount" }
        }
      },
      "xml": { "name": "isheet" }
    },
    "templateIsheetDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "status": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "isheet" }
    },
    "templateIsheetsDBO": {
      "type": "object",
      "properties": {
        "isheet": {
          "type": "array",
          "items": {
            "xml": { "name": "isheet" },
            "$ref": "#/definitions/templateIsheetDBO"
          }
        }
      },
      "xml": { "name": "isheets" }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "title": { "type": "string" },
        "actors": { "$ref": "#/definitions/Actors" },
        "activitytypealias": { "type": "string" },
        "contentreftypealias": { "type": "string" },
        "contenttypealias": { "type": "string" },
        "contentid": { "type": "string" },
        "createddate": { "type": "string" },
        "contentlink": { "type": "string" },
        "notified": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "notification" }
    },
    "Notifications": {
      "type": "object",
      "properties": {
        "notification": {
          "type": "array",
          "items": { "$ref": "#/definitions/Notification" }
        },
        "unreadnotificationcount": { "type": "string" }
      },
      "xml": { "name": "notifications" }
    },
    "NotificationSetting": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "type": { "type": "string" },
        "email": { "type": "string" },
        "online": { "type": "string" },
        "push": { "type": "string" }
      },
      "xml": { "name": "notificationsetting" }
    },
    "NotificationSettings": {
      "type": "object",
      "properties": {
        "notificationsetting": {
          "type": "array",
          "items": { "$ref": "#/definitions/NotificationSetting" }
        },
        "microblogaccess": { "type": "string" }
      },
      "xml": { "name": "notificationsettings" }
    },
    "NotificationFilter": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "alias": { "type": "string" }
      },
      "xml": { "name": "notificationfilter" }
    },
    "NotificationFiltersDBO": {
      "type": "object",
      "properties": {
        "notificationFilter": {
          "type": "array",
          "items": { "$ref": "#/definitions/NotificationFilter" }
        }
      },
      "xml": { "name": "notificationfilters" }
    },
    "Devicetoken": {
      "type": "object",
      "properties": {
        "token": { "type": "string" },
        "applicationname": { "type": "string" },
        "devicename": { "type": "string" },
        "devicetype": { "type": "string" },
        "appModeEnabled": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "devicetoken" }
    },
    "TwoFactorPairDevice": {
      "type": "object",
      "properties": {
        "totp": { "type": "string" },
        "devicetoken": { "$ref": "#/definitions/Devicetoken" }
      },
      "xml": { "name": "twoFactorPairDevice" }
    },
    "PersonDBO": {
      "type": "object",
      "properties": {
        "userid": { "type": "integer", "format": "int32" },
        "email": { "type": "string" },
        "httpavatar": { "type": "string" },
        "avatar": { "type": "string" },
        "userlink": { "type": "string" },
        "httplink": { "type": "string" },
        "phone": { "type": "string" },
        "mobile": { "type": "string" },
        "department": { "type": "string" },
        "username": { "$ref": "#/definitions/UserName" },
        "organisation": { "$ref": "#/definitions/OrganisationDBO" }
      },
      "xml": { "name": "person" }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "instanceName": { "type": "string" }
      }
    },
    "SearchParameterDBO": {
      "type": "object",
      "properties": {
        "searchTerm": { "type": "string" },
        "contentTypes": { "type": "array", "items": { "type": "string" } },
        "fileTypes": { "type": "array", "items": { "type": "string" } },
        "authors": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "tags": { "type": "array", "items": { "type": "string" } },
        "sites": { "type": "array", "items": { "$ref": "#/definitions/Site" } },
        "matterNumberList": { "type": "array", "items": { "type": "string" } },
        "clientNumberList": { "type": "array", "items": { "type": "string" } },
        "channels": {
          "type": "array",
          "items": { "$ref": "#/definitions/Channel" }
        },
        "fromDate": { "type": "string" },
        "toDate": { "type": "string" },
        "startIndex": { "type": "integer", "format": "int32" },
        "rowCount": { "type": "integer", "format": "int32" },
        "booleanOperation": { "type": "string" },
        "returnTotalResult": { "type": "boolean" },
        "timeZone": { "type": "string" },
        "dateFormat": { "type": "string" }
      }
    },
    "CommentMetaData": {
      "type": "object",
      "properties": {
        "contentRefId": { "type": "integer", "format": "int32" },
        "contentRefTypeAlias": { "type": "string" }
      }
    },
    "Context": {
      "type": "object",
      "properties": {
        "contextId": { "type": "integer", "format": "int32" },
        "contextName": { "type": "string" },
        "contextType": { "type": "string" },
        "contextURL": { "type": "string" }
      }
    },
    "DocumentMetaData": {
      "type": "object",
      "properties": {
        "folderPath": { "type": "string" },
        "folderURL": { "type": "string" },
        "folderId": { "type": "integer", "format": "int32" },
        "documentExtension": { "type": "string" },
        "defaultIconName": { "type": "string" },
        "contentVersion": { "type": "string" },
        "folderType": { "type": "string" }
      }
    },
    "Filter": {
      "type": "object",
      "properties": {
        "siteFacetList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Site" }
        },
        "matterNumberList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Site" }
        },
        "clientNumberList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Site" }
        },
        "authors": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "contentTypeList": { "type": "array", "items": { "type": "string" } },
        "fileTypes": { "type": "array", "items": { "type": "string" } },
        "tags": { "type": "array", "items": { "type": "string" } },
        "instanceDetailsMap": {
          "type": "array",
          "items": { "$ref": "#/definitions/Instance" }
        },
        "channels": {
          "type": "array",
          "items": { "$ref": "#/definitions/Channel" }
        }
      }
    },
    "Instance": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "instanceName": { "type": "string" },
        "instanceType": { "type": "string" },
        "instanceBaseURL": { "type": "string" },
        "progressivekey": { "type": "string" },
        "solrCore": { "type": "string" },
        "solrUrl": { "type": "string" },
        "siteIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "authors": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "clientNumbers": { "type": "array", "items": { "type": "string" } },
        "matterNumbers": { "type": "array", "items": { "type": "string" } },
        "folderIds": { "type": "array", "items": { "type": "string" } },
        "taxonomyIds": { "type": "array", "items": { "type": "string" } },
        "channelIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "browseChannelIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "excludeChannelIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        },
        "publicChannelIds": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        }
      }
    },
    "MicroblogMetaData": {
      "type": "object",
      "properties": {
        "sharedContextId": { "type": "integer", "format": "int32" },
        "sharedContextTitle": { "type": "string" },
        "groupLink": { "type": "string" },
        "site": { "$ref": "#/definitions/Site" },
        "sharedContextType": { "type": "string" }
      }
    },
    "OtherMetaData": {
      "type": "object",
      "properties": {
        "favourite": { "type": "boolean" },
        "shareAccess": { "type": "boolean" },
        "showContentAuthor": { "type": "boolean" },
        "showModifiedDateTime": { "type": "boolean" },
        "siteVisible": { "type": "boolean" },
        "applyAutoIndex": { "type": "boolean" },
        "attachmentFolderId": { "type": "integer", "format": "int32" }
      }
    },
    "PublisherMetaData": {
      "type": "object",
      "properties": {
        "entityId": { "type": "integer", "format": "int32" },
        "parentcontextId": { "type": "integer", "format": "int32" },
        "subcontextId": { "type": "integer", "format": "int32" },
        "channelTypeId": { "type": "integer", "format": "int32" },
        "entityType": { "type": "integer", "format": "int32" },
        "contentID": { "type": "integer", "format": "int32" },
        "addedType": { "type": "integer", "format": "int32" },
        "developmentDate": { "type": "integer", "format": "int64" },
        "docIcon": { "type": "string" },
        "docIconMap": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "extension": { "type": "string" },
        "linkURL": { "type": "string" },
        "linkTarget": { "type": "string" },
        "customURL": { "type": "string" },
        "customURLID": { "type": "integer", "format": "int32" },
        "dataMap": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "enableLandingPage": { "type": "boolean" },
        "viewURL": { "type": "string" },
        "parentName": { "type": "string" },
        "isPublic": { "type": "integer", "format": "int32" },
        "subEntityType": { "type": "string" },
        "accessType": { "type": "integer", "format": "int32" },
        "permissionType": { "type": "integer", "format": "int32" },
        "developmentDateOriginal": { "type": "integer", "format": "int64" },
        "fileSize": { "type": "integer", "format": "int32" },
        "fileSizeDisplay": { "type": "string" },
        "title": { "type": "string" },
        "createdByUser": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "SearchAPIResponse": {
      "type": "object",
      "properties": {
        "searchResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/SearchAPIResult" }
        },
        "filters": { "$ref": "#/definitions/Filter" },
        "searchCacheKey": { "type": "string" },
        "searchResultCount": { "type": "integer", "format": "int64" }
      }
    },
    "SearchAPIResult": {
      "type": "object",
      "properties": {
        "author": { "$ref": "#/definitions/User" },
        "instance": { "$ref": "#/definitions/Instance" },
        "lastModifiedDateTime": { "type": "string" },
        "searchHighLightText": { "type": "string" },
        "documentMetaData": { "$ref": "#/definitions/DocumentMetaData" },
        "site": { "$ref": "#/definitions/Site" },
        "commentMetaData": { "$ref": "#/definitions/CommentMetaData" },
        "wikiMetaData": { "$ref": "#/definitions/WikiMetaData" },
        "accessList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Context" }
        },
        "contextId": { "type": "integer", "format": "int32" },
        "contextName": { "type": "string" },
        "contextType": { "type": "string" },
        "contextURL": { "type": "string" },
        "contextParentID": { "type": "integer", "format": "int32" },
        "lastModifiedDate": { "type": "string", "format": "date-time" },
        "searchResultAbstractSummary": { "type": "string" },
        "microblogMetaData": { "$ref": "#/definitions/MicroblogMetaData" },
        "otherMeta": { "$ref": "#/definitions/OtherMetaData" },
        "publisherMetaData": { "$ref": "#/definitions/PublisherMetaData" }
      }
    },
    "WikiMetaData": {
      "type": "object",
      "properties": {
        "wikiParentId": { "type": "string" },
        "contentVersion": { "type": "string" }
      }
    },
    "UnifiedSearchRequestParameterDBO": {
      "type": "object",
      "properties": {
        "searchTerm": { "type": "string" },
        "filterInstances": {
          "type": "array",
          "items": { "$ref": "#/definitions/Instance" }
        },
        "contentTypes": { "type": "array", "items": { "type": "string" } },
        "fileTypes": { "type": "array", "items": { "type": "string" } },
        "tags": { "type": "array", "items": { "type": "string" } },
        "fromDate": { "type": "string" },
        "toDate": { "type": "string" },
        "startIndex": { "type": "integer", "format": "int32" },
        "rowCount": { "type": "integer", "format": "int32" },
        "booleanOperation": { "type": "string" },
        "returnTotalResult": { "type": "boolean" },
        "timeZone": { "type": "string" },
        "dateFormat": { "type": "string" }
      }
    },
    "Tag": {
      "type": "object",
      "properties": { "value": { "type": "string" } }
    },
    "Tags": {
      "type": "object",
      "properties": {
        "tag": { "type": "array", "items": { "$ref": "#/definitions/Tag" } }
      }
    },
    "TaskAssigneeDBO": {
      "type": "object",
      "properties": {
        "assigneeid": { "type": "integer", "format": "int32" },
        "assigneename": { "type": "string" }
      }
    },
    "TaskAssigneesDBO": {
      "type": "object",
      "properties": {
        "assignee": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskAssigneeDBO" }
        }
      }
    },
    "TaskListDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "index": { "type": "string" },
        "title": { "type": "string" },
        "mattermaplistid": { "type": "string" },
        "type": { "type": "string" },
        "tasks": { "$ref": "#/definitions/TasksDBO" },
        "resource": { "type": "string" }
      }
    },
    "TaskListsDBO": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskListDBO" }
        }
      }
    },
    "TaskPriorityDBO": {
      "type": "object",
      "properties": {
        "priorityid": { "type": "string" },
        "priorityname": { "type": "string" }
      },
      "xml": { "name": "priority" }
    },
    "TaskStatusDBO": {
      "type": "object",
      "properties": {
        "statusid": { "type": "integer", "format": "int32" },
        "statusname": { "type": "string" }
      }
    },
    "TaskTemplateRequestDBO": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int32" },
        "templatename": { "type": "string" },
        "description": { "type": "string" },
        "status": { "type": "integer", "format": "int32" },
        "mattermaptemplateid": { "type": "string" },
        "contributor": { "type": "string" },
        "jurisdictionname": { "type": "string" },
        "jurisdictionalias": { "type": "string" },
        "practicename": { "type": "string" },
        "lists": { "$ref": "#/definitions/TaskListsDBO" },
        "ishighq": { "type": "integer", "format": "int32" }
      },
      "xml": { "name": "template" }
    },
    "TasksDBO": {
      "type": "object",
      "properties": {
        "task": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskDBO" }
        }
      }
    },
    "GroupWikiPermissionDBO": {
      "type": "object",
      "properties": {
        "groupid": { "type": "integer", "format": "int32" },
        "viewaccess": { "type": "boolean" },
        "editaccess": { "type": "boolean" }
      }
    },
    "GroupWikiPermissionsDBO": {
      "type": "object",
      "properties": {
        "group": {
          "type": "array",
          "items": { "$ref": "#/definitions/GroupWikiPermissionDBO" }
        }
      }
    },
    "UserWikiPermissionDBO": {
      "type": "object",
      "properties": {
        "userid": { "type": "integer", "format": "int32" },
        "viewaccess": { "type": "boolean" },
        "editaccess": { "type": "boolean" }
      }
    },
    "UserWikiPermissionsDBO": {
      "type": "object",
      "properties": {
        "user": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserWikiPermissionDBO" }
        }
      }
    },
    "WikiPermissionDBO": {
      "type": "object",
      "properties": {
        "inheritparentwiki": { "type": "integer", "format": "int32" },
        "users": { "$ref": "#/definitions/UserWikiPermissionsDBO" },
        "groups": { "$ref": "#/definitions/GroupWikiPermissionsDBO" }
      }
    },
    "WikiRequestDBO": {
      "type": "object",
      "properties": {
        "wikititle": { "type": "string" },
        "wikicontent": { "type": "string" },
        "wikidraftid": { "type": "integer", "format": "int32" },
        "attachments": { "type": "string" },
        "tags": { "type": "string" },
        "notificationid": { "type": "integer", "format": "int32" },
        "publishstatus": { "type": "integer", "format": "int32" },
        "showcomment": { "type": "integer", "format": "int32" },
        "parentwikiid": { "type": "integer", "format": "int32" },
        "permission": { "$ref": "#/definitions/WikiPermissionDBO" }
      },
      "xml": { "name": "wiki" }
    },
    "WikisDBO": {
      "type": "object",
      "properties": {
        "wiki": {
          "type": "array",
          "items": { "$ref": "#/definitions/WikiDBO" }
        }
      },
      "xml": { "name": "wikis" }
    }
  }
}
